{
   "components": [
      {
         "id": "app.admin.platform",
         "name": "nabONE Admin Page",
         "dependencies": [
            "app.admin",
            "api.nabone",
            "nabone.components"
         ],
         "roles": [
            "NABONE_SUPER"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-admin/components/app.admin.platform/app.admin.platform.min.js?1547009616366",
                  "nabone-admin/components/app.admin.platform/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "nabONE Users",
                  "widgetId": "nabone-users",
                  "displayOrder": 1,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-admin/components/app.admin.platform/partials/users.html",
                  "widgetData": {
                     "fillWindow": true
                  },
                  "tileConfig": {
                     "label": "nabONE Users",
                     "backgroundImage": "nabone-admin/components/app.admin/resources/nab-admin-tile-user-sm.png",
                     "tileClass": "tile-sm",
                     "order": 1
                  }
               }
            },
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "nabONE Roles",
                  "widgetId": "nabone-roles",
                  "displayOrder": 2,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-admin/components/app.admin.platform/partials/roles.html",
                  "widgetData": {
                     "fillWindow": true
                  },
                  "tileConfig": {
                     "label": "nabONE Roles",
                     "backgroundImage": "nabone-admin/components/app.admin/resources/nab-admin-tile-roles-sm.png",
                     "tileClass": "tile-sm",
                     "order": 2
                  }
               }
            },
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "nabONE Packages",
                  "widgetId": "nabone-packages",
                  "displayOrder": 3,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-admin/components/app.admin.platform/partials/packages.html",
                  "widgetData": {
                     "fillWindow": true
                  },
                  "tileConfig": {
                     "label": "nabONE Packages",
                     "backgroundImage": "nabone-admin/components/app.admin/resources/nab-admin-tile-packages-sm.png",
                     "tileClass": "tile-sm",
                     "order": 3
                  }
               }
            },
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "nabONE Profiles",
                  "widgetId": "nabone-profiles",
                  "displayOrder": 4,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-admin/components/app.admin.platform/partials/profiles.html",
                  "widgetData": {
                     "fillWindow": true
                  },
                  "tileConfig": {
                     "label": "nabONE Profiles",
                     "backgroundImage": "nabone-admin/components/app.admin/resources/nab-admin-tile-profile-sm.png",
                     "tileClass": "tile-sm",
                     "order": 4
                  }
               }
            }
         ]
      },
      {
         "id": "app.admin",
         "name": "Consolidated administration component",
         "dependencies": [
            "nabone.components"
         ],
         "roles": [
            "NAB-Application-NPS-ADMIN",
            "NABONE_SUPER",
            "NAB-Application-PDT-Admin-Group"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-admin/components/app.admin/app.admin.min.js?1547009616366",
                  "nabone-admin/components/app.admin/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.admin.widgets",
               "name": "Widgets to appear in the consolidated admin list"
            }
         ],
         "plugins": [
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Administration"
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.admin",
                  "title": "Administration",
                  "contentUrl": "nabone-admin/components/app.admin/partials/OneAdminView.html",
                  "routes": [
                     "/app.administration"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Administration",
                     "path": "apps",
                     "icon": "cog",
                     "order": 140,
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/app.administration"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "Administration Home",
                  "widgetId": "admin-overview",
                  "displayOrder": 0,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-admin/components/app.admin/partials/AdminLanding.html",
                  "widgetData": {
                     "fillWindow": true,
                     "landingPage": true
                  }
               }
            }
         ]
      },
      {
         "id": "api.customer.accounts",
         "name": "Customer Account Summary",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.utils",
            "nabone.cache",
            "lib.moment"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer.accounts/api.customer.accounts.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.customer.accounts.url": "{{api.gateway.baseUrl}}/nab/customer/${meid}/accounts/brief/accounting?v=1",
                     "api.customer.accounts.baseUrl": "{{api.gateway.baseUrl}}",
                     "api.customer.accounts.withCredentials": true,
                     "api.customer.accounts.getAccountDetailsUrl": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/customer/${customerNabId}/account/${accountToken}?v=1",
                     "api.customer.accounts.getAccountDetailsMeidUrl": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/account/${accountToken}?v=4",
                     "api.customer.accounts.getAccountListSummaryUrl": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/customer/${customerNabId}/accounts/summary/${action}/${type}/${category}?v=1",
                     "api.customer.accounts.getAccountListBriefMeidUrl": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/accounts/brief?v=9",
                     "api.customer.accounts.getCustomerAccountOwnerUrl": "{{api.customer.accounts.baseUrl}}/${lineOfBusiness}/customer/${type}/${id}?v=1",
                     "api.customer.accounts.getTransactionDetailsMeidUrl": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/account/${accountToken}/transactions/${transactionType}/${fromNumber}/${toNumber}/${fromDate}/${toDate}/${fromAmount}/${toAmount}/${searchString}?v=7",
                     "api.customer.accounts.getNppTransactionDetailsUrl": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/account/${accountToken}/transaction/${transactionId}?v=1"
                  },
                  "dev": {}
               }
            }
         ]
      },
      {
         "id": "api.customer.accounts.ui",
         "name": "Customer Account Summary - Test UI Plugin",
         "dependencies": [
            "api.customer.accounts",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer.accounts",
                  "service": "api.customer.accounts.AccountsApiService",
                  "description": "Customer Accounts Service"
               }
            }
         ]
      },
      {
         "id": "api.customer.cards",
         "name": "Customer Card Activation",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.utils",
            "api.eesg"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer.cards/api.customer.cards.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.customer.cards.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.customer.cards.withCredentials": true,
                     "api.customer.cards.getCustomerCardsDetailUrl": "{{api.customer.cards.baseUrl}}/internal/nab/customer/${customerId}/cards/detailed?v=1",
                     "api.customer.cards.activateCardUrl": "{{api.customer.cards.baseUrl}}/internal/nab/customer/${customerId}/card/${cardToken}/activation?v=1",
                     "api.customer.cards.resetPinCardUrl": "{{api.customer.cards.baseUrl}}/internal/nab/customer/${customerId}/card/${cardToken}/pin?v=1"
                  },
                  "dev": {}
               }
            }
         ]
      },
      {
         "id": "api.customer.merchants",
         "name": "Merchant Documents API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache",
            "api.eesg"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer.merchants/api.customer.merchants.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.customer.merchants.lob": "merchant",
                     "api.customer.merchants.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.customer.merchants.withCredentials": true,
                     "api.customer.merchants.searchMerchantDocumentsUrl": "{{api.customer.merchants.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/documents/merchant/start/${start}/end/${end}/docType/${docType}/index/${index}/results/${results}?v=1",
                     "api.customer.merchants.getDocumentUrl": "{{api.customer.merchants.baseUrl}}/document/${context}/docToken/${docToken}/format/${fileFormat}?v=1",
                     "api.customer.merchants.settings.get": "{{api.customer.merchants.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/merchant/settings?v=1",
                     "api.customer.merchants.settings.update": "{{api.customer.merchants.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/merchant/settings?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.customer.merchants.ui",
         "name": "Merchant Documents - Test UI Plugin",
         "dependencies": [
            "api.customer.merchants",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer.merchants",
                  "service": "api.customer.merchants.MerchantDocumentsApiService",
                  "description": "Merchant Documents Service"
               }
            }
         ]
      },
      {
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.utils",
            "api.eesg"
         ],
         "id": "api.customer.paymentAlias",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer.paymentAlias/api.customer.paymentAlias.min.js?1547009616366"
               ]
            }
         ],
         "name": "Customer Payment Alias API",
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer.paymentAlias",
                  "service": "api.customer.paymentAlias.PaymentAliasService",
                  "description": "Payment Alias"
               }
            },
            {
               "config": {
                  "default": {
                     "api.customer.paymentAlias.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.customer.paymentAlias.retrieveAliasesForAccountUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/payments/accounts/aliases?v=1",
                     "api.customer.paymentAlias.retrieveAliasesForCustomerUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/customer/${customerId}/payments/aliases?v=1",
                     "api.customer.paymentAlias.lookupAliasIndustryUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/search/paymentAlias/industry?v=1",
                     "api.customer.paymentAlias.lookupAliasLocalUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/search/paymentAlias/local?v=1",
                     "api.customer.paymentAlias.checkAliasAvailabilityUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/payments/alias/availability/status?v=1",
                     "api.customer.paymentAlias.updateAliasStatusUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/payments/alias/status?v=1",
                     "api.customer.paymentAlias.generateAndSendOTPUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/payments/alias/otp?v=1",
                     "api.customer.paymentAlias.verifyOTPUrl": "{{api.customer.paymentAlias.baseUrl}}/internal/${lineOfBusiness}/payments/alias/otp?v=1",
                     "api.customer.paymentAlias.bankInfoUrl": "{{api.customer.paymentAlias.baseUrl}}/info/bank/${id}?v=1",
                     "api.customer.paymentAlias.withCredentials": true
                  },
                  "dev": {}
               },
               "point": "nabone.env.properties"
            }
         ]
      },
      {
         "id": "api.customer.profile",
         "name": "Customer Profile Service Engine API",
         "activator": "api.customer.profile.OchActivatorService",
         "dependencies": [
            "nabone.utils",
            "nabone.api",
            "nabone.env",
            "nabone.cache",
            "api.referenceData",
            "api.customer"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer.profile/api.customer.profile.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.customer.profile.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.customer.profile.withCredentials": true,
                     "api.customer.profile.refData.getRefDataUrl": "nabone-api-customer/components/api.customer.profile/resources/OchRefData.jsn",
                     "api.customer.profile.getCustomerProfileDetailedUrl": "{{api.customer.profile.baseUrl}}/internal/nab/customer/${customerNo}/profile/detailed?v=6",
                     "api.customer.profile.getCustomerProfileDetailUrl": "{{api.customer.profile.baseUrl}}/internal/nab/customer/${customerNo}/details?v=1",
                     "api.customer.profile.customerOAuthRegistrationUrl": "{{api.customer.profile.baseUrl}}/internal/nab/customer/${customerNin}/auth/registrations/${status}?v=1",
                     "api.customer.profile.deleteCustomerOAuthRegistrationUrl": "{{api.customer.profile.baseUrl}}/internal/nab/customer/${customerNin}/auth/registration/${registrationId}?v=1",
                     "api.customer.profile.updateCustomerConsent": "{{api.customer.profile.baseUrl}}/internal/nab/customer/${customerType}/${accountNumber}/tandc/wealth/findMySuper?v=1",
                     "api.customer.profile.updateCustomer": "{{api.customer.profile.baseUrl}}/internal/nab/customer/${customerId}/profile?v=3",
                     "api.customer.profile.createCustomer": "{{api.eesg.baseUrl}}/internal/nab/customer?v=${version}",
                     "api.customer.profile.createCustomer.defaultVersion": "2"
                  }
               }
            }
         ]
      },
      {
         "id": "api.customer.profile.ui",
         "name": "Customer Profile Service Engine API - Test UI Plugin",
         "dependencies": [
            "api.customer.profile",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer.profile",
                  "service": "api.customer.profile.CustomerProfileApiService",
                  "description": "Customer Profile"
               }
            }
         ]
      },
      {
         "id": "api.customer.search",
         "name": "API Customer Search",
         "dependencies": [
            "api.customer",
            "nabone.api",
            "api.nabone",
            "api.referenceData",
            "api.referenceData.utils"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer.search/api.customer.search.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": []
      },
      {
         "id": "api.customer",
         "name": "Customer API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache",
            "api.referenceData",
            "api.referenceData.utils",
            "nabone.components"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-customer/components/api.customer/api.customer.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.customer.ibsearch.ninUrl": "{{api.gateway.baseUrl}}/nab/customer/userId/${nin}?v=1",
                     "api.customer.ibsearch.accountNumberUrl": "{{api.gateway.baseUrl}}/nab/customer/accountNumber/${accountNumber}?v=1",
                     "api.customer.queryUrl": "{{api.eesg.baseUrl}}/internal/nab/customers/query?v=4",
                     "api.customer.getRelatedIds": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/ids?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.customer.ui",
         "name": "Customer API - Test UI Plugin",
         "dependencies": [
            "api.customer",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer",
                  "service": "api.customer.CustomerApiService",
                  "description": "Customer Data (IB)"
               }
            },
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer.query",
                  "service": "api.customer.CustomerQueryService",
                  "description": "Customer Query"
               }
            }
         ]
      },
      {
         "id": "api.dbox.onboarding",
         "name": "Dbox Onboarding Api",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.utils",
            "nabone.storage",
            "nabone.schema"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-dbox/components/api.dbox.onboarding/api.dbox.onboarding.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "config": {
                  "default": {
                     "api.dbox.onboarding.createOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission?v=2",
                     "api.dbox.onboarding.updateOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission/${applicationId}?v=2",
                     "api.dbox.onboarding.retrieveOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission/${applicationId}?v=${apiVersion}",
                     "api.dbox.onboarding.searchOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submissions/query?v=2",
                     "api.dbox.onboarding.linkEntityProfiles": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/relationships?v=1"
                  }
               },
               "point": "nabone.env.properties"
            }
         ],
         "pluginPoints": []
      },
      {
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.utils",
            "nabone.storage",
            "nabone.components"
         ],
         "id": "api.onboarding",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-dbox/components/api.onboarding/api.onboarding.min.js?1547009616366"
               ]
            }
         ],
         "name": "Kyc Persistence Services",
         "plugins": [
            {
               "config": {
                  "default": {
                     "api.onboarding.createOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission?v=1",
                     "api.onboarding.updateOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission/${applicationId}?v=1 ",
                     "api.onboarding.retrieveOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission/${applicationId}?v=${apiVersion}",
                     "api.onboarding.searchOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submissions/query?v=1",
                     "api.onboarding.notifyOnboardingCase": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission/${applicationId}/onboardingRequest?v=1",
                     "api.onboarding.notifyOnboardingSubmission": "{{api.eesg.baseUrl}}/internal/nab/onboarding/submission/${applicationId}/kycstatus?v=1"
                  }
               },
               "point": "nabone.env.properties"
            },
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "kycOnboardingCase"
               }
            }
         ]
      },
      {
         "dependencies": [
            "api.onboarding",
            "nabone.api.test"
         ],
         "id": "api.onboarding.ui",
         "name": "KYC Persistance Test UI Plugin",
         "plugins": [
            {
               "config": {
                  "apiId": "api.onboarding",
                  "description": "KYC Persistance",
                  "service": "api.onboarding.OnboardingApiService"
               },
               "point": "nabone.api.test.ui"
            }
         ]
      },
      {
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "id": "api.ifti",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-qas/components/api.ifti/api.ifti.min.js?1547009616366"
               ]
            }
         ],
         "name": "IFTI Services",
         "plugins": [
            {
               "config": {
                  "default": {
                     "api.ifti.validateAddress": "{{api.eesg.baseUrl}}/info/nab/address/validate?v=1"
                  }
               },
               "point": "nabone.env.properties"
            }
         ]
      },
      {
         "dependencies": [
            "api.ifti",
            "nabone.api.test"
         ],
         "id": "api.ifti.ui",
         "name": "Customer API in IFTI Test UI Plugin",
         "plugins": [
            {
               "config": {
                  "apiId": "api.ifti",
                  "description": "Customer API in IFTI",
                  "service": "api.ifti.IftiApiService"
               },
               "point": "nabone.api.test.ui"
            }
         ]
      },
      {
         "id": "api.qas",
         "name": "QAS Address Lookup Service",
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-qas/components/api.qas/api.qas.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.qas.getPredictiveSearchResultsUrl": "{{api.eesg.baseUrl}}/info/address/suggest/${countryCode}/${query}?v=1",
                     "api.qas.getAddressDetailUrl": "{{api.eesg.baseUrl}}/info/address/addressId/${addressId}?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.qas.ui",
         "name": "QAS Address Lookup - Test UI Plugin",
         "dependencies": [
            "api.qas",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.qas",
                  "service": "api.qas.QasAddressService",
                  "description": "QAS Address Service"
               }
            }
         ]
      },
      {
         "id": "api.referenceData.utils",
         "name": "API Reference Data Utility Services",
         "dependencies": [
            "api.referenceData"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-refdata/components/api.referenceData.utils/api.referenceData.utils.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "api.referenceData",
         "name": "Reference Data Service Engine API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache",
            "nabone.components"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-api-refdata/components/api.referenceData/api.referenceData.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.referenceData.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.referenceData.withCredentials": true,
                     "api.referenceData.getPhoneCountryCodesUrl": "{{api.referenceData.baseUrl}}/info/nab/reference/lov/getPhoneCountryCode?v=2",
                     "api.referenceData.getCountriesUrl": "{{api.referenceData.baseUrl}}/info/countries?v=1",
                     "api.referenceData.getCountryUrl": "{{api.referenceData.baseUrl}}/info/countries/${isoCode}?v=1",
                     "api.referenceData.getPostcodeUrl": "{{api.referenceData.baseUrl}}/info/postcode/${countryCode}/${query}?v=2",
                     "api.referenceData.getListOfValuesUrl": "{{api.referenceData.baseUrl}}/info/nab/reference/lov/${listOflovs}?v=2",
                     "api.referenceData.getClassificationCodeUrl": "{{api.referenceData.baseUrl}}/info/nab/reference/classifications/${classificationType}/search/${searchType}/query/${query}?v=1",
                     "api.referenceData.getOccupationCodesUrl": "{{api.referenceData.baseUrl}}/info/occupation/${query}?v=1",
                     "api.getReferenceDataLocal": "nabone-api-refdata/components/api.referenceData/resources/customer.jsn",
                     "api.referenceData.getIndustryCodeUrl": "{{api.referenceData.baseUrl}}/info/nab/reference/classifications/industry/search/code/query/${query}?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.referenceData.ui",
         "name": "Reference Data Service Engine API - Test UI Plugin",
         "dependencies": [
            "api.referenceData",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.referenceData",
                  "service": "api.referenceData.ReferenceDataApiService",
                  "description": "Reference Data"
               }
            }
         ]
      },
      {
         "id": "api.apip",
         "name": "APIP API",
         "dependencies": [
            "nabone.env",
            "api.eesg",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.apip/api.apip.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.apip.withCredentials": true,
                     "api.apip.getAccountDetailsUrl": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerNumber}/accounts/enrolments/accounting?v=1",
                     "api.apip.enrolAccountUrl": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerNumber}/account/${accountToken}/accounting?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.apip.ui",
         "name": "APIP API - Test UI Plugin",
         "dependencies": [
            "api.apip",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.apip",
                  "service": "api.apip.ApipApiService",
                  "description": "Customer Accounting Package Integration"
               }
            }
         ]
      },
      {
         "id": "api.cse",
         "name": "Customer Service Engine API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.cse/api.cse.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.cse.leasingUrl": "{{api.gateway.baseUrl}}/nab/leasing/",
                     "api.cse.eqCustomerUrl": "{{api.gateway.baseUrl}}/nab/eqcustomer/",
                     "api.cse.getCustomersByCustomerNameUrl": "{{api.cse.leasingUrl}}customer/search/summary/CUSTOMER_NAME_SEARCH/${customerName}/${maxResults}",
                     "api.cse.getCustomersByBusinessNameUrl": "{{api.cse.leasingUrl}}customer/search/summary/BUSINESS_NAME_SEARCH/${businessName}/${maxResults}",
                     "api.cse.getCustomersByCustomerIdUrl": "{{api.cse.leasingUrl}}customer/search/summary/CUSTOMER_ID_SEARCH/${customerId}/${maxResults}",
                     "api.cse.getCustomersByCustomerNameUrlCached": "{{api.cse.eqCustomerUrl}}search/detailed/CUSTOMER_NAME_SEARCH/${maxResults}/${firstName}/${middleNames}/${surname}/${dob}",
                     "api.cse.getCustomerByBusinessNameUrlCached": "{{api.cse.eqCustomerUrl}}search/detailed/BUSINESS_NAME_SEARCH/${maxResults}/${businessName}/_/_/_",
                     "api.cse.getCustomersByCustomerIdUrlCached": "{{api.cse.eqCustomerUrl}}search/detailed/CUSTOMER_ID_SEARCH/${maxResults}/${customerId}/_/_/_",
                     "api.cse.getCustomerDetailUrl": "{{api.cse.eqCustomerUrl}}${customerId}/details/${detailLevel}",
                     "api.cse.getCustomerDetailWithRatingUrl": "{{api.cse.eqCustomerUrl}}${customerId}/details/rating",
                     "api.cse.getCustomerRiskRatingUrl": "{{api.cse.eqCustomerUrl}}${customerId}/risk/rating"
                  }
               }
            }
         ]
      },
      {
         "id": "api.cse.ui",
         "name": "Customer Service Engine API - Test UI Plugin",
         "dependencies": [
            "api.cse",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.cse",
                  "service": "api.cse.CseApiService",
                  "description": "Customer Service Engine"
               }
            }
         ]
      },
      {
         "id": "api.daf.search",
         "name": "Digital Access Framework API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "api.eesg"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.daf.search/api.daf.search.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.daf.search.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.daf.search.userIdentities": "{{api.daf.search.baseUrl}}/internal/${lob}/identities/${brand}/External/_/search?v=1",
                     "api.daf.search.createUserIdentity": "{{api.daf.search.baseUrl}}/internal/${lob}/identity/${brand}?v=1",
                     "api.daf.search.resetPassword": "{{api.daf.search.baseUrl}}/internal/${lob}/identity/${brand}/External/${username}/password?v=1",
                     "api.daf.search.updateUserIdentity": "{{api.daf.search.baseUrl}}/internal/${lob}/identity/${brand}/External/${username}?v=1",
                     "api.daf.search.userState": "{{api.daf.search.baseUrl}}/internal/${lob}/identity/${brand}/External/${username}/state?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.daf.search.ui",
         "name": "Daf API - Test UI Plugin",
         "dependencies": [
            "api.daf.search",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.daf.search",
                  "service": "api.daf.DafSearchService",
                  "description": "Daf Search Service"
               }
            }
         ]
      },
      {
         "id": "api.document",
         "name": "Document API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.document/api.document.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.document.getDocumentUrl": "{{api.eesg.baseUrl}}/internal/nab/document/docToken/${id}?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.document.ui",
         "name": "Document API - Test UI Plugin",
         "dependencies": [
            "api.document",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.document",
                  "service": "api.document.DocumentApiService",
                  "description": "Documents"
               }
            }
         ]
      },
      {
         "id": "api.knowme",
         "name": "Know me now API",
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.knowme/api.knowme.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.knowme",
                  "service": "api.knowme.KnowmeApiService",
                  "description": "Know me now"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.knowme.withCredentials": true,
                     "api.knowme.searchLendingSubmissions": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/lending/submissions/search/${type}/query/${query}?v=1",
                     "api.knowme.retrieveBorrowerEntitiesUrl": "{{api.eesg.baseUrl}}/internal/nab/lending/submission/${submissionId}/borrowers?v=1",
                     "api.knowme.getFacilitiesProducts": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/lending/submission/${submissionId}/facilitiesProducts/search/${type}/query/${query}?v=1",
                     "api.knowme.getSecuritiesCharges": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/lending/submission/${submissionId}/securitiesCharges/search/${type}/query/${query}?v=1",
                     "api.knowme.getGuaranteeDetails": "{{api.eesg.baseUrl}}/internal/${lineOfBusiness}/lending/submission/${submissionId}/guarantees/charge/${chargeId}?v=1"
                  },
                  "dev": {
                     "api.knowme.withCredentials": true,
                     "api.knowme.searchLendingSubmissions": "http://localhost:3000/internal/${lineOfBusiness}/lending/submissions/search/${type}/query/${query}?v=1",
                     "api.knowme.retrieveBorrowerEntitiesUrl": "http://localhost:3000/internal/nab/lending/submission/${submissionId}/borrowers?v=1",
                     "api.knowme.getFacilitiesProducts": "http://localhost:3000/internal/${lineOfBusiness}/lending/submission/${submissionId}/facilitiesProducts/search/${type}/query/${query}?v=1",
                     "api.knowme.getSecuritiesCharges": "http://localhost:3000/internal/${lineOfBusiness}/lending/submission/${submissionId}/securitiesCharges/search/${type}/query/${query}?v=1",
                     "api.knowme.getGuaranteeDetails": "http://localhost:3000/internal/${lineOfBusiness}/lending/submission/${submissionId}/guarantees/charge/${chargeId}?v=1"
                  }
               }
            }
         ]
      },
      {
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "id": "api.och",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.och/api.och.min.js?1547009616366"
               ]
            }
         ],
         "name": "Customer Onboarding",
         "plugins": [
            {
               "config": {
                  "default": {
                     "api.och.createCustomer": "{{api.eesg.baseUrl}}/internal/nab/customer?v=2",
                     "api.och.buildCustomerRelationships": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/relationships?v=1"
                  }
               },
               "point": "nabone.env.properties"
            }
         ]
      },
      {
         "dependencies": [
            "api.och",
            "nabone.api.test"
         ],
         "id": "api.och.ui",
         "name": "Customer API in OCH Test UI Plugin",
         "plugins": [
            {
               "config": {
                  "apiId": "api.och",
                  "description": "Customer API in OCH",
                  "service": "api.och.OchApiService"
               },
               "point": "nabone.api.test.ui"
            }
         ]
      },
      {
         "id": "api.oec.serviceRequest",
         "name": "OEC Service Request API",
         "dependencies": [
            "nabone.env",
            "nabone.api"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.oec.serviceRequest/api.oec.serviceRequest.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.oec.serviceRequest",
                  "service": "api.oec.serviceRequest.ServiceRequestApiService",
                  "description": "OEC Service Request API"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.oec.serviceRequest.baseUrl": "http://localhost:3000",
                     "api.oec.serviceRequest.withCredentials": true,
                     "api.oec.serviceRequest.getCustomerServiceRequestList": "{{api.oec.serviceRequest.baseUrl}}/internal/${lineOfBusiness}/application/${application}/support/service/list?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.offer",
         "name": "Offer API",
         "dependencies": [
            "nabone.api",
            "nabone.cache",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.offer/api.offer.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.offer.baseUrl": "{{api.gateway.baseUrl}}/nab/lending/offer/",
                     "api.offer.getOffersByGroupIdUrl": "{{api.offer.baseUrl}}/group/${id}?v=1",
                     "api.offer.getOffersByCustomerIdUrl": "{{api.offer.baseUrl}}/customer/${id}?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.offer.ui",
         "name": "Offer API - Test UI Plugin",
         "dependencies": [
            "api.offer",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.offer",
                  "service": "api.offer.OfferApiService",
                  "description": "Lending Offer"
               }
            }
         ]
      },
      {
         "id": "api.rns",
         "name": "Relationships and Services API",
         "dependencies": [
            "nabone.api",
            "nabone.cache",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.rns/api.rns.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.rns.baseUrl": "{{api.gateway.baseUrl}}/rs",
                     "api.rns.getCustomersByCustomerNumberUrl": "{{api.rns.baseUrl}}/search?customerNumber=${customerNumber}",
                     "api.rns.getCustomersByNameUrl": "{{api.rns.baseUrl}}/search?givenName1=${givenName}&lastName=${lastName}",
                     "api.rns.getCustomersByBusinessNameUrl": "{{api.rns.baseUrl}}/search?businessName=${businessName}",
                     "api.rns.getCustomersByAccountNumberAndBsbUrl": "{{api.rns.baseUrl}}/search?accountNumber=${accountNumber}&bsbNumber=${bsbNumber}",
                     "api.rns.getCustomerDetailsUrl": "{{api.rns.baseUrl}}/customer/${customerNumber}",
                     "api.rns.getGroupDetailsUrl": "{{api.rns.baseUrl}}/group/${groupNumber}",
                     "api.rns.getCustomerRelationshipsUrl": "{{api.rns.baseUrl}}/relationship/${customerNumber}"
                  },
                  "dev": {
                     "api.rns.baseUrl.MohitLocal": "http://nigsa306688.aurdev.national.com.au:9080/internal/rs"
                  }
               }
            }
         ]
      },
      {
         "id": "api.rns.ui",
         "name": "Relationships and Services API - Test UI Plugin",
         "dependencies": [
            "api.rns",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.rns",
                  "service": "api.rns.RnsService",
                  "description": "Relationships and Services"
               }
            }
         ]
      },
      {
         "id": "api.salesforce",
         "name": "Salesforce API",
         "dependencies": [
            "nabone.api",
            "nabone.cache",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.salesforce/api.salesforce.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.salesforce.fullUrl": "{{api.salesforce.baseUrl}}/c/AccountRedirect.app?cn=${CGID}",
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "dev": {
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "sit1": {
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "sit2": {
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "sit3": {
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "sit4": {
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "sit5": {
                     "api.salesforce.baseUrl": "https://nabcrm--sit.lightning.force.com"
                  },
                  "prd": {
                     "api.salesforce.baseUrl": "https://nabcrm.lightning.force.com"
                  }
               }
            }
         ]
      },
      {
         "id": "api.sme",
         "name": "SME API",
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.sme/api.sme.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.sme.baseUrl": "{{api.gateway.baseUrl}}/nab",
                     "api.sme.withCredentials": true,
                     "api.sme.getRelationships": "{{api.sme.baseUrl}}/entity/${entityId}/relationships?v=1",
                     "api.sme.getRelationships-IGNORE": "nabone-apps/components/api.sme/resources/relationshipsMock.jsn",
                     "api.sme.getBankerHistoryUrl": "{{api.gateway.baseUrl}}/nab/customer/${customerId}/bankingUnits?v=1",
                     "api.sme.getCustomerInsightsUrl": "{{api.gateway.baseUrl}}/nab/report/insights/customer/${customerId}?v=1",
                     "api.sme.getModalHelpContentInsightsUrl": "nabone-apps/components/app.customer.insights/resources/customerInsightHelpContent.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "api.sme.ui",
         "name": "SME API - Test UI Plugin",
         "dependencies": [
            "api.sme",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.sme",
                  "service": "api.sme.SmeService",
                  "description": "SME"
               }
            }
         ]
      },
      {
         "id": "api.superannuation",
         "name": "Superannuation Service Engine API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.superannuation/api.superannuation.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.superannuation.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.superannuation.withCredentials": true,
                     "api.superannuation.getCustomerSuperAccountsUrl": "{{api.superannuation.baseUrl}}/internal/${lineOfBusiness}/customer/${customerType}/${accountNumber}/super/search/${capability}/${type}/${category}?v=2",
                     "api.superannuation.updateConsolidationUrl": "{{api.superannuation.baseUrl}}/internal/${lineOfBusiness}/customer/${customerType}/${accountNumber}/super/consolidate?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.superannuation.ui",
         "name": "Superannuation Service Engine API - Test UI Plugin",
         "dependencies": [
            "api.superannuation",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.superannuation",
                  "service": "api.superannuation.SuperApiService",
                  "description": "Superannuation"
               }
            }
         ]
      },
      {
         "id": "api.termsAndConditions",
         "name": "Terms and Conditions Service Engine API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/api.termsAndConditions/api.termsAndConditions.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.termsAndConditions.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.termsAndConditions.withCredentials": true,
                     "api.termsAndConditions.customerAcceptance": "{{api.termsAndConditions.baseUrl}}/internal/${lineOfBusiness}/customer/${customerType}/${accountNumber}/tandc/${service}/${subservice}?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.termsAndConditions.ui",
         "name": "Terms and Conditions Service Engine API - Test UI Plugin",
         "dependencies": [
            "api.termsAndConditions",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.termsAndConditions",
                  "service": "api.termsAndConditions.TacApiService",
                  "description": "Terms and Conditions"
               }
            }
         ]
      },
      {
         "id": "app.componentGroupHeader",
         "name": "Component group header",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.componentGroupHeader/style.css?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "app.customer.accountIntegration",
         "name": "Account Integration",
         "dependencies": [
            "api.apip"
         ],
         "roles": [
            "NAB-ApplicationEFCSSO-Auth-Users-Prod",
            "NAB-ApplicationEFCSSO-Auth-Users-DEV"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.accountIntegration/app.customer.accountIntegration.min.js?1547009616366",
                  "nabone-apps/components/app.customer.accountIntegration/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Account Integration",
                     "path": "customer",
                     "order": 400,
                     "config": {
                        "componentId": "app.customer.accountIntegration",
                        "handler": {
                           "config": {
                              "route": "/customer/accountIntegration"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Account Integration",
                  "applicationId": "app.customer.accountIntegration",
                  "contentDirective": "cust-account-integration",
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/accountIntegration"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.accountIntegration/resources/help/customerAccountIntegrationHelpContent.jsn",
                  "componentId": "app.customer.accountIntegration"
               }
            }
         ]
      },
      {
         "id": "app.customer.accounts",
         "name": "Account Information",
         "dependencies": [
            "api.nabone",
            "app.knowme",
            "api.customer",
            "api.customer.accounts",
            "app.customer.overview",
            "api.customer.profile",
            "nabone.form.catalogue.service",
            "nabone.components",
            "lib.moment",
            "api.referenceData"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.accounts/app.customer.accounts.min.js?1547009616366",
                  "nabone-apps/components/app.customer.accounts/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.accounts.views",
               "name": "Views to appear on the account details page",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "Unique ID for this widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "Menu title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "Menu order item",
                        "type": "number"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  },
                  "required": [
                     "widgetId",
                     "title",
                     "routes"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.accounts.actions",
               "name": "Views to appear on the actions tab on the account details page",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "Unique ID for this widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "Menu title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "Menu order item",
                        "type": "number"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     }
                  },
                  "required": [
                     "widgetId",
                     "title",
                     "routes"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Accounts",
                     "path": "customer/productsAndServices",
                     "order": 310,
                     "config": {
                        "componentId": "app.customer.accounts",
                        "handler": {
                           "config": {
                              "route": "/customer/accounts"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Accounts",
                  "applicationId": "app.customer.accounts",
                  "contentDirective": "customer-accounts",
                  "context": {
                     "selectedAccount": "custCtrl.data.selectedAccount",
                     "customerNumber": "{{ custCtrl.customerNumber }}",
                     "oneTableParams": {
                        "columns": [
                           {
                              "columnId": "icon",
                              "label": "Icon",
                              "sortable": false,
                              "hidden": true
                           },
                           {
                              "columnId": "accType",
                              "label": "Account",
                              "sortable": false
                           },
                           {
                              "columnId": "bsb",
                              "label": "BSB",
                              "sortable": false,
                              "hidden": true
                           },
                           {
                              "columnId": "accNo",
                              "label": "Account Number",
                              "sortable": false,
                              "hidden": true
                           },
                           {
                              "columnId": "intLimit",
                              "label": "Interest/Limit",
                              "sortable": false
                           },
                           {
                              "columnId": "currBalance",
                              "label": "Current Balance",
                              "sortable": false
                           },
                           {
                              "columnId": "availBalance",
                              "label": "Available Balance",
                              "sortable": false
                           }
                        ],
                        "headerTemplate": "nabone-apps/components/app.customer.accounts/partials/CustomerAccountsTableHeaderTemplate.html",
                        "rowTemplate": "nabone-apps/components/app.customer.accounts/partials/CustomerAccountsTableRowTemplate.html",
                        "footerTemplate": "nabone-apps/components/app.customer.accounts/partials/AccountsNetPosition.html",
                        "tableClasses": "table cust-account-list customer-data-table"
                     },
                     "selectedAccountId": "instance.config.data.accountId",
                     "viewId": "instance.config.data.viewId"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/accounts"
                  ]
               }
            },
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "Account Information",
                  "widgetId": "customer-account-widget",
                  "displayOrder": 3,
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "customer-account-widget",
                  "context": {
                     "selectedAccount": "custCtrl.data.selectedAccount",
                     "customerNumber": "{{ custCtrl.customerNumber }}",
                     "launchWidget": "componentGroupCtrl.openComponent(route)",
                     "oneTableParams": {
                        "columns": [
                           {
                              "columnId": "icon",
                              "label": "Icon",
                              "sortable": false,
                              "hidden": true
                           },
                           {
                              "columnId": "accType",
                              "label": "Account",
                              "sortable": false
                           },
                           {
                              "columnId": "bsb",
                              "label": "BSB",
                              "sortable": false,
                              "hidden": true
                           },
                           {
                              "columnId": "accNo",
                              "label": "Account Number",
                              "sortable": false,
                              "hidden": true
                           },
                           {
                              "columnId": "intLimit",
                              "label": "Interest/Limit",
                              "sortable": false
                           },
                           {
                              "columnId": "currBalance",
                              "label": "Current Balance",
                              "sortable": false
                           },
                           {
                              "columnId": "availBalance",
                              "label": "Available Balance",
                              "sortable": false
                           }
                        ],
                        "headerTemplate": "nabone-apps/components/app.customer.accounts/partials/CustomerAccountsTableHeaderTemplate.html",
                        "rowTemplate": "nabone-apps/components/app.customer.accounts/partials/CustomerAccountsTableRowTemplate.html",
                        "footerTemplate": "nabone-apps/components/app.customer.accounts/partials/CustomerAccountsTableFooterTemplate.html",
                        "tableClasses": "table cust-account-list customer-data-table"
                     }
                  },
                  "widgetData": {},
                  "routes": [
                     "/customer/:MEID"
                  ]
               }
            },
            {
               "point": "app.customer.accounts.views",
               "config": {
                  "widgetId": "app.customer.accounts.views.transactions",
                  "title": "Transaction History",
                  "displayOrder": 1,
                  "contentDirective": "customer-account-transactions",
                  "context": {
                     "customerNumber": "accountsCtrl.customerNumber",
                     "selectedAccount": "accountsCtrl.selectedAccount",
                     "oneTableParams": {
                        "columns": [
                           {
                              "columnId": "date",
                              "label": "Date",
                              "sortable": false
                           },
                           {
                              "columnId": "narrative",
                              "label": "Transaction Details",
                              "sortable": false
                           },
                           {
                              "columnId": "amount",
                              "label": "Debit",
                              "sortable": false
                           },
                           {
                              "columnId": "amount",
                              "label": "Credit",
                              "sortable": false
                           },
                           {
                              "columnId": "runningBalance",
                              "label": "Available Balance",
                              "sortable": false
                           },
                           {
                              "columnId": "select",
                              "label": "Select",
                              "sortable": false
                           }
                        ],
                        "tableClasses": "table table-striped customer-account-transactions customer-data-table",
                        "rowTemplate": "nabone-apps/components/app.customer.accounts/partials/CustomerAccountTransactionsTableRowTemplate.html"
                     }
                  },
                  "routes": [
                     "transactions"
                  ]
               }
            },
            {
               "point": "app.customer.accounts.views",
               "config": {
                  "widgetId": "app.customer.accounts.views.details",
                  "title": "Account Details",
                  "displayOrder": 2,
                  "contentDirective": "customer-account-details",
                  "context": {
                     "customerNumber": "accountsCtrl.customerNumber",
                     "selectedAccount": "accountsCtrl.selectedAccount"
                  },
                  "routes": [
                     "details"
                  ]
               }
            },
            {
               "point": "app.customer.accounts.views",
               "config": {
                  "widgetId": "app.customer.accounts.views.actions",
                  "title": "Actions",
                  "displayOrder": 8,
                  "contentDirective": "customer-account-actions",
                  "context": {
                     "customerNumber": "accountsCtrl.customerNumber",
                     "selectedAccount": "accountsCtrl.selectedAccount"
                  },
                  "routes": [
                     "actions"
                  ]
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.accounts/resources/help/customerAccountsHelpContent.jsn",
                  "componentId": "app.customer.accounts"
               }
            }
         ]
      },
      {
         "id": "app.customer.activities",
         "name": "Customer activities component",
         "dependencies": [
            "nabone.ui.components.overrides"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.activities/app.customer.activities.min.js?1547009616366",
                  "nabone-apps/components/app.customer.activities/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.activities",
               "name": "Activities that can be launched for a customer",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "activityId": {
                        "description": "A unique id for the activity",
                        "type": "string"
                     },
                     "includeInInstanceList": {
                        "type": "boolean"
                     },
                     "title": {
                        "description": "A title for the activity that will be displayed in the launcher",
                        "type": "string"
                     },
                     "description": {
                        "description": "A single-line description for the activity that will be displayed in the launcher under the title",
                        "type": "string"
                     },
                     "icon": {
                        "description": "Icon to be displayed",
                        "type": "string"
                     },
                     "route": {
                        "description": "Route of the application instance to launch",
                        "type": "string"
                     }
                  },
                  "required": [
                     "activityId",
                     "title",
                     "description",
                     "route"
                  ]
               }
            }
         ],
         "plugins": []
      },
      {
         "id": "app.customer.authorisations",
         "name": "Third Party Authorisations",
         "dependencies": [
            "nabone.components",
            "api.customer.profile",
            "api.customer"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.authorisations/app.customer.authorisations.min.js?1547009616366",
                  "nabone-apps/components/app.customer.authorisations/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Authorisations",
                     "path": "customer",
                     "order": 450,
                     "config": {
                        "componentId": "app.customer.authorisations",
                        "handler": {
                           "config": {
                              "route": "/customer/authorisations"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Account Integration",
                  "applicationId": "app.customer.authorisations",
                  "contentDirective": "third-party-authorisations",
                  "context": {
                     "customerDetails": "custCtrl.customer"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/authorisations"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.bankers",
         "name": "Banker History",
         "dependencies": [
            "api.sme",
            "nabone.components"
         ],
         "roles": [
            "NAB-Team-SMEInsightUsers"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.bankers/app.customer.bankers.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Banker History",
                     "path": "customer",
                     "config": {
                        "componentId": "app.customer.bankers",
                        "handler": {
                           "config": {
                              "route": "/customer/bankers"
                           }
                        }
                     },
                     "order": 500
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Banker History",
                  "applicationId": "app.customer.bankers",
                  "contentDirective": "cust-banker-history",
                  "context": {
                     "customerId": "{{ custCtrl.customerNumber }}"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/bankers"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.cards",
         "name": "Cards",
         "dependencies": [
            "nabone.components",
            "api.customer.cards"
         ],
         "roles": [
            "NABONE-Applications-CardActivation-Admin",
            "NABONE-Applications-CardManagement-Bankers",
            "INT-SE-CARDMANAGEMENT-BANKERS"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.cards/app.customer.cards.min.js?1547009616366",
                  "nabone-apps/components/app.customer.cards/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Cards",
                     "path": "customer/productsAndServices",
                     "config": {
                        "componentId": "app.customer.cards",
                        "handler": {
                           "config": {
                              "route": "/customer/cards"
                           }
                        }
                     },
                     "order": 320
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Cards",
                  "applicationId": "app.customer.cards",
                  "contentDirective": "customer-cards-activation",
                  "context": {
                     "customerId": "{{ custCtrl.customerNumber }}"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/cards"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "Cards",
                  "widgetId": "customer-cards-widget",
                  "displayOrder": 2,
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "customer-cards-widget",
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}"
                  },
                  "widgetData": {}
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.cards/resources/help/customerCardsHelpContent.jsn",
                  "componentId": "app.customer.cards"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.cards/resources/help/customerCardsWhatsNewContent.jsn",
                  "componentId": "app.customer.cards"
               }
            }
         ]
      },
      {
         "id": "app.customer.history",
         "name": "Customer History",
         "dependencies": [
            "nabone.components",
            "api.customer"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.customerHistory/partials.js?1547009616366",
                  "nabone-apps/components/app.customer.customerHistory/module.js?1547009616366",
                  "nabone-apps/components/app.customer.customerHistory/controllers/CustomerHistoryController.js?1547009616366",
                  "nabone-apps/components/app.customer.customerHistory/component.js?1547009616366",
                  "nabone-apps/components/app.customer.customerHistory/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.history.contributions",
               "name": "Contributions to Customer History",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "type": "string",
                        "description": "Unique ID to identify this batch of history records"
                     },
                     "service": {
                        "description": "Name of a service that will provide history content",
                        "type": "string"
                     },
                     "applicationType": {
                        "description": "The name of the application type",
                        "type": "string"
                     }
                  },
                  "required": [
                     "service",
                     "applicationType",
                     "applicationId"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Customer History",
                     "path": "customer",
                     "config": {
                        "componentId": "app.customer.history",
                        "handler": {
                           "config": {
                              "route": "/customer/history"
                           }
                        }
                     },
                     "order": 1000
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Customer History",
                  "applicationId": "app.customer.history",
                  "contentDirective": "customer-history",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/history"
                  ],
                  "context": {
                     "customer": "custCtrl.customer",
                     "componentPluginPointId": "componentGroupCtrl.componentGroupConfig.componentPluginPointId"
                  },
                  "attributes": {
                     "visibleIf": "!customer.isTemporary && customer.customerType == 'organisation'"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.details",
         "name": "Customer details",
         "dependencies": [],
         "roles": [],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "order": 200,
                     "path": "customer/details",
                     "label": "Details"
                  }
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.search/resources/help/searchHelpContent.jsn",
                  "componentId": "app.customer.profile"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.details/resources/CustomerDetailsWhatsNew.jsn",
                  "componentId": "app.customer.profile"
               }
            }
         ]
      },
      {
         "id": "app.customer.eCRS",
         "name": "Customer eCRS Plugins",
         "dependencies": [
            "api.cse",
            "nabone.components"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.eCRS/app.customer.eCRS.min.js?1547009616366",
                  "nabone-apps/components/app.customer.eCRS/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.components",
               "config": {
                  "applicationId": "customer-risk-rating-data-provider",
                  "contentDirective": "customer-risk-rating-data-provider",
                  "autoStart": true,
                  "maxInstances": 1,
                  "context": {
                     "customer-id": "custCtrl.customerNumber",
                     "result": "custCtrl.data.customerRiskRatingDataResult",
                     "ngIf": "custCtrl.customer && !custCtrl.customer.isTemporary"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "app.customer.quickdata",
               "config": {
                  "contentDirective": "customer-risk-rating-summary",
                  "context": {
                     "api-value": "custCtrl.data.customerRiskRatingDataResult",
                     "ng-if": "custCtrl.customer && !custCtrl.customer.isTemporary && custCtrl.customerIdData.lineOfBusiness == 'nab'"
                  },
                  "displayOrder": 0
               }
            }
         ]
      },
      {
         "id": "app.customer.forms",
         "name": "Customer Specific Forms",
         "dependencies": [
            "app.customer",
            "api.customer",
            "nabone.form.catalogue"
         ],
         "roles": [
            "NAB-Team-SMEInsightUsers",
            "NAB-ApplicationEFCSSO-Auth-Users-Prod",
            "NAB-ApplicationEFCSSO-Auth-Users-DEV",
            "EST-BPM&O-Application-SBLBusinessGroup",
            "Retail Branch-Resource-Users"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.forms/app.customer.forms.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Form Catalogue",
                     "path": "customer",
                     "config": {
                        "componentId": "form.catalogue",
                        "handler": {
                           "config": {
                              "route": "/customer/forms"
                           }
                        }
                     },
                     "order": 600
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Form Catalogue",
                  "applicationId": "form.catalogue",
                  "contentDirective": "one-customer-form-catalogue",
                  "context": {
                     "customerId": "{{ custCtrl.customerNumber }}",
                     "customerDetails": "custCtrl.customer"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/forms"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.forms/resources/help/customerFormsHelpContent.jsn",
                  "componentId": "form.catalogue"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.forms/resources/help/customerFormsWhatsNewContent.jsn",
                  "componentId": "form.catalogue"
               }
            }
         ]
      },
      {
         "id": "app.customer.groups",
         "name": "Groups",
         "dependencies": [
            "api.rns",
            "api.sme",
            "nabone.components"
         ],
         "roles": [
            "NAB-Team-SMEInsightUsers",
            "EST-BPM&O-Application-SBLBusinessGroup"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.groups/app.customer.groups.min.js?1547009616366",
                  "nabone-apps/components/app.customer.groups/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Groups",
                     "path": "customer/details",
                     "config": {
                        "componentId": "app.customer.groups",
                        "handler": {
                           "config": {
                              "route": "/customer/groups"
                           }
                        }
                     },
                     "order": 202
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Groups",
                  "applicationId": "app.customer.groups",
                  "contentDirective": "customer-groups",
                  "context": {
                     "customerId": "{{ custCtrl.customerNumber }}"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/groups"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "Groups",
                  "widgetId": "customer-groups-widget",
                  "displayOrder": 4,
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "customer-groups-widget",
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}"
                  },
                  "widgetData": {}
               }
            }
         ]
      },
      {
         "id": "app.customer.insights",
         "name": "SME Insights",
         "dependencies": [
            "api.sme",
            "nabone.components"
         ],
         "roles": [
            "NAB-Team-SMEInsightUsers"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.insights/app.customer.insights.min.js?1547009616366",
                  "nabone-apps/components/app.customer.insights/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Insights",
                     "path": "customer",
                     "config": {
                        "componentId": "app.customer.insights",
                        "handler": {
                           "config": {
                              "route": "/customer/insights"
                           }
                        }
                     },
                     "order": 800
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Insights",
                  "applicationId": "app.customer.insights",
                  "contentDirective": "cust-insights",
                  "context": {
                     "customerId": "{{ custCtrl.customerNumber }}"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/insights"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.merchants",
         "name": "Merchants",
         "dependencies": [
            "api.rns",
            "api.customer",
            "api.customer.merchants",
            "api.daf.search",
            "nabone.components"
         ],
         "roles": [
            "NABONE-Applications-Customer-MerchantAdmin"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.merchants/app.customer.merchants.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Merchants",
                     "path": "customer",
                     "config": {
                        "componentId": "app.customer.merchants",
                        "handler": {
                           "config": {
                              "route": "/customer/merchants"
                           }
                        }
                     },
                     "order": 900
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Merchants",
                  "applicationId": "app.customer.merchants",
                  "contentDirective": "cust-merchants",
                  "context": {
                     "customerId": "{{ custCtrl.customerNumber }}",
                     "customerDetails": "custCtrl.customer"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/merchants"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.occupationAndTaxStatus",
         "name": "Tax Status",
         "dependencies": [
            "api.referenceData",
            "app.customer.profile",
            "api.customer",
            "api.customer.profile",
            "app.customer.onboarding",
            "app.customer.onboarding.individual"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.occupationAndTaxStatus/app.customer.occupationAndTaxStatus.min.js?1547009616366",
                  "nabone-apps/components/app.customer.occupationAndTaxStatus/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Tax Status",
                  "applicationId": "app.customer.occupationAndTaxStatus",
                  "contentDirective": "customer-occupation-and-tax",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/occupationAndTax"
                  ],
                  "context": {
                     "customerDetails": "custCtrl.customerDetailsComplete"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me' && customer.customerType == 'person'"
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Tax Status",
                     "path": "customer/details",
                     "config": {
                        "componentId": "app.customer.occupationAndTaxStatus",
                        "handler": {
                           "config": {
                              "route": "/customer/occupationAndTax"
                           }
                        }
                     },
                     "order": 202
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Industry & Tax Status",
                  "applicationId": "app.customer.industryAndTaxStatus",
                  "contentDirective": "customer-occupation-and-tax",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/industryAndTax"
                  ],
                  "context": {
                     "customerDetails": "custCtrl.customer"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me' && customer.customerType == 'organisation'"
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Industry & Tax Status",
                     "path": "customer/details",
                     "config": {
                        "componentId": "app.customer.industryAndTaxStatus",
                        "handler": {
                           "config": {
                              "route": "/customer/industryAndTax"
                           }
                        }
                     },
                     "order": 202
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.occupationAndTaxStatus.taxDetails.schema": "nabone-customer-onboarding/components/app.customer.onboarding.individual/resources/formPartials/taxDetails/taxDetailsSchema.jsn",
                     "app.customer.occupationAndTaxStatus.taxDetails.layout": "nabone-customer-onboarding/components/app.customer.onboarding.individual/resources/formPartials/taxDetails/taxDetailsLayout.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.overview",
         "name": "Customer overview",
         "dependencies": [
            "nabone.components",
            "api.customer"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.overview/app.customer.overview.min.js?1547009616366",
                  "nabone-apps/components/app.customer.overview/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.overview.widgets",
               "name": "Widgets to appear on the customer overview page",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "A widget title",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "A widget title",
                        "type": "number"
                     },
                     "launcherService": {
                        "description": "Launcher service for starting the application",
                        "type": "string"
                     },
                     "contentURL": {
                        "description": "URL of content template",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "ID of content directive",
                        "type": "string"
                     },
                     "widgetData": {
                        "description": "A widget title",
                        "type": "object"
                     }
                  },
                  "required": [
                     "title",
                     "widgetId",
                     "launcherService"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Overview",
                     "path": "customer",
                     "config": {
                        "componentId": "app.customer.overview",
                        "handler": {
                           "config": {
                              "route": "/customer/overview"
                           }
                        }
                     },
                     "order": 100
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Overview",
                  "applicationId": "app.customer.overview",
                  "contentDirective": "customer-overview",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/overview"
                  ],
                  "context": {
                     "customer": "custCtrl.customer",
                     "createInstance": "componentGroupCtrl.openComponent(route)"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (customerIdData.idSource == 'me' || customer.isTemporary)"
                  }
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.search/resources/help/searchHelpContent.jsn",
                  "componentId": "app.customer.overview"
               }
            }
         ]
      },
      {
         "id": "app.customer.paymentAlias.access",
         "name": "Payment Alias Access Control",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.paymentAlias.access/app.customer.paymentAlias.access.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "dependencies": [],
         "id": "app.customer.paymentAlias.access.externalSearch",
         "modules": [],
         "name": "Payment Alias - External Search Access",
         "roles": [
            "NABONE-Applications-PayIDSearch-Bankers"
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.paymentAlias.access.externalSearch": true
                  }
               }
            }
         ]
      },
      {
         "dependencies": [],
         "id": "app.customer.paymentAlias.access.searchByOrgId",
         "modules": [],
         "name": "Payment Alias - Search By Org ID",
         "roles": [
            "NABONE-Applications-PayIDSearch-Bankers"
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.paymentAlias.access.searchByOrgId": true
                  }
               }
            }
         ]
      },
      {
         "dependencies": [],
         "id": "app.customer.paymentAlias.access.updateStatus",
         "modules": [],
         "name": "Payment Alias - Update Status",
         "roles": [
            "NABONE-Applications-PayIDConflictManagement-Bankers"
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.paymentAlias.access.updateStatus": true
                  }
               }
            }
         ]
      },
      {
         "dependencies": [
            "app.customer",
            "app.customer.paymentAlias",
            "nabone.components",
            "nabone.ui.toggleButtonGroup",
            "lib.moment"
         ],
         "id": "app.customer.paymentAlias.otp",
         "roles": [
            "NABONE-Applications-PayIDSearch-Bankers",
            "NABONE-Applications-PayIDConflictManagement-Bankers"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.paymentAlias.otp/app.customer.paymentAlias.otp.min.js?1547009616366",
                  "nabone-apps/components/app.customer.paymentAlias.otp/style.css?1547009616366"
               ]
            }
         ],
         "name": "Payment Alias OTP",
         "plugins": [
            {
               "config": {
                  "default": {
                     "app.customer.paymentAlias.otp.attempts": 3
                  },
                  "dev": {}
               },
               "point": "nabone.env.properties"
            },
            {
               "config": {
                  "contentDirective": "launch-payid-otp",
                  "context": {},
                  "displayOrder": 1
               },
               "point": "app.customer.quickdata"
            }
         ]
      },
      {
         "dependencies": [
            "app.customer.overview",
            "api.customer.accounts",
            "app.customer.accounts",
            "api.customer.paymentAlias",
            "app.customer.paymentAlias.access",
            "app.knowme",
            "api.resource",
            "nabone.components"
         ],
         "id": "app.customer.paymentAlias",
         "roles": [
            "NABONE-Applications-PayIDSearch-Bankers",
            "NABONE-Applications-PayIDConflictManagement-Bankers"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.paymentAlias/app.customer.paymentAlias.min.js?1547009616366",
                  "nabone-apps/components/app.customer.paymentAlias/style.css?1547009616366"
               ]
            }
         ],
         "name": "Payment Alias",
         "plugins": [
            {
               "point": "app.customer.accounts.views",
               "config": {
                  "widgetId": "app.customer.accounts.paymentAlias",
                  "title": "PayIDs",
                  "displayOrder": 4,
                  "contentDirective": "account-current-payids-list",
                  "context": {
                     "launchWidget": "componentGroupCtrl.openComponent(route)",
                     "selectedAccount": "custCtrl.data.selectedAccount"
                  },
                  "routes": [
                     "/customer/payids"
                  ]
               }
            },
            {
               "config": {
                  "default": {
                     "app.customer.paymentAlias.phoneCountryCodes": "nabone-apps/components/app.customer.paymentAlias/resources/phoneCountryCodes.jsn"
                  },
                  "dev": {}
               },
               "point": "nabone.env.properties"
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "PayID Settings",
                     "path": "customer/productsAndServices",
                     "config": {
                        "componentId": "app.customer.paymentAlias",
                        "handler": {
                           "config": {
                              "route": "/customer/payidsettings"
                           }
                        }
                     },
                     "order": 350
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "applicationId": "app.customer.paymentAlias",
                  "contentDirective": "customer-pay-id-settings",
                  "context": {
                     "customerNumber": "custCtrl.customerNumber",
                     "launchWidget": "componentGroupCtrl.openComponent(route)"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/payidsettings"
                  ],
                  "title": "PayID Settings",
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (customerIdData.idSource == 'me' || customer.isTemporary)"
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "applicationId": "app.customer.paymentAlias.details",
                  "contentDirective": "customer-pay-id-details",
                  "context": {
                     "customerNumber": "custCtrl.customerNumber",
                     "launchWidget": "componentGroupCtrl.openComponent(route)",
                     "payid": "instance.params",
                     "active": "instance.instanceId == ccomponentGroupCtrl.activeInstance.instanceId"
                  },
                  "maxInstances": 1,
                  "matchUsingApplicationId": true,
                  "routes": [
                     "/customer/payiddetails/:type/:id",
                     "/customer/payiddetails/:type/:id/:whence",
                     "/customer/payiddetails/:type/:id/:whence/:token"
                  ],
                  "title": "PayID Details",
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (customerIdData.idSource == 'me' || customer.isTemporary)"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.productsAndServices",
         "name": "Customer products & services",
         "dependencies": [],
         "roles": [],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "order": 300,
                     "path": "customer/productsAndServices",
                     "label": "Products & Services"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.profile",
         "name": "Customer Profile",
         "dependencies": [
            "api.rns",
            "api.cse",
            "api.och",
            "api.qas",
            "nabone.components",
            "nabone.forms.core",
            "nabone.schema",
            "nabone.utils",
            "nabone.toggle",
            "api.customer",
            "api.customer.profile",
            "api.referenceData",
            "nabone.notifications",
            "app.customer.onboarding",
            "app.customer.onboarding.individual"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.profile/app.customer.profile.min.js?1547009616366",
                  "nabone-apps/components/app.customer.profile/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Details, Contacts & Addresses",
                     "path": "customer/details",
                     "config": {
                        "componentId": "app.customer.profile",
                        "handler": {
                           "config": {
                              "route": "/customer/profile"
                           }
                        }
                     },
                     "order": 201
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Details, Contacts & Addresses",
                  "applicationId": "app.customer.profile",
                  "contentDirective": "customer-profile",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/profile"
                  ],
                  "context": {
                     "customerDetails": "custCtrl.customerDetailsComplete",
                     "onUpdateDetails": "custCtrl.onUpdateDetails()"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.profile.contactDetails.schema": "nabone-apps/components/app.customer.profile/resources/contactDetails/contactDetailsSchema.jsn",
                     "app.customer.profile.contactDetails.layout": "nabone-customer-onboarding/components/app.customer.onboarding.individual/resources/formPartials/contactDetails/contactDetailsLayout.jsn",
                     "app.customer.profile.addressDetails.schema": "nabone-apps/components/app.customer.profile/resources/addressDetails/addressDetailsSchema.jsn",
                     "app.customer.profile.addressDetails.layout": "nabone-apps/components/app.customer.profile/resources/addressDetails/addressDetailsLayout.jsn",
                     "app.customer.profile.personalDetails.schema": "nabone-customer-onboarding/components/app.customer.onboarding.individual/resources/formPartials/personalDetails/personalDetailsSchema.jsn",
                     "app.customer.profile.personalDetails.layout": "nabone-customer-onboarding/components/app.customer.onboarding.individual/resources/formPartials/personalDetails/personalDetailsLayout.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.relationships",
         "name": "Relationships",
         "dependencies": [
            "api.rns",
            "api.sme",
            "nabone.components"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.relationships/app.customer.relationships.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Relationships",
                     "path": "customer/details",
                     "config": {
                        "componentId": "app.customer.relationships",
                        "handler": {
                           "config": {
                              "route": "/customer/relationships"
                           }
                        }
                     },
                     "order": 204
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Relationships",
                  "applicationId": "app.customer.relationships",
                  "contentDirective": "cust-relationships",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/relationships"
                  ],
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}"
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'me'"
                  }
               }
            },
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "Relationships",
                  "widgetId": "customer-relationships-widget",
                  "displayOrder": 5,
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "customer-relationships-widget",
                  "widgetData": {},
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.salesforce",
         "name": "Salesforce",
         "dependencies": [
            "api.och",
            "nabone.components",
            "api.salesforce"
         ],
         "roles": [
            "AUR-Application-Salesforce ENTCRM",
            "AURDEV-Application-Salesforce ENTCRM"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.salesforce/app.customer.salesforce.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "Salesforce",
                  "widgetId": "salesforce-widget",
                  "displayOrder": 1,
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "salesforce-widget",
                  "context": {
                     "customerNumber": "custCtrl.customerNumber"
                  },
                  "widgetData": {}
               }
            }
         ]
      },
      {
         "id": "app.customer.search.paymentAlias",
         "name": "Customer Payment Alias Search",
         "dependencies": [
            "api.rns",
            "api.customer",
            "api.customer.search",
            "api.customer.paymentAlias",
            "nabone.api",
            "app.customer.search",
            "app.customer.paymentAlias",
            "app.customer.paymentAlias.access",
            "app.customer.paymentAlias.otp"
         ],
         "roles": [
            "NABONE-Applications-PayIDSearch-Bankers",
            "NABONE-Applications-PayIDConflictManagement-Bankers"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.search.paymentAlias/app.customer.search.paymentAlias.min.js?1547009616366",
                  "nabone-apps/components/app.customer.search.paymentAlias/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.search.providers",
               "config": {
                  "id": "app.customer.search.provider.payid",
                  "title": "Pay IDs",
                  "contentDirective": "search-provider-pay-id",
                  "order": 100
               }
            }
         ]
      },
      {
         "dependencies": [
            "app.customer.search.paymentAlias"
         ],
         "id": "app.customer.paymentAlias.search.externalSearch",
         "modules": [],
         "name": "Payment Alias - External Search Access",
         "roles": [
            "NABONE-Applications-PayIDSearch-Bankers"
         ],
         "plugins": [
            {
               "point": "app.customer.search.searchExtensions",
               "config": {
                  "title": "Perform a CAS search",
                  "contentDirective": "cas-lookup",
                  "context": {
                     "pay-id-type": "searchCtrl.searchCriteria.payIdType",
                     "pay-id-value": "searchCtrl.searchCriteria.payIdValue",
                     "ng-If": "searchCtrl.searchProvider === 'app.customer.search.provider.payid' && searchCtrl.searchResultsVisible && !searchCtrl.searchResults.length && !searchCtrl.hideSearch"
                  },
                  "order": 1
               }
            }
         ]
      },
      {
         "id": "app.customer.search.prospectCustomers",
         "name": "List of prospect customers for customer search screen",
         "dependencies": [
            "app.customer",
            "api.customer"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.search.prospectCustomers/style.css?1547009616366",
                  "nabone-apps/components/app.customer.search.prospectCustomers/app.customer.search.prospectCustomers.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.search.searchExtensions",
               "config": {
                  "title": "Prospect Customers",
                  "contentDirective": "prospect-customers",
                  "order": 2
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Temporary/Prospect customer opened",
                  "topic": "app.customer.tempCustomer.opened"
               }
            }
         ]
      },
      {
         "id": "app.customer.search",
         "name": "Customer Search",
         "dependencies": [
            "api.rns",
            "api.customer",
            "nabone.api",
            "api.nabone",
            "api.referenceData",
            "api.referenceData.utils",
            "api.customer.search"
         ],
         "roles": [
            "NAB-Team-SMEInsightUsers",
            "NAB-ApplicationEFCSSO-Auth-Users-Prod",
            "NAB-ApplicationEFCSSO-Auth-Users-DEV",
            "EST-BPM&O-Application-SBLBusinessGroup",
            "Retail Branch-Resource-Users",
            "INT-SE-HomeLending-PricingBanker-USR",
            "INT-SE-HomeLending-PricingDesk-USR",
            "NABONE-Applications-KNOWME-BUSINESS-BANKERS",
            "NABONE-Applications-Lending-Bank-Tools-Banker",
            "NABONE-Applications-Lending-Bank-Tools-Ubank",
            "NABONE-Applications-Lending-Bank-Tools-Operations"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.search/app.customer.search.min.js?1547009616366",
                  "nabone-apps/components/app.customer.search/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.search.searchExtensions",
               "name": "Additional Customer Search components",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to load the widget",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     },
                     "roles": {
                        "type": "array"
                     },
                     "classes": {
                        "type": "string",
                        "description": "Optional list of classes to apply to the container div"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.search.providers",
               "name": "Customer Search Providers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for this search provider",
                        "type": "string"
                     },
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to render the provider search form",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.search.providerExtensions",
               "name": "Customer Search Extensions to existing search providers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for this extension",
                        "type": "string"
                     },
                     "providerId": {
                        "description": "Unique identifier of the provider to extend",
                        "type": "string"
                     },
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to render the provider search extension",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Customer Search",
                     "path": "apps",
                     "icon": "search",
                     "config": {
                        "defaultFavourite": true,
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/search/customer"
                           }
                        }
                     },
                     "order": 20
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.app.customer.search",
                  "title": "Customer Search",
                  "contentDirective": "cust-search",
                  "routes": [
                     "/search/customer"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "app.customer.search.providers",
               "config": {
                  "id": "app.customer.search.provider.customerid",
                  "title": "Customer IDs",
                  "contentDirective": "search-provider-customer-ids",
                  "order": 10
               }
            },
            {
               "point": "app.customer.search.providers",
               "config": {
                  "id": "app.customer.search.provider.individual",
                  "title": "Individuals",
                  "contentDirective": "search-provider-individuals",
                  "order": 20
               }
            },
            {
               "point": "app.customer.search.providers",
               "config": {
                  "id": "app.customer.search.provider.organisation",
                  "title": "Organisations",
                  "contentDirective": "search-provider-organisations",
                  "order": 30
               }
            },
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.customer.ibsearch",
                  "service": "app.customer.search.CustomerSearchService",
                  "description": "Customer Search (IB)"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Customer search performed",
                  "topic": "app.customer.search.searchPerformed"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.search/resources/help/searchHelpContent.jsn",
                  "componentId": "nabone.app.customer.search"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-apps/components/app.customer.search/resources/help/searchWhatsNewContent.jsn",
                  "componentId": "nabone.app.customer.search"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Customer Search"
               }
            }
         ]
      },
      {
         "id": "app.customer.tempCustomer",
         "name": "Add a prospect customer",
         "dependencies": [
            "nabone.utils",
            "nabone.forms.efc",
            "api.resource",
            "app.customer",
            "api.customer",
            "nabone.env"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.tempCustomer/app.customer.tempCustomer.min.js?1547009616366",
                  "nabone-apps/components/app.customer.tempCustomer/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.search.searchExtensions",
               "config": {
                  "title": "Add a prospect customer",
                  "contentDirective": "temporary-customer",
                  "order": 1
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.tempCustomer.form": "nabone-apps/components/app.customer.tempCustomer/resources/tempCustomerDefinition.jsn",
                     "app.customer.tempCustomer.schema": "nabone-apps/components/app.customer.tempCustomer/resources/tempCustomer.translatedSchema.custom.jsn",
                     "app.customer.tempCustomer.layout": "nabone-apps/components/app.customer.tempCustomer/resources/tempCustomer.translatedLayout.custom.jsn",
                     "app.customer.tempCustomer.messageOverrides": "nabone-apps/components/app.customer.tempCustomer/resources/tempCustomer.messageOverrides.jsn"
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Temporary/Prospect customer creation",
                  "topic": "app.customer.tempCustomer.created"
               }
            }
         ]
      },
      {
         "id": "app.customer.wealth",
         "name": "Wealth",
         "dependencies": [
            "nabone.env",
            "nabone.components",
            "app.customer",
            "api.customer.profile",
            "api.termsAndConditions",
            "api.superannuation",
            "nabone.spinner",
            "nabone.ui.currencyInput"
         ],
         "roles": [
            "NABWEALTH-Applications-SM2-SuperConsultants",
            "NABWEALTH-Applications-SM2-ContactCentreConsultants",
            "NABWEALTH-Applications-SM2-GatewayAdvisers"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer.wealth/app.customer.wealth.min.js?1547009616366",
                  "nabone-apps/components/app.customer.wealth/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Wealth",
                     "path": "customer",
                     "config": {
                        "componentId": "app.customer.wealth",
                        "handler": {
                           "config": {
                              "route": "/customer/wealth"
                           }
                        }
                     },
                     "order": 900
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Wealth",
                  "applicationId": "app.customer.wealth",
                  "contentDirective": "customer-wealth",
                  "context": {
                     "prefixedId": "{{ custCtrl.customerNumber }}",
                     "accountNumber": "{{ custCtrl.customer.accountNumber }}",
                     "lineOfBusiness": "{{ custCtrl.customerIdData.lineOfBusiness }}",
                     "customerType": "{{ custCtrl.customerIdData.idSource }}"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/wealth"
                  ],
                  "attributes": {
                     "visibleIf": "['mlc', 'plum'].indexOf(customerIdData.lineOfBusiness) != -1 && ['masterkey', 'plum'].indexOf(customerIdData.idSource) != -1"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.wealth.getRefDataUrl": "nabone-apps/components/app.customer.wealth/resources/refdata/ref-data.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer",
         "name": "Customer",
         "dependencies": [
            "app.componentGroupHeader",
            "api.cse",
            "api.rns",
            "nabone.components",
            "nabone.preferences",
            "api.customer",
            "api.customer.search",
            "api.customer.profile",
            "nabone.storage",
            "nabone.componentGroup",
            "api.referenceData"
         ],
         "roles": [
            "NAB-Team-SMEInsightUsers",
            "NAB-ApplicationEFCSSO-Auth-Users-Prod",
            "NAB-ApplicationEFCSSO-Auth-Users-DEV",
            "EST-BPM&O-Application-SBLBusinessGroup",
            "NABWEALTH-Applications-SM2-SuperConsultants",
            "NABWEALTH-Applications-SM2-ContactCentreConsultants",
            "NABWEALTH-Applications-SM2-GatewayAdvisers",
            "INT-SE-HomeLending-PricingBanker-USR",
            "INT-SE-HomeLending-PricingDesk-USR",
            "NABONE-Applications-KNOWME-BUSINESS-BANKERS",
            "NABONE-Applications-Lending-Bank-Tools-Banker",
            "NABONE-Applications-Lending-Bank-Tools-Ubank",
            "NABONE-Applications-Lending-Bank-Tools-Operations",
            "Digital Business Onboarding Pilot",
            "Digital Business Onboarding Pilot Admin",
            "NABONE-Applications-DBOX-Banker",
            "NABONE-Applications-DBOX-ReadOnly"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.customer/app.customer.min.js?1547009616366",
                  "nabone-apps/components/app.customer/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.components",
               "name": "Customer related components both visual and non-visual (eg. data providers)",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     },
                     "attributes": {
                        "type": "object",
                        "properties": {
                           "visibleIf": {
                              "description": "Access control rules defined as a visibility expression",
                              "type": "string"
                           }
                        },
                        "additionalProperties": true
                     },
                     "autoStart": {
                        "type": "boolean",
                        "default": false
                     }
                  },
                  "required": [
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.quickdata",
               "name": "Components to appear in the customer summary banner",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": {
                           "type": "string"
                        }
                     },
                     "displayOrder": {
                        "description": "The order that the menu items should appear on the header",
                        "type": "number"
                     }
                  },
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "customer"
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "customerActivities"
                  }
               }
            },
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "tempCustomer"
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.customer",
                  "title": "Customer",
                  "contentDirective": "cust-container",
                  "routes": [
                     "/customer/:MEID",
                     "/customer/:MEID/:page",
                     "/customer/:MEID/:page/:pageParams*"
                  ],
                  "maxInstances": 1,
                  "appData": {
                     "enableJumpLinks": false
                  },
                  "context": {
                     "oneComponentGroup": {
                        "componentPluginPointId": "app.customer.components",
                        "title": "Customer View",
                        "menuId": "customer",
                        "menuComponent": "one-component-group-activities-side-bar",
                        "headerComponent": "cust-header",
                        "baseRoute": "/customer"
                     },
                     "containerAppInstance": "::app",
                     "customerDetailsPreliminary": "::app.config.data.customerDetailsPreliminary",
                     "customerDetailsOverride": "::app.config.data.customerDetailsOverride",
                     "expressionContext": "::{ customerIdData: custCtrl.customerIdData, customer: { customerType: custCtrl.customer.customerType, isTemporary: custCtrl.customer.isTemporary, organisationType: custCtrl.customer.organisationType }, customerDetailsOverride: custCtrl.customerDetailsOverride, hasComponentWithRoute: componentGroupCtrl.hasComponentWithRoute() }",
                     "customerNumber": "{{ ::app.params.MEID }}",
                     "isLoading": "custCtrl.loading",
                     "appTitle": "{{ custCtrl.customer.name }}",
                     "customerNin": "{{ ::app.config.data.customerNin }}",
                     "initError": "::custCtrl.initError"
                  },
                  "closeHandler": {
                     "service": "app.customer.CustomerCloseHandler",
                     "config": {}
                  }
               }
            },
            {
               "point": "nabone.toggle.list",
               "config": {
                  "id": "nabone.customer.edit",
                  "toggleStrategy": "nabone.toggle.BasicRoleToggleStrategy",
                  "toggleConfig": {
                     "roles": [
                        "NABONE-Applications-UpdateCustomerDetails",
                        "Digital Business Onboarding Pilot",
                        "Digital Business Onboarding Pilot Admin",
                        "NABONE-Applications-DBOX-Banker"
                     ]
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application loading",
                  "topic": "app.customer.components.application.loading",
                  "monitoredProperties": [
                     "application.applicationId",
                     "application.instanceId",
                     "application.title",
                     "application.route"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application loading failed",
                  "topic": "app.customer.components.application.loadingfailed",
                  "importance": "error",
                  "monitoredProperties": [
                     "application.applicationId",
                     "application.instanceId",
                     "application.title",
                     "application.route"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application closing",
                  "topic": "app.customer.components.application.closed",
                  "monitoredProperties": [
                     "instanceId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application tab switched",
                  "topic": "app.customer.components.application.switchedTo",
                  "monitoredProperties": [
                     "instanceId",
                     "applicationId",
                     "title",
                     "route"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.external.nab",
         "name": "NAB Website",
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "nab.com.au",
                     "path": "apps",
                     "icon": "globe",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/external/nab"
                           }
                        }
                     },
                     "order": 50
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.external.nab",
                  "title": "nab.com.au",
                  "contentDirective": "one-external-app",
                  "context": {
                     "url": "https://www.nab.com.au"
                  },
                  "routes": [
                     "/external/nab"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.group.borrowing",
         "name": "Group Borrowing Application View",
         "dependencies": [
            "api.ela",
            "api.knowme",
            "app.knowme",
            "nabone.notifications"
         ],
         "roles": [
            "EST-BPM&O-Application-SBLBusinessGroup"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.group.borrowing/app.group.borrowing.min.js?1547009616366",
                  "nabone-apps/components/app.group.borrowing/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.group.borrowing.views",
               "name": "Views to appear on the group borrowing history page",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "Unique ID for this widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "Menu title",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "Menu order item",
                        "type": "number"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  },
                  "required": [
                     "widgetId",
                     "routes"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.group.components",
               "config": {
                  "applicationId": "app.group.borrowing",
                  "title": "Borrowing Summary",
                  "contentDirective": "group-borrowing",
                  "context": {
                     "groupNumber": "{{ groupCtrl.groupNumber }}"
                  },
                  "routes": [
                     "/group/borrowing"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Borrowing Summary",
                     "path": "group",
                     "config": {
                        "componentId": "app.group.borrowing",
                        "handler": {
                           "config": {
                              "route": "/group/borrowing"
                           }
                        }
                     },
                     "order": 300
                  }
               }
            },
            {
               "point": "app.group.overview.widgets",
               "config": {
                  "widgetId": "app.group.borrowing.widget",
                  "contentDirective": "borrowing-history-widget",
                  "displayOrder": 2,
                  "launcherService": "app.group.overview.GroupOverviewWidgetLauncher",
                  "context": {
                     "groupNumber": "{{ groupCtrl.groupNumber }}",
                     "launchWidget": "componentGroupCtrl.openComponent(route)"
                  }
               }
            },
            {
               "point": "app.group.borrowing.views",
               "config": {
                  "widgetId": "app.group.borrowing.views.elaSubmissionHistory",
                  "title": "eBL Submission History",
                  "displayOrder": 1,
                  "contentDirective": "ebl-submission-history",
                  "context": {
                     "groupNumber": "groupBorrowingCtrl.groupNumber"
                  },
                  "routes": [
                     "ebl"
                  ]
               }
            },
            {
               "point": "app.group.borrowing.views",
               "config": {
                  "widgetId": "app.group.borrowing.views.elaSubmissionHistory",
                  "title": "ELA Submissions",
                  "displayOrder": 2,
                  "contentDirective": "ela-submission-history",
                  "context": {
                     "groupNumber": "groupBorrowingCtrl.groupNumber"
                  },
                  "routes": [
                     "ela"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "eBL submission history selected",
                  "topic": "app.group.borrowing.views.eblSubmissionHistory.submission.investigated",
                  "monitoredProperties": [
                     "submission.submissionId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "eBL submission history selected",
                  "topic": "app.group.borrowing.views.eblSubmissionHistory.borrower.investigated",
                  "monitoredProperties": [
                     "submission.submissionId",
                     "borrower.borrowerId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "eBL submission history selected",
                  "topic": "app.group.borrowing.views.eblSubmissionHistory.product.investigated",
                  "monitoredProperties": [
                     "submission.submissionId",
                     "borrower.borrowerId",
                     "product.productId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "eBL submission history selected",
                  "topic": "app.group.borrowing.views.eblSubmissionHistory.supportingSecurities.investigated",
                  "monitoredProperties": [
                     "submission.submissionId",
                     "borrower.borrowerId",
                     "product.productId",
                     "security.securityId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "eBL submission history category filtering",
                  "topic": "app.group.borrowing.views.eblSubmissionHistory.filteredBy"
               }
            }
         ]
      },
      {
         "id": "app.group.members",
         "name": "Group Members Application View",
         "dependencies": [
            "api.rns",
            "api.cse",
            "api.sme",
            "app.customer.groups",
            "app.customer.relationships"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.group.members/app.group.members.min.js?1547009616366",
                  "nabone-apps/components/app.group.members/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Members Details",
                     "path": "group",
                     "config": {
                        "componentId": "app.group.members",
                        "handler": {
                           "config": {
                              "route": "/group/members"
                           }
                        }
                     },
                     "order": 200
                  }
               }
            },
            {
               "point": "app.group.components",
               "config": {
                  "applicationId": "app.group.members",
                  "title": "Members Details",
                  "contentDirective": "member-details",
                  "context": {
                     "groupNumber": "{{ groupCtrl.groupNumber }}"
                  },
                  "routes": [
                     "/group/members"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "app.group.overview.widgets",
               "config": {
                  "widgetId": "app.group.members.widget",
                  "contentDirective": "members-widget",
                  "displayOrder": 1,
                  "launcherService": "app.group.overview.GroupOverviewWidgetLauncher",
                  "context": {
                     "groupNumber": "{{ groupCtrl.groupNumber }}",
                     "launchWidget": "componentGroupCtrl.openComponent(route)"
                  }
               }
            }
         ]
      },
      {
         "id": "app.group.mrl",
         "name": "MRL Calculator",
         "dependencies": [
            "api.offer",
            "nabone.env",
            "nabone.cache",
            "nabone.ui.currencyInput"
         ],
         "roles": [
            "EST-BPM&O-Application-SBLBusinessGroup"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.group.mrl/app.group.mrl.min.js?1547009616366",
                  "nabone-apps/components/app.group.mrl/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "MRL Calculator",
                     "path": "group",
                     "config": {
                        "componentId": "app.group.mrl",
                        "handler": {
                           "config": {
                              "route": "/group/mrlCal"
                           }
                        }
                     },
                     "order": 400
                  }
               }
            },
            {
               "point": "app.group.components",
               "config": {
                  "applicationId": "app.group.mrl",
                  "title": "MRL Calculator",
                  "contentDirective": "mrl-calculator",
                  "context": {
                     "groupNumber": "{{ groupCtrl.groupNumber }}"
                  },
                  "routes": [
                     "/group/mrlCal"
                  ],
                  "maxInstances": 1
               }
            }
         ]
      },
      {
         "id": "app.group.overview",
         "name": "Group overview",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.group.overview/app.group.overview.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.group.overview.widgets",
               "name": "Group Overview Screen Widgets",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "A widget title",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "A widget title",
                        "type": "number"
                     },
                     "launcherService": {
                        "description": "Launcher service for starting the application",
                        "type": "string"
                     },
                     "contentURL": {
                        "description": "URL of content template",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "ID of content directive",
                        "type": "string"
                     },
                     "widgetData": {
                        "description": "A widget title",
                        "type": "object"
                     }
                  },
                  "required": [
                     "widgetId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Overview",
                     "path": "group",
                     "config": {
                        "componentId": "app.group.overview",
                        "handler": {
                           "config": {
                              "route": "/group/overview"
                           }
                        }
                     },
                     "order": 100
                  }
               }
            },
            {
               "point": "app.group.components",
               "config": {
                  "applicationId": "app.group.overview",
                  "title": "Overview",
                  "contentDirective": "group-overview",
                  "routes": [
                     "/group/overview"
                  ],
                  "context": {
                     "groupDetails": "groupCtrl.groupDetails",
                     "createInstance": "componentGroupCtrl.openComponent(route)"
                  }
               }
            }
         ]
      },
      {
         "id": "app.group",
         "name": "Group",
         "dependencies": [
            "app.componentGroupHeader",
            "api.rns",
            "nabone.componentGroup"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.group/app.group.min.js?1547009616366",
                  "nabone-apps/components/app.group/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.group.components",
               "name": "Group Components (Menu Items)",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     },
                     "attributes": {
                        "type": "object",
                        "properties": {
                           "visibleIf": {
                              "description": "Access control rules defined as a visibility expression",
                              "type": "string"
                           }
                        },
                        "additionalProperties": true
                     },
                     "autoStart": {
                        "type": "boolean",
                        "default": false
                     }
                  },
                  "required": [
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.group.landing.widgets",
               "name": "Group Landing Screen Widgets",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "The order that the menu items should appear on the groups landing page",
                        "type": "number"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "widgetData": {
                        "type": "object",
                        "properties": {
                           "fillWindow": {
                              "description": "Should the customer page hide the sidebar and extended header by default?",
                              "type": "boolean"
                           }
                        }
                     }
                  },
                  "required": [
                     "widgetId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "group"
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "groupActivities"
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.group",
                  "title": "Group",
                  "contentDirective": "group-container",
                  "context": {
                     "oneComponentGroup": {
                        "componentPluginPointId": "app.group.components",
                        "title": "Group View",
                        "menuId": "group",
                        "menuComponent": "one-component-group-activities-side-bar",
                        "baseRoute": "/group",
                        "headerComponent": "group-header"
                     },
                     "groupNumber": "{{ app.params.MEID }}",
                     "appInstance": "app",
                     "isLoading": "groupCtrl.loading",
                     "initError": "groupCtrl.initError",
                     "appTitle": "{{ ::groupCtrl.groupDetails.shortName }}",
                     "containerAppInstance": "::app"
                  },
                  "routes": [
                     "/group/:MEID",
                     "/group/:MEID/:page",
                     "/group/:MEID/:page/:params*"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application loading",
                  "topic": "app.group.components.application.loading",
                  "monitoredProperties": [
                     "application.applicationId",
                     "application.title"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application loading failed",
                  "topic": "app.group.components.application.loadingfailed",
                  "importance": "error",
                  "monitoredProperties": [
                     "application.applicationId",
                     "application.title"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application tab switched",
                  "topic": "app.group.components.application.switchedTo",
                  "monitoredProperties": [
                     "applicationId",
                     "title"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.knowme",
         "name": "Know Me common resources",
         "dependencies": [
            "nabone.components",
            "lib.moment"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/app.knowme/app.knowme.min.js?1547009616366",
                  "nabone-apps/components/app.knowme/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "config": {
                  "default": {
                     "app.knowme.efcDate.defaultFormat": "YYYYMMDD",
                     "app.knowme.nppDateTime.defaultTz": "Australia/Melbourne",
                     "app.knowme.nppDateTime.defaultFormat": "h:mma (z) - D MMM YYYY",
                     "app.knowme.nppDate.defaultTz": "Australia/Melbourne",
                     "app.knowme.nppDate.defaultFormat": "DD/MM/YYYY",
                     "app.knowme.payIdDate.defaultTz": "Australia/Melbourne",
                     "app.knowme.payIdDate.defaultFormat": "D MMM YYYY"
                  },
                  "dev": {}
               },
               "point": "nabone.env.properties"
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.aml",
         "name": "Customer Attestation",
         "dependencies": [
            "api.nabone",
            "api.referenceData"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/nabone.efcv2.form.aml/nabone.efcv2.form.aml.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "27136dff-c411-45e7-8ff3-f3094547bfc",
                  "overrides": {
                     "modelOverrider": "nabone.efcv2.form.aml.ModelOverrider",
                     "layoutOverrider": "nabone.efcv2.form.aml.LayoutOverrider"
                  }
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "15",
                  "name": "Customer Attestation",
                  "type": "27136dff-c411-45e7-8ff3-f3094547bfc",
                  "layout": "default",
                  "description": "record customer information for the bank to confirm and maintain up to date information about their customers.",
                  "provider": "EFCv2",
                  "display": true,
                  "namespaces": [
                     "customerViewIndividual"
                  ],
                  "transient": true,
                  "order": 800
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.s2c",
         "name": "Standalone to Consolidated",
         "dependencies": [
            "api.customer.accounts",
            "api.customer.cards",
            "nabone.form.catalogue",
            "nabone.user",
            "nabone.efcv2"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/nabone.efcv2.form.s2c/nabone.efcv2.form.s2c.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "d1d185b0-8f27-468e-99b2-ada668144f6f",
                  "name": "Card Migration deferral form",
                  "type": "d1d185b0-8f27-468e-99b2-ada668144f6f",
                  "layout": "default",
                  "description": "allow bankers to reschedule when a customer's card product will be migrated.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue",
                     "customerViewIndividual"
                  ],
                  "order": 12000
               }
            },
            {
               "point": "nabone.form.catalogue.override",
               "config": {
                  "formType": "d1d185b0-8f27-468e-99b2-ada668144f6f",
                  "overrides": {
                     "formOverrider": "nabone.efcv2.form.s2c.FormOverrider"
                  }
               }
            },
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "d1d185b0-8f27-468e-99b2-ada668144f6f",
                  "overrides": {
                     "modelOverrider": "nabone.efcv2.form.s2c.ModelOverrider",
                     "layoutOverrider": "nabone.efcv2.form.s2c.LayoutOverrider"
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.visaCrDrReplacement",
         "name": "Visa Debit/Credit Card Replacement Form",
         "dependencies": [
            "api.qas",
            "api.customer.accounts",
            "api.customer.cards",
            "nabone.form.catalogue",
            "nabone.user",
            "nabone.efcv2"
         ],
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/nabone.efcv2.form.visaCrDrReplacement/nabone.efcv2.form.visaCrDrReplacement.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "573cf5a7-471a-41a3-b6dd-26bbe1236a14",
                  "name": "Visa Debit/Credit Card Replacement",
                  "type": "573cf5a7-471a-41a3-b6dd-26bbe1236a14",
                  "layout": "default",
                  "description": "order a new card to replace an existing card when damaged, to request a colour change for a Visa Debit card or to request an early reissue when required.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "customerViewIndividual"
                  ],
                  "order": 30000
               }
            },
            {
               "point": "nabone.form.catalogue.override",
               "config": {
                  "formType": "573cf5a7-471a-41a3-b6dd-26bbe1236a14",
                  "overrides": {
                     "formOverrider": "nabone.efcv2.form.visaCrDrReplacement.FormOverrider"
                  }
               }
            },
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "573cf5a7-471a-41a3-b6dd-26bbe1236a14",
                  "overrides": {
                     "expressionContextProvider": "nabone.efcv2.form.visaCrDrReplacement.ExpressionContextProvider",
                     "modelOverrider": "nabone.efcv2.form.visaCrDrReplacement.ModelOverrider",
                     "layoutOverrider": "nabone.efcv2.form.visaCrDrReplacement.LayoutOverrider",
                     "rendererSelectionStrategyProvider": "nabone.efcv2.form.visaCrDrReplacement.RendererSelectionStrategyProvider"
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.override.nef",
         "name": "Non-Renewal of Facilities form pre-populator",
         "dependencies": [
            "nabone.form.catalogue",
            "nabone.user",
            "api.customer",
            "api.customer.accounts",
            "nabone.efcv2"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/nabone.efcv2.override.nef/nabone.efcv2.override.nef.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "b8d2df03-cdac-4ca7-a051-fbaad3066593",
                  "name": "Non-Renewal of Facilities",
                  "type": "b8d2df03-cdac-4ca7-a051-fbaad3066593",
                  "layout": "default",
                  "description": "notify customers in cases where NAB make the decision to not renew or rollover facility/ies for Business & Private lending products.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": false,
                  "namespaces": [
                     "customerView",
                     "formCatalogue",
                     "customerViewIndividual"
                  ],
                  "order": 13000
               }
            },
            {
               "point": "nabone.form.catalogue.override",
               "config": {
                  "formType": "b8d2df03-cdac-4ca7-a051-fbaad3066593",
                  "overrides": {
                     "formOverrider": "nabone.efcv2.override.nef.FormOverrider"
                  }
               }
            },
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "b8d2df03-cdac-4ca7-a051-fbaad3066593",
                  "overrides": {
                     "modelOverrider": "nabone.efcv2.override.nef.ModelOverrider",
                     "layoutOverrider": "nabone.efcv2.override.nef.LayoutOverrider"
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.form.catalogue.override.aml",
         "name": "Customer Attestation Override",
         "dependencies": [
            "nabone.form.catalogue"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-apps/components/nabone.form.catalogue.override.aml/nabone.form.catalogue.override.aml.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.form.catalogue.override",
               "config": {
                  "formType": "27136dff-c411-45e7-8ff3-f3094547bfc",
                  "overrides": {
                     "formOverrider": "nabone.form.catalogue.override.aml.FormOverrider"
                  }
               }
            }
         ]
      },
      {
         "id": "api.arrangement",
         "name": "Arrangement API",
         "dependencies": [
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-arrangement-calculator/components/api.arrangement/api.arrangement.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.arrangement",
                  "service": "api.arrangement.ArrangementApiService",
                  "description": "Arrangement"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.arrangement.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.arrangement.withCredentials": true,
                     "api.arrangement.createArrangementUrl": "{{api.arrangement.baseUrl}}/internal/nab/payment/arrangement?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "app.arrangementCalculator",
         "name": "Arrangement Calculator",
         "dependencies": [
            "nabone.components",
            "nabone.forms.core",
            "api.resource",
            "api.arrangement",
            "nabone.notifications"
         ],
         "roles": [
            "NAB-Environment-Nabassist-Agent 1",
            "NAB-Environment-Nabassist-Agent 2",
            "NAB-Environment-Nabassist-AppSupport",
            "NAB-Environment-Nabassist-OperationsSupport",
            "NAB-Environment-Nabassist-PaymentsProcessing",
            "NAB-Environment-Nabassist-Recoveries Agent",
            "NAB-Environment-Nabassist-Recoveries Lead",
            "NAB-Environment-Nabassist-SBAAgent",
            "NAB-Environment-Nabassist-SBATeamLeader",
            "NAB-Environment-Nabassist-Specialist Agent",
            "NAB-Environment-Nabassist-SuperUser",
            "NAB-Environment-Nabassist-SystemAdmin",
            "NAB-Environment-Nabassist-Team Leader",
            "NAB-Environment-Nabassist-Vendor Management",
            "NAB-Environment-Nabassist-Specialist Agent 2",
            "NAB-Environment-Nabassist-Specialist Agent 3",
            "NAB-Environment-Nabassist-SP1",
            "NAB-Environment-Nabassist-SP2",
            "BASDEV-Resource-Nabassist-Vendor Management",
            "BASDEV-Resource-Nabassist-Specialist Agent 2",
            "BASDEV-Resource-Nabassist-Specialist Agent 3",
            "BASDEV-Resource-Nabassist-SP1",
            "BASDEV-Resource-Nabassist-SP2",
            "BASTEST-Resource-Nabassist-Vendor Management",
            "BASTEST-Resource-Nabassist-Specialist Agent 2",
            "BASTEST-Resource-Nabassist-Specialist Agent 3",
            "BASTEST-Resource-Nabassist-SP1",
            "BASTEST-Resource-Nabassist-SP2",
            "BAS-Resource-Nabassist-Vendor Management",
            "BAS-Resource-Nabassist-Specialist Agent 2",
            "BAS-Resource-Nabassist-Specialist Agent 3",
            "BAS-Resource-Nabassist-SP1",
            "BAS-Resource-Nabassist-SP2"
         ],
         "activator": "app.arrangementCalculator.ArrangementCalculatorActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-arrangement-calculator/components/app.arrangementCalculator/app.arrangementCalculator.min.js?1547009616366",
                  "nabone-arrangement-calculator/components/app.arrangementCalculator/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.arrangementCalculator.categories",
               "name": "Plugin point for an Arrangement Calculator Service",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "categoryId": {
                        "description": "A unique ID for the category",
                        "type": "string"
                     },
                     "calculatorService": {
                        "description": "Name of a service that will handle calculation for a product group",
                        "type": "string"
                     }
                  }
               }
            },
            {
               "id": "app.arrangementCalculator.sections",
               "name": "Arrangement Calculator point for all details to be displayed on landing page",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "url to html partial to load the widget",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to load the widget",
                        "type": "string"
                     },
                     "context": {
                        "description": "Any application specific data that will be passed to an app instance",
                        "type": "object"
                     },
                     "categories": {
                        "description": "List of categories applicable for this widget",
                        "type": "array"
                     },
                     "widgetData": {
                        "description": "Data to be used for this widget",
                        "type": "object"
                     }
                  },
                  "required": [
                     "widgetId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.arrangementCalculator",
                  "title": "Arrangement Calculator",
                  "contentDirective": "ac-landing",
                  "routes": [
                     "/arrangementcalc/account/:accountNum/?:params"
                  ],
                  "context": {
                     "accountNumber": "{{ ::app.params.accountNum }}"
                  },
                  "maxInstances": 1
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.arrangementCalculator.withCredentials": false,
                     "app.arrangementCalculator.getRefDataUrl": "nabone-arrangement-calculator/resources/arrangementCalculator/refdata/arrangementCalculatorRefData.jsn"
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "accountDetailsLoans",
                  "contentDirective": "account-details-loans",
                  "context": {
                     "params": "arrCtrl.params",
                     "accountNumber": "arrCtrl.accountNumber"
                  },
                  "categories": [
                     "Loans"
                  ],
                  "widgetData": {
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "arrangementGuidelinesLoans",
                  "contentDirective": "arrangement-guidelines-loans",
                  "context": {
                     "params": "arrCtrl.params",
                     "calculatorServiceName": "arrCtrl.calculatorServiceName"
                  },
                  "categories": [
                     "Loans"
                  ],
                  "widgetData": {
                     "displayOrder": 2
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "calculatorResultsLoans",
                  "contentDirective": "calculator-results-loans",
                  "context": {
                     "params": "arrCtrl.params",
                     "result": "arrCtrl.result",
                     "accountNumber": "arrCtrl.accountNumber"
                  },
                  "categories": [
                     "Loans"
                  ],
                  "widgetData": {
                     "displayOrder": 4
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "accountDetailsBankruptcy",
                  "contentDirective": "account-details-bankruptcy",
                  "context": {
                     "params": "arrCtrl.params",
                     "accountNumber": "arrCtrl.accountNumber"
                  },
                  "categories": [
                     "Bankruptcy"
                  ],
                  "widgetData": {
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "arrangementGuidelinesBankruptcy",
                  "contentUrl": "nabone-arrangement-calculator/components/app.arrangementCalculator/partials/bankruptcy/ArrangementCalculatorArrangementGuidelinesBankruptcy.html",
                  "categories": [
                     "Bankruptcy"
                  ],
                  "widgetData": {
                     "displayOrder": 2
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "calculatorResultsBankruptcy",
                  "contentDirective": "calculator-results-bankruptcy",
                  "context": {
                     "params": "arrCtrl.params",
                     "result": "arrCtrl.result",
                     "accountNumber": "arrCtrl.accountNumber"
                  },
                  "categories": [
                     "Bankruptcy"
                  ],
                  "widgetData": {
                     "displayOrder": 4
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "accountDetailsCards",
                  "contentDirective": "account-details-cards",
                  "context": {
                     "params": "arrCtrl.params",
                     "calculatorServiceName": "arrCtrl.calculatorServiceName"
                  },
                  "categories": [
                     "Cards"
                  ],
                  "widgetData": {
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "arrangementGuidelinesCards",
                  "contentDirective": "arrangement-guidelines-cards",
                  "context": {
                     "params": "arrCtrl.params",
                     "calculatorServiceName": "arrCtrl.calculatorServiceName"
                  },
                  "categories": [
                     "Cards"
                  ],
                  "widgetData": {
                     "displayOrder": 2
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "calculatorResultsCards",
                  "contentDirective": "calculator-results-cards",
                  "context": {
                     "params": "arrCtrl.params",
                     "result": "arrCtrl.result",
                     "accountNumber": "arrCtrl.accountNumber"
                  },
                  "categories": [
                     "Cards"
                  ],
                  "widgetData": {
                     "displayOrder": 4
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.sections",
               "config": {
                  "widgetId": "arrangementDetailsUserInput",
                  "contentDirective": "arrangement-details-user-input",
                  "context": {
                     "params": "arrCtrl.params",
                     "result": "arrCtrl.result",
                     "calculatorServiceName": "arrCtrl.calculatorServiceName",
                     "category": "arrCtrl.productDetails.category"
                  },
                  "categories": [
                     "Bankruptcy",
                     "Cards",
                     "Loans"
                  ],
                  "widgetData": {
                     "displayOrder": 3
                  }
               }
            },
            {
               "point": "app.arrangementCalculator.categories",
               "config": {
                  "categoryId": "Loans",
                  "calculatorService": "app.arrangementCalculator.ArrangementCalculatorLoansService"
               }
            },
            {
               "point": "app.arrangementCalculator.categories",
               "config": {
                  "categoryId": "Cards",
                  "calculatorService": "app.arrangementCalculator.ArrangementCalculatorCardsService"
               }
            },
            {
               "point": "app.arrangementCalculator.categories",
               "config": {
                  "categoryId": "Bankruptcy",
                  "calculatorService": "app.arrangementCalculator.ArrangementCalculatorBankruptcyService"
               }
            }
         ]
      },
      {
         "id": "app.customer.bankerTools",
         "name": "Banker tools component",
         "dependencies": [
            "api.resource",
            "nabone.forms.core",
            "nabone.ui.components.overrides",
            "nabone.components",
            "app.customer.search",
            "nabone.pdf2",
            "app.customer.search.prospectCustomers",
            "app.customer.tempCustomer",
            "api.user",
            "nabone.utils",
            "nabone.expenses"
         ],
         "roles": [
            "NABONE-Applications-Lending-Bank-Tools-Operations",
            "NABONE-Applications-Lending-Bank-Tools-Ubank",
            "NABONE-Applications-Lending-Bank-Tools-Banker"
         ],
         "activator": "app.customer.bankerTools.IncomeCalculatorActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-banker-tools/components/app.customer.bankerTools/app.customer.bankerTools.min.js?1547009616366",
                  "nabone-banker-tools/components/app.customer.bankerTools/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.bankerTools.searchExtensions",
               "name": "Banker Tools point for all extensions to be displayed on customer search modal",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "url to html partial to load the widget",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to load the widget",
                        "type": "string"
                     },
                     "context": {
                        "description": "Any application specific data that will be passed to an app instance",
                        "type": "object"
                     },
                     "widgetData": {
                        "description": "Data to be used for this widget",
                        "type": "object"
                     }
                  },
                  "required": [
                     "widgetId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.bankerTools.categories",
               "name": "Plugin point for an Income Calculator Service",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "categoryId": {
                        "description": "A unique ID for the category",
                        "type": "string"
                     },
                     "calculatorService": {
                        "description": "Name of a service that will handle calculation for total income",
                        "type": "string"
                     }
                  }
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "app.customer.bankerTools"
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Lending Banker Tools",
                     "path": "customerActivities",
                     "config": {
                        "description": "Banker tools to support consumer lending applications",
                        "icon": "home-2",
                        "imageUrl": "nabone-banker-tools/components/app.customer.bankerTools/resources/img/bankerToolsActivity.png",
                        "handler": {
                           "config": {
                              "route": "/customer/bankerTools"
                           }
                        }
                     },
                     "order": 201
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Banker Tools - Lending",
                  "applicationId": "app.customer.bankerTools.lending",
                  "contentDirective": "banker-tools",
                  "context": {
                     "customerDetails": "custCtrl.customer",
                     "homeLendingData": "instance.config.activityData || app.config.homeLendingData"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/bankerTools"
                  ],
                  "appData": {
                     "fillWindow": true,
                     "hideFromMenu": true,
                     "hideFromInstanceList": false
                  },
                  "supports": {
                     "lineOfBusiness": [
                        "nab"
                     ],
                     "idSource": [
                        "me",
                        "temp"
                     ]
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Experience Income Calculator (Add income)",
                  "topic": "app.customer.bankerTools.income.add"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Experience Income Calculator (Begin editing)",
                  "topic": "app.customer.bankerTools.income.begin"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Experience Income Calculator (Finish editing)",
                  "topic": "app.customer.bankerTools.income.finish"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Experience Income Calculator (Remove income)",
                  "topic": "app.customer.bankerTools.income.remove"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.bankerTools.incomeAssessment.schema": "nabone-banker-tools/components/app.customer.bankerTools/resources/forms/incomeAssessmentSchema.jsn",
                     "app.customer.bankerTools.incomeAssessment.layout": "nabone-banker-tools/components/app.customer.bankerTools/resources/forms/incomeAssessmentLayout.jsn",
                     "app.customer.bankerTools.lendingSummary.schema": "nabone-banker-tools/components/app.customer.bankerTools/resources/forms/lendingSummary/lendingSummarySchema.jsn",
                     "app.customer.bankerTools.lendingSummary.layout": "nabone-banker-tools/components/app.customer.bankerTools/resources/forms/lendingSummary/lendingSummaryLayout.jsn",
                     "app.customer.bankerTools.nccp.schema": "nabone-banker-tools/components/app.customer.bankerTools/resources/forms/nccp/nccpCalculatorSchema.jsn",
                     "app.customer.bankerTools.nccp.layout": "nabone-banker-tools/components/app.customer.bankerTools/resources/forms/nccp/nccpCalculatorLayout.jsn",
                     "app.customer.bankerTools.nccp.loanPurposeQuestionSet": "nabone-banker-tools/components/app.customer.bankerTools/resources/nccpLoanPurposeQuestionSet.jsn",
                     "app.customer.bankerTools.nccp.loanPurposes": "nabone-banker-tools/components/app.customer.bankerTools/resources/nccpLoanPurposes.jsn",
                     "app.customer.bankerTools.nccp.availableProducts": "nabone-banker-tools/components/app.customer.bankerTools/resources/nccpAvailableProducts.jsn",
                     "app.customer.bankerTools.nccp.productExclusion": "nabone-banker-tools/components/app.customer.bankerTools/resources/nccpProductExclusion.jsn",
                     "app.customer.bankerTools.nccp.productsQuestionSet": "nabone-banker-tools/components/app.customer.bankerTools/resources/nccpProductsQuestionSet.jsn",
                     "app.customer.bankerTools.nccp.pdfLayout": "nabone-banker-tools/components/app.customer.bankerTools/resources/nccpPdfLayout.jsn",
                     "app.customer.bankerTools.income.pdfLayout": "nabone-banker-tools/components/app.customer.bankerTools/resources/incomePdfLayout.jsn",
                     "app.customer.bankerTools.expenses.pdfLayout": "nabone-banker-tools/components/app.customer.bankerTools/resources/expensesPdfLayout.jsn",
                     "app.customer.bankerTools.refData": "nabone-banker-tools/components/app.customer.bankerTools/resources/refData.jsn"
                  }
               }
            },
            {
               "point": "app.customer.bankerTools.searchExtensions",
               "config": {
                  "widgetId": "addProspectCustomer",
                  "contentUrl": "nabone-banker-tools/components/app.customer.bankerTools/partials/BtAddProspectCustomer.html",
                  "widgetData": {
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.customer.bankerTools.searchExtensions",
               "config": {
                  "widgetId": "prospectCustomersList",
                  "contentUrl": "nabone-banker-tools/components/app.customer.bankerTools/partials/BtProspectCustomerList.html",
                  "widgetData": {
                     "displayOrder": 2
                  }
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "payg",
                  "calculatorService": "app.customer.bankerTools.IncomeCalculatorPaygService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "bonus",
                  "calculatorService": "app.customer.bankerTools.IncomeCalculatorBonusService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "superannuation",
                  "calculatorService": "app.customer.bankerTools.SuperannuationIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "investmentIncome",
                  "calculatorService": "app.customer.bankerTools.InvestmentIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "existingRental",
                  "calculatorService": "app.customer.bankerTools.ExistingRentalIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "proposedRental",
                  "calculatorService": "app.customer.bankerTools.ProposedRentalIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "additionalIncome",
                  "calculatorService": "app.customer.bankerTools.IncomeCalculatorAddIncomeService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "overtimeOrCommission",
                  "calculatorService": "app.customer.bankerTools.OvertimeOrCommissionCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "selfEmployedIncome",
                  "calculatorService": "app.customer.bankerTools.SelfEmployedIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "selfEmployedIncome",
                  "calculatorService": "app.customer.bankerTools.SelfEmployedIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "soleTrader",
                  "calculatorService": "app.customer.bankerTools.SoleTraderIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "partnershipIndividual",
                  "calculatorService": "app.customer.bankerTools.PartnershipIndividualIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "trust",
                  "calculatorService": "app.customer.bankerTools.TrustIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "partnershipOther",
                  "calculatorService": "app.customer.bankerTools.PartnershipOtherIncomeCalculatorService"
               }
            },
            {
               "point": "app.customer.bankerTools.categories",
               "config": {
                  "categoryId": "company",
                  "calculatorService": "app.customer.bankerTools.CompanyIncomeCalculatorService"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "bankerTools.nccp",
                  "name": "NCCP Customer Requirements Objectives",
                  "linkUrl": "nabone-banker-tools/components/app.customer.bankerTools/resources/docs/nccpCustomerRequirementsObjectives.pdf",
                  "order": 1
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-banker-tools/components/app.customer.bankerTools/resources/help/bankerToolsHelpContent.jsn",
                  "componentId": "app.customer.bankerTools.lending"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-banker-tools/components/app.customer.bankerTools/resources/help/bankerToolsWhatsNewContent.jsn",
                  "componentId": "app.customer.bankerTools.lending"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Lending Banker Tools"
               }
            }
         ]
      },
      {
         "id": "app.customer.bankerTools.searchExtensions.importHomeLending",
         "name": "Banker tools search extensions",
         "dependencies": [
            "app.customer.bankerTools",
            "app.customer.search"
         ],
         "roles": [
            "NABONE-Applications-Lending-Bank-Tools-Operations",
            "NABONE-Applications-Lending-Bank-Tools-Ubank",
            "NABONE-Applications-Lending-Bank-Tools-Banker"
         ],
         "plugins": [
            {
               "point": "app.customer.search.searchExtensions",
               "config": {
                  "title": "Consumer Lending Banker Tools - Upload Customer File",
                  "contentDirective": "import-home-lending",
                  "order": 1,
                  "context": {
                     "ngIf": "!searchCtrl.hideSearch"
                  }
               }
            }
         ]
      },
      {
         "id": "app.blp",
         "name": "Business Lending Proposal",
         "dependencies": [
            "lib.ngA11y",
            "nabone.components",
            "nabone.notifications",
            "api.efc2",
            "api.resource",
            "nabone.forms.core",
            "nabone.ui.stepNavigation",
            "nabone.ui.modal",
            "nabone.pdf2",
            "nabone.storage",
            "nabone.env"
         ],
         "roles": [
            "NAB-Application-BLP-User"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-blp/components/app.blp/app.blp.min.js?1547009616366",
                  "nabone-blp/components/app.blp/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "app.blp"
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Business Lending Proposal",
                     "path": "apps",
                     "icon": "newspaper",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/blp"
                           }
                        }
                     },
                     "order": 30
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.blp",
                  "title": "Business Lending Proposal",
                  "contentUrl": "nabone-blp/components/app.blp/partials/BusinessLendingProposalView.html",
                  "routes": [
                     "/blp"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.blp.getRefDataUrl": "nabone-blp/components/app.blp/resources/refdata/ref-data.jsn",
                     "app.blp.formUrl": "nabone-blp/components/app.blp/resources/forms/productDetailsEfcDefnResponse.jsn"
                  }
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "blp.userGuide",
                  "name": "Business Lending Proposal User Guide",
                  "linkUrl": "https://spaces.cts.nab.com.au/sites/s02/site789/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/s02/site789/2017%20Value%20Capability/7.%20Delivering%20your%20BLP/Business%20Lending%20Proposal%20User%20Guide.pdf&action=default"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Proposal started",
                  "topic": "app.blp.proposal.started"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Draft Proposal Saved",
                  "topic": "app.blp.proposal.saved",
                  "monitoredProperties": [
                     "localProposalId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Draft Proposal Resumed",
                  "topic": "app.blp.proposal.resumed",
                  "monitoredProperties": [
                     "localProposalId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Proposal Finalised (downloaded)",
                  "topic": "app.blp.proposal.finalised",
                  "monitoredProperties": [
                     "localProposalId"
                  ]
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Business Lending Proposal"
               }
            }
         ]
      },
      {
         "id": "api.veda",
         "name": "Equifax (VEDA) ABN/ACN Lookup API",
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-business-lookup/components/api.veda/api.veda.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.veda.pollInterval": 60000,
                     "api.veda.maxRetryCount": 3,
                     "api.veda.searchOrgDetailsUrl": "{{api.eesg.baseUrl}}/info/organisation/search?v=1",
                     "api.veda.getApplicationIdUrl": "{{api.eesg.baseUrl}}/info/beneficialownership/organisation/${organisationId}?v=1",
                     "api.veda.getOrgBeneficialOwnershipUrl": "{{api.eesg.baseUrl}}/info/beneficialownership/poll/${pollId}?v=3"
                  }
               }
            }
         ]
      },
      {
         "id": "api.veda.ui",
         "name": "VEDA Get Organisation - Test UI Plugin",
         "dependencies": [
            "api.veda",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.veda",
                  "service": "api.veda.VedaAbnAcnLookupService",
                  "description": "VEDA Organisation Service"
               }
            }
         ]
      },
      {
         "id": "app.customer.businessLookup.existing",
         "name": "Business Organisation Info",
         "dependencies": [
            "app.customer.businessLookup",
            "app.onboarding.refData"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-business-lookup/components/app.customer.businessLookup.existing/app.customer.businessLookup.existing.min.js?1547009616366",
                  "nabone-business-lookup/components/app.customer.businessLookup.existing/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.businessLookup.existing.components",
               "name": "Business Lookup",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     }
                  },
                  "required": [
                     "title",
                     "widgetId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.customer.businessLookup.components",
               "config": {
                  "applicationId": "customer.lookup.existing",
                  "title": "Organisation Information",
                  "contentDirective": "business-lookup-info-original",
                  "context": {
                     "vedaData": "businessLookupCtrl.selectedVedaResponse",
                     "customerDetails": "businessLookupCtrl.customerDetails",
                     "orgNumber": "businessLookupCtrl.orgNumber"
                  },
                  "routes": [
                     "/customer/lookup-existing"
                  ],
                  "supportedList": [
                     "APTY",
                     "SOLE"
                  ]
               }
            },
            {
               "point": "app.customer.businessLookup.existing.components",
               "config": {
                  "widgetId": "organisationInfoOriginal",
                  "title": "Organisation Information",
                  "contentDirective": "organisation-info-original",
                  "context": {
                     "customerDetails": "businessOrgInfoCtrl.customerDetails",
                     "vedaResponse": "businessOrgInfoCtrl.vedaData",
                     "vedaBeneficialOwnershipResponse": "businessOrgInfoCtrl.beneficialOwnershipResponse"
                  },
                  "widgetData": {
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.customer.businessLookup.existing.components",
               "config": {
                  "widgetId": "corporateStructureOriginal",
                  "title": "Corporate Structure",
                  "context": {
                     "iframeConfig": "businessOrgInfoCtrl.iframeConfig"
                  },
                  "contentDirective": "corporate-structure-original",
                  "widgetData": {
                     "displayOrder": 2,
                     "iframeConfig": {
                        "branchCode": "0037",
                        "memberCode": "NABV",
                        "userCode": "Z1TF",
                        "browserVersion": "NAB UI",
                        "defaultHeight": 370,
                        "iframeUrl": "https://veda.au.thenational.com:451/visual/openVCVWorkspace.do"
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.businessLookup",
         "name": "Business Lookup & Onboarding",
         "dependencies": [
            "app.kyc",
            "app.customer",
            "api.veda",
            "api.och",
            "nabone.alerts",
            "nabone.schema",
            "nabone.utils",
            "lib.moment",
            "app.onboarding.refData",
            "nabone.forms.core"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-business-lookup/components/app.customer.businessLookup/app.customer.businessLookup.min.js?1547009616366",
                  "nabone-business-lookup/components/app.customer.businessLookup/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.businessLookup.components",
               "name": "Business Lookup Components",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "supportedPluginPointId": {
                        "description": "Plugin point id that can be interrogated to find a list of supported org types for onboarding. The plugin config must contain a entityTypeId property.",
                        "type": "string"
                     },
                     "supportedList": {
                        "description": "Static list of supported org types for onboarding",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  },
                  "required": [
                     "title",
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "supportedPluginPointId"
                        ]
                     },
                     {
                        "required": [
                           "supportedList"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.businessLookup.supportedEntityTypes",
               "name": "Business Lookup Supported Entity Types",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "entityTypeId": {
                        "description": "The supported primary entity type",
                        "type": "string"
                     }
                  },
                  "required": [
                     "entityTypeId"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Business Lookup & Onboarding",
                     "path": "customerActivities",
                     "config": {
                        "description": "Search Equifax to view an entities structure. Onboard a new entity including any individuals as part of the entity, linking profiles and complete KYC.",
                        "icon": "briefcase",
                        "handler": {
                           "config": {
                              "route": "/customer/business-lookup-onboarding"
                           }
                        },
                        "attributes": {
                           "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'temp' && (customer.isTemporary && customer.customerType === 'organisation')"
                        }
                     },
                     "order": 201
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Business Lookup",
                     "path": "customerActivities",
                     "config": {
                        "description": "Search Equifax to view organisation information including an entities structure.",
                        "icon": "briefcase",
                        "handler": {
                           "config": {
                              "route": "/customer/business-lookup-existing"
                           }
                        },
                        "attributes": {
                           "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (!customer.isTemporary && customer.customerType === 'organisation')"
                        }
                     },
                     "order": 201
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Business Lookup & Onboarding",
                  "applicationId": "customer.businessLookup.onboarding",
                  "contentDirective": "business-lookup",
                  "context": {
                     "customerDetails": "custCtrl.customer"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/business-lookup-onboarding",
                     "/customer/:ID/business-lookup-onboarding"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'temp' && (customer.isTemporary && customer.customerType === 'organisation')"
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Business Lookup",
                  "applicationId": "customer.businessLookup.existing",
                  "contentDirective": "business-lookup",
                  "context": {
                     "customerDetails": "custCtrl.customer"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/business-lookup-existing"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (!customer.isTemporary && customer.customerType === 'organisation')"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.businessLookup.basePath": "nabone-business-lookup/components/app.customer.businessLookup/resources",
                     "app.customer.businessLookup.withCredentials": false
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Completed business lookup (initial ABN/ACN/ARBN/ARSN search)",
                  "topic": "app.customer.businessLookup.businessLookupCompleted"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Completed company search (Beneficial Ownership lookup)",
                  "topic": "app.customer.businessLookup.companySearchCompleted"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-business-lookup/components/app.customer.businessLookup/resources/dboxHelpContent.jsn",
                  "componentId": "customer.businessLookup.onboarding"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-business-lookup/components/app.customer.businessLookup/resources/dboxExistingHelpContent.jsn",
                  "componentId": "customer.businessLookup.existing"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-business-lookup/components/app.customer.businessLookup/resources/dboxWhatsNewContent.jsn",
                  "componentId": "customer.businessLookup.onboarding"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Business Lookup & Onboarding"
               }
            }
         ]
      },
      {
         "id": "app.componentoverview",
         "name": "nabONE Component Overview",
         "dependencies": [
            "nabone.notifications"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-component-viewer/components/app.componentoverview/app.componentoverview.min.js?1547009616366",
                  "nabone-component-viewer/components/app.componentoverview/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.componentoverview",
                  "title": "nabONE Component Overview",
                  "contentDirective": "one-component-overview",
                  "context": {
                     "routeParams": "app.params"
                  },
                  "routes": [
                     "/componentoverview",
                     "/componentoverview/:component_id"
                  ]
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "Component Overview",
                  "icon": "cubes",
                  "route": "/componentoverview",
                  "categoryId": "nabone"
               }
            }
         ]
      },
      {
         "id": "nabone.container",
         "name": "nabONE Container",
         "dependencies": [
            "nabone.apps",
            "nabone.pkg"
         ],
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-container/components/nabone.container/nabone.container.min.js?1547009616366",
                  "nabone-container/components/nabone.container/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.platform.container",
               "config": {
                  "contentDirective": "nabone-container"
               }
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.rightSidebar.apps",
               "name": "nabONE Container right sidebar apps",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "properties": {
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "context": {
                        "additionalProperties": true,
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object"
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "applicationId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     }
                  },
                  "required": [
                     "title",
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ],
                  "type": "object"
               }
            }
         ]
      },
      {
         "id": "app.customer.onboarding.individual",
         "name": "Individual Onboarding Form",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.eval",
            "nabone.schema",
            "app.customer.onboarding",
            "api.referenceData",
            "api.qas",
            "nabone.utils",
            "nabone.notifications",
            "nabone.ui.dom",
            "api.customer"
         ],
         "activator": "app.customer.onboarding.individual.OnboardingIndividualActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-customer-onboarding/components/app.customer.onboarding.individual/app.customer.onboarding.individual.min.js?1547009616366",
                  "nabone-customer-onboarding/components/app.customer.onboarding.individual/style.css?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "app.customer.onboarding.organisation",
         "name": "Organisation Onboarding Form",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.eval",
            "nabone.schema",
            "app.customer.onboarding",
            "api.customer",
            "api.referenceData",
            "api.qas",
            "nabone.utils",
            "nabone.notifications",
            "nabone.ui.dom"
         ],
         "activator": "app.customer.onboarding.organisation.OnboardingOrganisationActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-customer-onboarding/components/app.customer.onboarding.organisation/app.customer.onboarding.organisation.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "app.customer.onboarding",
         "name": "Customer Onboarding",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.alerts",
            "nabone.eval",
            "nabone.schema",
            "nabone.utils",
            "nabone.ui.modal",
            "api.referenceData",
            "api.qas",
            "api.ifti",
            "api.customer",
            "app.onboarding.refData"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-customer-onboarding/components/app.customer.onboarding/app.customer.onboarding.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.onboarding.withCredentials": false,
                     "app.customer.onboarding.getRefDataUrl": "nabone-customer-onboarding/components/app.customer.onboarding/resources/onboardingRefData.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "api.daf",
         "name": "DAF User Admin",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.utils",
            "api.eesg"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-daf-user-admin/components/api.daf/api.daf.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.daf",
                  "service": "api.daf.DafApiService",
                  "description": "DAF User Admin"
               }
            },
            {
               "config": {
                  "default": {
                     "api.daf.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.daf.updateUserIdentityUrl": "{{api.daf.baseUrl}}/internal/${lineOfBusiness}/identity/${brand}/${userType}/${username}?v=1",
                     "api.daf.resetPasswordUrl": "{{api.daf.baseUrl}}/internal/${lineOfBusiness}/identity/${brand}/${userType}/${username}/password?v=1",
                     "api.daf.getUserMetadataUrl": "{{api.daf.baseUrl}}/internal/${lineOfBusiness}/identity/${brand}/${userType}/${username}/details?v=2",
                     "api.daf.userIdentityStateUrl": "{{api.daf.baseUrl}}/internal/${lineOfBusiness}/identity/${brand}/${userType}/${username}/state?v=1",
                     "api.daf.createUserIdentityUrl": "{{api.daf.baseUrl}}/internal/${lineOfBusiness}/identity/${brand}?v=2",
                     "api.daf.searchUserIdentitiesUrl": "{{api.daf.baseUrl}}/internal/${lineOfBusiness}/identities/${brand}/${userType}/${username}/search?v=1",
                     "api.daf.retrieveTenantIdentity": "{{api.daf.baseUrl}}/internal/identity/tenants?v=1",
                     "api.daf.baseUrl.withCredentials": true
                  }
               },
               "point": "nabone.env.properties"
            }
         ]
      },
      {
         "id": "app.daf.tenant.jbwere",
         "name": "JBWere DAF Config",
         "dependencies": [
            "app.daf"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-daf-user-admin/components/app.daf.tenant.jbwere/app.daf.tenant.jbwere.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "jbwid",
                     "firstName",
                     "surname",
                     "nagAccessRole",
                     "jbwsecureiteaseid",
                     "jbwmarketondemandid",
                     "mobile",
                     "email",
                     "status"
                  ],
                  "formId": "customer.search"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "jbwid",
                     "firstName",
                     "surname",
                     "nagAccessRole",
                     "employeeNumber",
                     "jbwsecureiteaseid",
                     "jbwmarketondemandid",
                     "mobile",
                     "email"
                  ],
                  "formId": "customer.details.view"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "firstName",
                     "surname",
                     "nagAccessRole",
                     "employeeNumber",
                     "jbwsecureiteaseid",
                     "jbwmarketondemandid",
                     "mobile",
                     "email"
                  ],
                  "formId": "customer.details.edit"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "status"
                  ],
                  "formId": "customer.status.view"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "status"
                  ],
                  "formId": "customer.status.edit"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "firstName",
                     "surname",
                     "nagAccessRole",
                     "employeeNumber",
                     "jbwsecureiteaseid",
                     "mobile",
                     "email"
                  ],
                  "formId": "customer.create"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "tenantId": "jbwere",
                  "fields": [
                     "jbwid",
                     "firstName",
                     "surname",
                     "nagAccessRole",
                     "jbwsecureiteaseid",
                     "jbwmarketondemandid",
                     "mobile",
                     "email",
                     "status"
                  ],
                  "formId": "customer.search.results"
               },
               "point": "app.daf.form.fields"
            },
            {
               "config": {
                  "autoPasswordResetMapping": {
                     "EMAIL": "email",
                     "SMS": "mobile"
                  },
                  "profileDisplayFields": {
                     "name": [
                        "firstName",
                        "surname"
                     ],
                     "username": [
                        "jbwid"
                     ]
                  },
                  "statusField": "status",
                  "tenantId": "jbwere"
               },
               "point": "app.daf.tenant"
            }
         ],
         "pluginPoints": []
      },
      {
         "dependencies": [
            "api.daf",
            "nabone.forms.core",
            "nabone.components",
            "api.resource",
            "nabone.notifications",
            "nabone.cache"
         ],
         "id": "app.daf",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-daf-user-admin/components/app.daf/app.daf.min.js?1547009616366",
                  "nabone-daf-user-admin/components/app.daf/style.css?1547009616366"
               ]
            }
         ],
         "name": "DAF User Admin",
         "pluginPoints": [
            {
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ],
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "context": {
                        "additionalProperties": true,
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object"
                     },
                     "isVisible": {
                        "description": "An angular expression returning a boolean value to determine whether or not the widget should be displayed in the given context",
                        "type": "string"
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "items": {
                           "type": "string"
                        },
                        "type": "array"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     }
                  },
                  "required": [
                     "title",
                     "applicationId",
                     "routes"
                  ],
                  "type": "object"
               },
               "id": "app.daf.tenant.views",
               "name": "Views to appear in a DAF Tenant screen"
            },
            {
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "properties": {
                     "fields": {
                        "description": "Fields to display in the given order",
                        "items": {
                           "type": "string"
                        },
                        "type": "array"
                     },
                     "formId": {
                        "type": "string"
                     },
                     "tenantId": {
                        "description": "The 'name' property from Get Identity Store Tenants that this config item is associated with",
                        "type": "string"
                     }
                  },
                  "required": [
                     "tenantId",
                     "formId",
                     "fields"
                  ],
                  "type": "object"
               },
               "id": "app.daf.form.fields",
               "name": "Specify fields and their order to appear on various DAF forms"
            },
            {
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "definitions": {
                     "listOfString": {
                        "items": {
                           "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                     }
                  },
                  "properties": {
                     "profileDisplayFields": {
                        "description": "Fields to be shown on the profile display header",
                        "properties": {
                           "name": {
                              "$ref": "#/definitions/listOfString"
                           },
                           "username": {
                              "$ref": "#/definitions/listOfString"
                           }
                        },
                        "required": [
                           "name",
                           "username"
                        ]
                     },
                     "autoPasswordResetMapping": {
                        "description": "Map auto password reset methods to tenant specific attributes. If a property is not mapped, it will not be displayed as an option.",
                        "type": "object",
                        "patternProperties": {
                           "^(EMAIL|SMS|POST)$": {
                              "type": "string"
                           }
                        },
                        "additionalProperties": false
                     },
                     "tenantId": {
                        "description": "The 'name' property from Get Identity Store Tenants to match this config again",
                        "type": "string"
                     },
                     "statusField": {
                        "type": "string"
                     }
                  },
                  "required": [
                     "tenantId",
                     "profileDisplayFields",
                     "statusField",
                     "autoPasswordResetMapping"
                  ],
                  "type": "object"
               },
               "id": "app.daf.tenant",
               "name": "Tenant configuration"
            }
         ],
         "roles": [
            "NABONE-Applications-AdminPortal-Administrator"
         ],
         "plugins": [
            {
               "config": {
                  "applicationId": "app.daf",
                  "contentDirective": "daf-select-tenant",
                  "context": {
                     "tenantId": "app.params.tenant",
                     "routeParams": "app.params"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/daf",
                     "/daf/:tenant",
                     "/daf/:tenant/:params*"
                  ],
                  "title": "User Access Portal"
               },
               "point": "nabone.container.apps"
            },
            {
               "config": {
                  "action": {
                     "config": {
                        "handler": {
                           "config": {
                              "route": "/daf"
                           },
                           "service": "ApplicationRouteLauncher"
                        }
                     },
                     "icon": "key",
                     "label": "User Access Portal",
                     "order": 999,
                     "path": "apps"
                  }
               },
               "point": "one.platform.menus"
            },
            {
               "config": {
                  "applicationId": "app.daf.tenant.customer.search",
                  "contentDirective": "daf-tenant-customer-search",
                  "context": {
                     "launch": ":: ctrl.openCustomer(route)",
                     "metadata": ":: ctrl.metadata",
                     "tenant": ":: ctrl.tenant"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/daf/:tenant",
                     "/daf/:tenant/search"
                  ],
                  "title": "Customer Search",
                  "appData": {
                     "isInitialScreen": true
                  }
               },
               "point": "app.daf.tenant.views"
            },
            {
               "config": {
                  "applicationId": "app.daf.tenant.customer.view",
                  "contentDirective": "daf-tenant-customer",
                  "context": {
                     "customerId": ":: instance.params.id",
                     "customerKey": ":: instance.params.key",
                     "metadata": ":: ctrl.metadata",
                     "tenant": ":: ctrl.tenant"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/daf/:tenant/customer/:id",
                     "/daf/:tenant/customer/:id/:page"
                  ],
                  "title": "Customer View"
               },
               "point": "app.daf.tenant.views"
            }
         ]
      },
      {
         "id": "app.customer.dbox.launcher",
         "name": "DBOX Version Launcher",
         "dependencies": [
            "api.onboarding",
            "app.customer",
            "app.nabonehome.inflightApps",
            "app.customer.businessLookup"
         ],
         "roles": [
            "Digital Business Onboarding Pilot",
            "Digital Business Onboarding Pilot Admin",
            "NABONE-Applications-DBOX-Banker",
            "NABONE-Applications-DBOX-ReadOnly"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox-launcher/components/app.customer.dbox.launcher/app.customer.dbox.launcher.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.dbox.versions",
               "name": "DBOX Version Launcher",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     }
                  },
                  "required": [
                     "title",
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "supportedList"
                        ]
                     },
                     {
                        "required": [
                           "supportedPluginPointId"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.customer.businessLookup.components",
               "config": {
                  "contentDirective": "dbox-version-launcher",
                  "context": {
                     "customerDetails": "businessLookupCtrl.customerDetails",
                     "showBusinessContent": "businessLookupCtrl.showBusinessContent"
                  },
                  "title": "DBOX Version Launcher",
                  "applicationId": "customer.dbox.launcher",
                  "supportedList": [
                     "trust",
                     "apty",
                     "soleTrader"
                  ],
                  "routes": [
                     "/customer/dbox"
                  ]
               }
            },
            {
               "point": "nabone.container.homepage.inflight",
               "config": {
                  "serviceClass": "app.customer.dbox.launcher.RetrieveInflightDboxApplications",
                  "applicationType": "Business Onboarding"
               }
            },
            {
               "point": "app.customer.history.contributions",
               "config": {
                  "applicationId": "app.customer.dbox",
                  "service": "app.customer.dbox.launcher.DboxHistoryService",
                  "applicationType": "Business Onboarding",
                  "route": "/customer/dbox"
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "DBOX Version Launcher",
                  "applicationId": "app.customer.dbox",
                  "contentDirective": "dbox-version-launcher",
                  "maxInstances": 1,
                  "routes": [
                     "/customer/dbox"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.customer.search.onboarding",
         "name": "Customer Search",
         "dependencies": [
            "api.onboarding",
            "app.customer.dbox.launcher"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox-launcher/components/app.customer.search.onboarding/app.customer.search.onboarding.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.customer.search.providerExtensions",
               "config": {
                  "id": "app.customer.search.provider.organisation.onboarding",
                  "providerId": "app.customer.search.provider.organisation",
                  "title": "Onboarding Cases",
                  "contentDirective": "include-onboarding-results"
               }
            },
            {
               "point": "app.customer.search.searchExtensions",
               "config": {
                  "title": "Business Onboarding Applications",
                  "contentDirective": "onboarding-results",
                  "order": 0,
                  "classes": "col-xs-12",
                  "context": {
                     "results": "searchCtrl.extensionResults['app.customer.search.provider.organisation.onboarding']",
                     "inProgress": "searchCtrl.extensionInProgress['app.customer.search.provider.organisation.onboarding']",
                     "hideSearch": "searchCtrl.hideSearch"
                  }
               }
            }
         ]
      },
      {
         "dependencies": [
            "api.customer.profile",
            "app.onboarding.refData",
            "app.customer.businessLookup",
            "app.customer.search",
            "api.customer.search",
            "app.customer.onboarding.legacy",
            "app.customer.onboarding.individual.legacy",
            "app.customer.onboarding.organisation.legacy",
            "app.kyc",
            "api.och",
            "api.customer.profile",
            "api.kyc",
            "api.onboarding",
            "api.customer",
            "nabone.ui.modal",
            "nabone.eval",
            "app.onboarding.refData"
         ],
         "id": "app.customer.dbox.legacy",
         "roles": [
            "Digital Business Onboarding Pilot",
            "Digital Business Onboarding Pilot Admin",
            "NABONE-Applications-DBOX-Banker",
            "NABONE-Applications-DBOX-ReadOnly"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox-legacy/components/app.customer.dbox.legacy/app.customer.dbox.legacy.min.js?1547009616366",
                  "nabone-dbox-legacy/components/app.customer.dbox.legacy/style.css?1547009616366"
               ]
            }
         ],
         "name": "Business Organisation Info",
         "pluginPoints": [
            {
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ],
                  "properties": {
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "context": {
                        "additionalProperties": true,
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object"
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     }
                  },
                  "required": [
                     "title",
                     "widgetId"
                  ],
                  "type": "object"
               },
               "id": "app.customer.dbox.legacy.components",
               "name": "Business Lookup"
            },
            {
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ],
                  "properties": {
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "context": {
                        "additionalProperties": true,
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object"
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     }
                  },
                  "required": [
                     "title",
                     "widgetId"
                  ],
                  "type": "object"
               },
               "id": "app.customer.dbox.legacyLookup.onboarding",
               "name": "Onboarding"
            },
            {
               "id": "app.customer.dbox.legacy.search.providers.individual",
               "name": "Customer Search Providers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for this search provider",
                        "type": "string"
                     },
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to render the provider search form",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.dbox.legacy.search.providers.organisation",
               "name": "Customer Search Providers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for this search provider",
                        "type": "string"
                     },
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to render the provider search form",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "config": {
                  "default": {
                     "app.customer.dbox.legacy.basePath": "nabone-dbox-legacy/components/app.customer.dbox.legacy/resources",
                     "app.customer.dbox.legacy.saveIndustryCode.layout": "{{app.customer.dbox.legacy.basePath}}/forms/SaveIndustryCodeLayout.jsn",
                     "app.customer.dbox.legacy.saveIndustryCode.schema": "{{app.customer.dbox.legacy.basePath}}/forms/SaveIndustryCodeSchema.jsn",
                     "app.customer.dbox.legacy.toastMessagesDataUrl": "{{app.customer.dbox.legacy.basePath}}/toastMessages.jsn",
                     "app.customer.dbox.legacy.onboardingSchemaDataUrl": "{{app.customer.dbox.legacy.basePath}}/KycOnboardingSchemaV1.jsn"
                  }
               },
               "point": "nabone.env.properties"
            },
            {
               "point": "app.customer.dbox.versions",
               "config": {
                  "contentDirective": "business-lookup-info",
                  "context": {
                     "customerDetails": "dboxVersionLauncherCtrl.customerDetails",
                     "dboxCaseDeferred": "dboxVersionLauncherCtrl.dboxCaseDeferred"
                  },
                  "title": "Organisation Information",
                  "applicationId": "customer.dbox.version1",
                  "supportedList": [
                     "apty",
                     "soleTrader"
                  ],
                  "routes": [
                     "/customer/dbox-version1"
                  ]
               }
            },
            {
               "config": {
                  "contentDirective": "organisation-info",
                  "context": {
                     "customerDetails": "businessOrgInfoCtrl.customerDetails",
                     "kycOnboardingCase": "businessOrgInfoCtrl.kycOnboardingCase",
                     "orgNumber": "businessOrgInfoCtrl.orgNumber"
                  },
                  "title": "Organisation Information",
                  "widgetData": {
                     "displayOrder": 1
                  },
                  "widgetId": "organisationInfo"
               },
               "point": "app.customer.dbox.legacy.components"
            },
            {
               "config": {
                  "contentDirective": "corporate-structure",
                  "context": {
                     "iframeConfig": "businessOrgInfoCtrl.iframeConfig"
                  },
                  "title": "Corporate Structure",
                  "widgetData": {
                     "displayOrder": 2,
                     "iframeConfig": {
                        "branchCode": "0037",
                        "browserVersion": "NAB UI",
                        "defaultHeight": 370,
                        "iframeUrl": "https://veda.au.thenational.com:451/visual/openVCVWorkspace.do",
                        "memberCode": "NABV",
                        "userCode": "Z1TF"
                     }
                  },
                  "widgetId": "corporateStructure"
               },
               "point": "app.customer.dbox.legacy.components"
            },
            {
               "point": "app.customer.businessLookup.supportedEntityTypes",
               "config": {
                  "entityTypeId": "apty"
               }
            },
            {
               "point": "app.customer.businessLookup.supportedEntityTypes",
               "config": {
                  "entityTypeId": "soleTrader"
               }
            },
            {
               "point": "app.customer.dbox.legacy.search.providers.individual",
               "config": {
                  "id": "app.customer.search.provider.customerid",
                  "title": "Customer IDs",
                  "contentDirective": "search-provider-customer-ids",
                  "order": 10
               }
            },
            {
               "point": "app.customer.dbox.legacy.search.providers.organisation",
               "config": {
                  "id": "app.customer.search.provider.customerid",
                  "title": "Customer IDs",
                  "contentDirective": "search-provider-customer-ids",
                  "order": 10
               }
            },
            {
               "point": "app.customer.dbox.legacy.search.providers.individual",
               "config": {
                  "id": "app.customer.search.provider.individual",
                  "title": "Individuals",
                  "contentDirective": "search-provider-individuals",
                  "order": 20
               }
            },
            {
               "point": "app.customer.dbox.legacy.search.providers.organisation",
               "config": {
                  "id": "app.customer.search.provider.organisation",
                  "title": "Organisations",
                  "contentDirective": "search-provider-organisations",
                  "order": 30
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "New application created (new member of Dbox Application)",
                  "topic": "app.customer.kyc.onboarding.applicationCreated"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "New individual started (existing customer)",
                  "topic": "app.customer.kyc.onboarding.existingIndividualStarted"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "New individual started (new to bank customer)",
                  "topic": "app.customer.kyc.onboarding.newIndividualStarted"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Completed individual",
                  "topic": "app.customer.kyc.onboarding.individualCompleted"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Entity Started",
                  "topic": "app.customer.kyc.onboarding.entityStarted"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Entity completed",
                  "topic": "app.customer.kyc.onboarding.entityCompleted"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Link profiles (case closed)",
                  "topic": "app.customer.kyc.onboarding.profilesLinked"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "STP Failed",
                  "topic": "app.customer.kyc.onboarding.stpFailed"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "STP Passed",
                  "topic": "app.customer.kyc.onboarding.stpPassed"
               }
            }
         ]
      },
      {
         "id": "app.customer.onboarding.individual.legacy",
         "name": "Individual Onboarding",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.alerts",
            "nabone.eval",
            "nabone.schema",
            "nabone.utils",
            "app.customer.onboarding.legacy",
            "app.customer.search",
            "nabone.ui.modal",
            "api.referenceData",
            "api.qas"
         ],
         "activator": "app.customer.onboarding.individual.legacy.OnboardingIndividualActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox-legacy/components/app.customer.onboarding.individual.legacy/app.customer.onboarding.individual.legacy.min.js?1547009616366",
                  "nabone-dbox-legacy/components/app.customer.onboarding.individual.legacy/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.onboarding.individual.legacy",
               "name": "Individual Profile",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     }
                  },
                  "required": [
                     "title",
                     "widgetId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.onboarding.individual.legacy.withCredentials": false,
                     "app.customer.onboarding.individual.legacy.createProfile.schema": "nabone-dbox-legacy/components/app.customer.onboarding.individual.legacy/resources/forms/IndividualProfileSchema.jsn",
                     "app.customer.onboarding.individual.legacy.createProfile.layout": "nabone-dbox-legacy/components/app.customer.onboarding.individual.legacy/resources/forms/IndividualProfileLayout.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.onboarding.legacy",
         "name": "Onboarding Common Components",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.alerts",
            "nabone.eval",
            "nabone.schema",
            "nabone.utils",
            "app.customer.search",
            "nabone.ui.modal",
            "api.referenceData",
            "api.qas",
            "api.ifti",
            "api.och",
            "app.onboarding.refData"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox-legacy/components/app.customer.onboarding.legacy/app.customer.onboarding.legacy.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.onboarding.legacy.withCredentials": false,
                     "app.customer.onboarding.legacy.getRefDataUrl": "nabone-dbox-legacy/components/app.customer.onboarding.legacy/resources/onboardingRefData.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.onboarding.organisation.legacy",
         "name": "Organisation Onboarding",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.alerts",
            "nabone.eval",
            "nabone.schema",
            "nabone.utils",
            "app.customer.onboarding.legacy",
            "app.customer.search",
            "nabone.ui.modal",
            "api.referenceData",
            "api.qas"
         ],
         "activator": "app.customer.onboarding.organisation.legacy.OnboardingOrganisationActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox-legacy/components/app.customer.onboarding.organisation.legacy/app.customer.onboarding.organisation.legacy.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.onboarding.organisation.legacy.withCredentials": false,
                     "app.customer.onboarding.organisation.legacy.createProfile.schema": "nabone-dbox-legacy/components/app.customer.onboarding.organisation.legacy/resources/forms/OrganisationProfileSchema.jsn",
                     "app.customer.onboarding.organisation.legacy.createProfile.layout": "nabone-dbox-legacy/components/app.customer.onboarding.organisation.legacy/resources/forms/OrganisationProfileLayout.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.corporateStructure",
         "name": "DBOX Component Corporate Structure",
         "dependencies": [
            "nabone.ui.treeView",
            "nabone.ui.actionDropdown",
            "api.resource",
            "nabone.ui.components.overrides",
            "nabone.components",
            "app.customer.search",
            "api.user",
            "app.customer.businessLookup",
            "app.onboarding.refData",
            "app.customer.onboarding",
            "app.customer.onboarding.individual",
            "nabone.forms.core",
            "nabone.utils",
            "nabone.forms.efc",
            "nabone.env",
            "app.customer.dbox"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.corporateStructure/app.customer.dbox.corporateStructure.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.corporateStructure/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.dbox.corporateStructure.actions",
               "name": "Dbox action services",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "actionId": {
                        "description": "A unique id for the action",
                        "type": "string"
                     },
                     "label": {
                        "description": "A label of an action",
                        "type": "string"
                     },
                     "showIf": {
                        "description": "The condition to show or hide an action",
                        "type": "object"
                     },
                     "serviceName": {
                        "description": "Name of the service that will handle or execute the action",
                        "type": "string"
                     }
                  }
               }
            }
         ],
         "plugins": [
            {
               "point": "app.customer.dbox.components",
               "config": {
                  "title": "Corporate Structure",
                  "icon": "icon-flow-cascade",
                  "widgetId": "customer.dbox.corporateStructure",
                  "contentDirective": "dbox-corporate-structure",
                  "context": {
                     "dboxCase": "dboxContainerCtrl.onboardingCase",
                     "onUpdateCase": "dboxContainerCtrl.onUpdateCase(dboxCase)"
                  },
                  "displayOrder": 1
               }
            },
            {
               "point": "app.customer.dbox.corporateStructure.actions",
               "config": {
                  "actionId": "dbox.action.addParty",
                  "label": "Add Party",
                  "serviceName": "app.customer.dbox.corporateStructure.AddPartyActionsService",
                  "showIf": {
                     "expr": "(entity.profileTypeId == 'trust' || entity.profileTypeId == 'organisation') && entity.onboardingStatus != 'complete' && entity.onboardingStatus != 'cddRequired' && entity.onboardingStatus != 'pendingCdd'"
                  }
               }
            },
            {
               "point": "app.customer.dbox.corporateStructure.actions",
               "config": {
                  "actionId": "dbox.action.editTrust",
                  "label": "Edit Details",
                  "serviceName": "app.customer.dbox.corporateStructure.EditTrustActionService",
                  "showIf": {
                     "expr": "(entity.profileTypeId == 'trust' || entity.profileTypeId == 'organisation') && entity.onboardingStatus != 'complete' && entity.onboardingStatus != 'cddRequired' && entity.onboardingStatus != 'pendingCdd'"
                  }
               }
            },
            {
               "point": "app.customer.dbox.corporateStructure.actions",
               "config": {
                  "actionId": "dbox.action.editRole",
                  "label": "Edit Role",
                  "serviceName": "app.customer.dbox.corporateStructure.EditIndividualActionService",
                  "showIf": {
                     "expr": "entity.profileTypeId == 'individual' && (parentEntity.onboardingStatus != 'cddRequired' && parentEntity.onboardingStatus != 'pendingCdd')"
                  }
               }
            },
            {
               "point": "app.customer.dbox.corporateStructure.actions",
               "config": {
                  "actionId": "dbox.action.editParty",
                  "label": "Edit Party",
                  "serviceName": "app.customer.dbox.corporateStructure.EditIndividualActionService",
                  "showIf": {
                     "expr": "entity.profileTypeId == 'individual' && (parentEntity.onboardingStatus != 'cddRequired' && parentEntity.onboardingStatus != 'pendingCdd') "
                  }
               }
            },
            {
               "point": "app.customer.dbox.corporateStructure.actions",
               "config": {
                  "actionId": "dbox.action.deleteParty",
                  "label": "Delete",
                  "serviceName": "app.customer.dbox.corporateStructure.DeleteProfileActionService",
                  "showIf": {
                     "expr": "entity.profileTypeId == 'individual' && (parentEntity.onboardingStatus != 'cddRequired' && parentEntity.onboardingStatus != 'pendingCdd') "
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.dbox.corporateStructure.addEditParty.schema": "nabone-dbox/components/app.customer.dbox.corporateStructure/resources/FormSchema.jsn",
                     "app.customer.dbox.corporateStructure.addEditParty.layout": "nabone-dbox/components/app.customer.dbox.corporateStructure/resources/FormLayout.jsn",
                     "app.customer.dbox.corporateStructure.addEditParty.messageOverrides": "nabone-dbox/components/app.customer.dbox.corporateStructure/resources/AddParty.messageOverrides.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.onboarding.individual",
         "name": "Individual Onboarding",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.eval",
            "nabone.schema",
            "app.customer.onboarding.individual"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.onboarding.individual/app.customer.dbox.onboarding.individual.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.onboarding.individual/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {}
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.onboarding.organisation",
         "name": "Organisation Onboarding",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.eval",
            "nabone.schema",
            "app.customer.onboarding.organisation"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.onboarding.organisation/app.customer.dbox.onboarding.organisation.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.onboarding.organisation/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {}
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.onboarding",
         "name": "DBOX Component Onboarding",
         "dependencies": [
            "api.resource",
            "app.kyc",
            "nabone.ui.actionDropdown",
            "nabone.ui.modal",
            "nabone.cache",
            "nabone.utils",
            "api.dbox.onboarding",
            "api.customer",
            "api.customer.profile",
            "app.customer.dbox",
            "app.customer.profile",
            "app.customer.onboarding",
            "app.onboarding.refData",
            "app.customer.onboarding",
            "app.customer.dbox.onboarding.individual",
            "app.customer.dbox.onboarding.organisation"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.onboarding/app.customer.dbox.onboarding.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.onboarding/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.dbox.onboarding.actions",
               "name": "Dbox action services",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "actionId": {
                        "description": "A unique id for the action",
                        "type": "string"
                     },
                     "label": {
                        "description": "A label of an action",
                        "type": "string"
                     },
                     "showIf": {
                        "description": "The condition to show or hide an action",
                        "type": "object"
                     },
                     "serviceName": {
                        "description": "Name of the service that will handle or execute the action",
                        "type": "string"
                     }
                  }
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.dbox.onboarding.basePath": "nabone-dbox/components/app.customer.dbox.onboarding/resources",
                     "app.customer.dbox.ruleConfig.IsOnboardingRequired": "{{app.customer.dbox.onboarding.basePath}}/ruleconfig/IsOnboardingRequired.jsn"
                  }
               }
            },
            {
               "point": "app.customer.dbox.components",
               "config": {
                  "title": "Onboard and KYC",
                  "icon": "icon-list",
                  "widgetId": "customer.dbox.onboarding",
                  "contentDirective": "dbox-onboarding",
                  "context": {
                     "dboxCase": "dboxContainerCtrl.onboardingCase",
                     "onUpdateCase": "dboxContainerCtrl.onUpdateCase(dboxCase)"
                  },
                  "displayOrder": 2
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.onboard",
                  "label": "Onboard",
                  "serviceName": "app.customer.dbox.onboarding.OnboardActionService",
                  "showIf": {
                     "expr": "entity.onboardingStatus === 'notStarted'"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.openProfile",
                  "label": "Open Profile",
                  "serviceName": "app.customer.dbox.onboarding.OpenProfileActionService",
                  "showIf": {
                     "expr": "entity.onboardingStatus == 'saved' || entity.onboardingStatus == 'errorOch' || entity.onboardingStatus == 'errorMeid' || entity.onboardingStatus == 'errorMeValidation'"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.performKyc",
                  "label": "Perform KYC",
                  "serviceName": "app.customer.dbox.onboarding.KycActionService",
                  "showIf": {
                     "expr": "entity.onboardingStatus === 'activeKyc' && entity.entityDetails && entity.entityDetails.customerNumber"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.performAustrac",
                  "label": "Perform 100 Point ID Check",
                  "serviceName": "app.customer.dbox.onboarding.KycActionService",
                  "showIf": {
                     "expr": "entity.onboardingStatus === 'manualKyc' && entity.entityDetails && entity.entityDetails.customerNumber"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.submitToCdd",
                  "label": "Submit to CDD",
                  "serviceName": "app.customer.dbox.onboarding.SubmitCddActionService",
                  "showIf": {
                     "expr": "entity.onboardingStatus === 'cddRequired' && (entity.profileTypeId === 'organisation' || entity.profileTypeId === 'trust')"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.linkRequired",
                  "label": "Link Profiles",
                  "serviceName": "app.customer.dbox.onboarding.LinkProfileActionService",
                  "showIf": {
                     "expr": "(entity.profileTypeId === 'organisation' || entity.profileTypeId === 'trust' && entity.entityDetails && entity.entityDetails.customerNumber && (entity.onboardingStatus === 'linkRequired'))"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.update",
                  "label": "Update",
                  "serviceName": "app.customer.dbox.onboarding.UpdateProfileActionService",
                  "showIf": {
                     "expr": "(entity.profileTypeId === 'individual' && entity.entityDetails && entity.entityDetails.customerNumber && (entity.onboardingStatus === 'activeKyc' || entity.onboardingStatus === 'manualKyc' || entity.onboardingStatus === 'complete' || entity.onboardingStatus === 'update') && (entity.profileTypeId === 'individual' && parentEntity.onboardingStatus != 'cddRequired' && parentEntity.onboardingStatus != 'pendingCdd'))"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.search",
                  "label": "Search",
                  "serviceName": "app.customer.dbox.onboarding.OnboardActionService",
                  "showIf": {
                     "expr": "(entity.onboardingStatus === 'saved' || entity.onboardingStatus === 'errorOch' || entity.onboardingStatus === 'errorMeid' || entity.onboardingStatus === 'errorMeValidation' || (entity.onboardingStatus === 'activeKyc' && entity.entityDetails && entity.entityDetails.customerNumber) || (entity.onboardingStatus === 'manualKyc' && entity.entityDetails && entity.entityDetails.customerNumber) || entity.onboardingStatus === 'cddRequired' || entity.onboardingStatus === 'complete' || entity.onboardingStatus === 'update' || entity.onboardingStatus === 'linkRequired') && (entity.profileTypeId === 'individual' && parentEntity.onboardingStatus != 'cddRequired' && parentEntity.onboardingStatus != 'pendingCdd')"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.refresh",
                  "label": "Refresh",
                  "serviceName": "app.customer.dbox.onboarding.RefreshActionService",
                  "showIf": {
                     "expr": "(entity.onboardingStatus === 'passiveKyc' || entity.onboardingStatus === 'submitted' || entity.onboardingStatus === 'activeKycConfirmed' || entity.onboardingStatus === 'activeKyc' || entity.onboardingStatus === 'manualKyc' || entity.onboardingStatus === 'cddRequired' || entity.onboardingStatus === 'complete' || entity.onboardingStatus === 'linkRequired') && (entity.profileTypeId === 'individual' && parentEntity.onboardingStatus != 'cddRequired' && parentEntity.onboardingStatus != 'pendingCdd')"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.viewChecklist",
                  "label": "View KYC Checklist",
                  "serviceName": "app.customer.dbox.onboarding.ViewChecklistActionService",
                  "showIf": {
                     "expr": "entity.profileTypeId != 'individual'"
                  }
               }
            },
            {
               "point": "app.customer.dbox.onboarding.actions",
               "config": {
                  "actionId": "dbox.action.addSignatory",
                  "label": "Add Signatory",
                  "serviceName": "app.customer.dbox.onboarding.AddSignatoryActionService",
                  "showIf": {
                     "expr": "(entity.profileTypeId === 'trust' && entity.onboardingStatus !== 'complete'  && entity.onboardingStatus != 'cddRequired' && entity.onboardingStatus != 'pendingCdd')"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.trust",
         "name": "Trust DBOX Case",
         "dependencies": [
            "app.customer.businessLookup",
            "app.onboarding.refData",
            "app.customer.dbox"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.trust/app.customer.dbox.trust.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.trust/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.dbox.entityType",
               "config": {
                  "entityTypeId": "trust",
                  "creationService": "app.customer.dbox.trust.TrustCreationService"
               }
            },
            {
               "point": "app.customer.businessLookup.supportedEntityTypes",
               "config": {
                  "entityTypeId": "trust"
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.validations",
         "name": "DBOX Component Validations",
         "dependencies": [
            "app.customer.businessLookup",
            "app.onboarding.refData",
            "api.dbox.onboarding",
            "nabone.utils"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.validations/app.customer.dbox.validations.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.validations/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "nameMismatch",
                  "name": "Name Mismatch",
                  "shortName": "Mismatched Name",
                  "longDescription": "There is a mismatched name",
                  "dismissible": false,
                  "dismissibleLabel": "I declare I have obtained evidence sufficient to prove the name difference.",
                  "commentsRequired": true,
                  "commentsLabel": "Comments:",
                  "applicableProfileTypes": [
                     "individual",
                     "trust"
                  ],
                  "alertType": "error",
                  "serviceName": "app.customer.dbox.validations.services.NameMismatchValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "indProfile.baddebt",
                  "name": "Bad Debt",
                  "shortName": "Bad Debt",
                  "longDescription": "This individual has a Bad Debt protect code. You can continue with this application however, you may need to investigate further whether this customer qualifies to be an account holder or signatory. Click this link to open GAC 927 Protect Code for more information.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "individual"
                  ],
                  "alertType": "warning",
                  "serviceName": "app.customer.dbox.validations.services.IndividualProfileValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "indProfile.finPosition",
                  "name": "Financial Position",
                  "shortName": "Financial Position",
                  "longDescription": "This individual has a Financial Position protect code (eg Bankruptcy). You can continue with this application however, you may need to investigate further whether this customer qualifies to be an account holder or signatory. Click this link to open GAC 927 Protect Code for more information.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "individual"
                  ],
                  "alertType": "warning",
                  "serviceName": "app.customer.dbox.validations.services.IndividualProfileValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "indProfile.behavioralstate",
                  "name": "Behavioral State",
                  "shortName": "Behavioral State",
                  "longDescription": "This individual has a Legal Incapacity protect code (eg Insane/Infirm). You can continue with this application however, you may need to investigate further whether this customer qualifies to be an account holder or signatory. Click this link for more information.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "individual"
                  ],
                  "alertType": "warning",
                  "serviceName": "app.customer.dbox.validations.services.IndividualProfileValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "indProfile.suspectactivity",
                  "name": "Suspect Activity",
                  "shortName": "Suspect Activity",
                  "longDescription": "This individual has a Suspect Activity protect code. You can continue with this application however, you may need to investigate further whether this customer qualifies to be an account holder or signatory. Click this link to open GAC 927 Protect Code for more information.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "individual"
                  ],
                  "alertType": "warning",
                  "serviceName": "app.customer.dbox.validations.services.IndividualProfileValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "entity.relationships.validity",
                  "name": "Suspect Activity",
                  "shortName": "Suspect Activity",
                  "longDescription": "",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": "",
                  "applicableProfileTypes": [
                     "individual"
                  ],
                  "alertType": "warning",
                  "serviceName": "app.customer.dbox.validations.services.IndividualProfileValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "min.entity.relationships.validity",
                  "name": "Minimum Relationships Incomplete",
                  "shortName": "Minimum Relationships Incomplete",
                  "longDescription": "The party '${entityName}' must have at least ${numberOfRelations} '${relType}' relationship(s).",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "trust",
                     "organisation"
                  ],
                  "alertType": "Error",
                  "serviceName": "app.customer.dbox.validations.services.MinimumNoOfRelationshipsValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "total.unique.min.entity.relationships.validity",
                  "name": "Total Unique Minimum Relationships Incomplete",
                  "shortName": "Total Unique Minimum Relationships Incomplete",
                  "longDescription": "The customer ${entityName} must have at least one 'Beneficiary', 'Beneficial owner' and a 'Trustee'.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "trust",
                     "organisation"
                  ],
                  "alertType": "Error",
                  "serviceName": "app.customer.dbox.validations.services.TotalUniqueMinimumRelationshipsValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "total.unique.max.entity.relationships.validity",
                  "name": "Total Unique Maximum Relationships Incomplete",
                  "shortName": "Total Unique Maximum Relationships Incomplete",
                  "longDescription": "The customer ${entityName} exceeded maximum number of unique relationships.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "trust",
                     "organisation"
                  ],
                  "alertType": "Error",
                  "serviceName": "app.customer.dbox.validations.services.TotalUniqueMaximumRelationshipsValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "invalid.entity.relationships.validity",
                  "name": "Invalid Relationship Between Two Parties",
                  "shortName": "Invalid Relationship Between Two Parties",
                  "longDescription": "The party '${entityName}' has an invalid relationship with the party ${childEntityName} of type '${relType}'.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": ":",
                  "applicableProfileTypes": [
                     "individual",
                     "trust",
                     "organisation"
                  ],
                  "alertType": "Error",
                  "serviceName": "app.customer.dbox.validations.services.PermittedRelationshipsValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "max.entity.relationships.validity",
                  "name": "Maximum Relationships Exceeded",
                  "shortName": "Maximum Relationships Exceeded",
                  "longDescription": "The party '${entityName}' has exceeded the maximum number of '${relType}' relationships of ${numberOfRelations}.",
                  "dismissible": false,
                  "dismissibleLabel": "I declare I have obtained evidence sufficient to prove that all relationship(s) are permitted.",
                  "commentsRequired": true,
                  "commentsLabel": "You will have to make required updates to permitted relationship(s). Alternatively you can attach evidence to prove that relationship(s) are permitted (i.e. Party Registration) to the Siebel profile before submitting this to CDD. Once you have this evidence complete the declaration below. Please specify what document(s) have been attached in Siebel.",
                  "applicableProfileTypes": [
                     "trust",
                     "organisation"
                  ],
                  "alertType": "Error",
                  "serviceName": "app.customer.dbox.validations.services.MaximumNoOfRelationshipsValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "entity.settlor.trustee.relationships.validity",
                  "name": "Settlor and Trustee Relationship Validation",
                  "shortName": "Settlor and Trustee Relationship Validation",
                  "longDescription": "An individual cannot be both a Settlor and a Trustee of a Trust.",
                  "dismissible": false,
                  "dismissibleLabel": "",
                  "commentsRequired": false,
                  "commentsLabel": "",
                  "applicableProfileTypes": [
                     "individual",
                     "trust",
                     "organisation"
                  ],
                  "alertType": "error",
                  "serviceName": "app.customer.dbox.validations.services.SettlorAndTrusteeValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "trust.naming.conventions.validity",
                  "name": "Attach Trust Deed to Siebel Profile",
                  "shortName": "Attach Trust Deed to Siebel Profile",
                  "longDescription": "",
                  "dismissible": false,
                  "dismissibleLabel": "I have attached the Trust Deed and other supporting documents (if any) required for KYC verification to the Trusts Siebel Profile.",
                  "commentsRequired": false,
                  "commentsLabel": "",
                  "applicableProfileTypes": [
                     "trust"
                  ],
                  "alertType": "warning",
                  "serviceName": "app.customer.dbox.validations.services.TrustDeedAttachmentValidationService"
               }
            },
            {
               "point": "app.customer.dbox.validations.services",
               "config": {
                  "id": "trust.abr.consistency.validity",
                  "name": "Trust ABR Consistency Validation",
                  "shortName": "Trust ABR Consistency Validation",
                  "longDescription": "There is an Inconsistency between ABR Code: ${abrCode} and Entity Type: ${entityType}. Until this is resolved you will be unable to complete this application.",
                  "dismissible": false,
                  "commentsRequired": false,
                  "commentsLabel": "",
                  "applicableProfileTypes": [
                     "trust"
                  ],
                  "alertType": "error",
                  "serviceName": "app.customer.dbox.validations.services.TrustABRCodeConsistencyValidationService"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.dbox.validations.refData.basePath": "nabone-dbox/components/app.customer.dbox.validations/resources",
                     "app.customer.dbox.validations.refData.withCredentials": false,
                     "app.customer.dbox.ruleConfig.MaximumRelationships": "{{app.customer.dbox.validations.refData.basePath}}/ruleconfig/MaximumRelationships.jsn",
                     "app.customer.dbox.ruleConfig.MinimumRelationships": "{{app.customer.dbox.validations.refData.basePath}}/ruleconfig/MinimumRelationships.jsn",
                     "app.customer.dbox.ruleConfig.PermittedRelationships": "{{app.customer.dbox.validations.refData.basePath}}/ruleconfig/PermittedRelationships.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox.warnings",
         "name": "DBOX Component Warnings",
         "dependencies": [
            "app.customer.dbox"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox.warnings/app.customer.dbox.warnings.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox.warnings/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.dbox.components",
               "config": {
                  "title": "Error Details",
                  "icon": "icon-warning",
                  "showNotification": true,
                  "widgetId": "customer.dbox.warnings",
                  "contentDirective": "dbox-warnings",
                  "context": {
                     "dboxCase": "dboxContainerCtrl.onboardingCase",
                     "activeEntityId": "dboxContainerCtrl.activeEntityId",
                     "onUpdateCase": "dboxContainerCtrl.onUpdateCase(dboxCase)"
                  },
                  "displayOrder": 3
               }
            }
         ]
      },
      {
         "id": "app.customer.dbox",
         "name": "Core DBOX Component",
         "dependencies": [
            "nabone.ui.modal",
            "nabone.ui.bannerHeader",
            "nabone.utils",
            "nabone.schema",
            "nabone.eval",
            "nabone.schema",
            "nabone.layout",
            "api.och",
            "api.customer",
            "api.customer.profile",
            "api.kyc",
            "api.dbox.onboarding",
            "app.customer.businessLookup",
            "app.onboarding.refData",
            "app.customer.dbox.validations"
         ],
         "roles": [
            "Digital Business Onboarding Pilot",
            "Digital Business Onboarding Pilot - Admin"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-dbox/components/app.customer.dbox/app.customer.dbox.min.js?1547009616366",
                  "nabone-dbox/components/app.customer.dbox/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.customer.dbox.components",
               "name": "Core DBOX Component Tabs",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "properties": {
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "showNotification": {
                        "description": "A boolean to determine whether to show the errors counter",
                        "type": "boolean"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "additionalProperties": true,
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object"
                     },
                     "displayOrder": {
                        "description": "The order the widget will be displayed",
                        "type": "number"
                     }
                  },
                  "required": [
                     "contentDirective",
                     "title",
                     "widgetId",
                     "displayOrder"
                  ],
                  "type": "object"
               }
            },
            {
               "id": "app.customer.dbox.entityType",
               "name": "Dbox entity types",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "entityTypeId": {
                        "description": "The supported primary entity type",
                        "type": "string"
                     },
                     "creationService": {
                        "description": "Associated creation service path",
                        "type": "string"
                     }
                  },
                  "required": [
                     "entityTypeId",
                     "creationService"
                  ]
               }
            },
            {
               "id": "app.customer.dbox.search.providers.individual",
               "name": "Customer Search Providers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for this search provider",
                        "type": "string"
                     },
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to render the provider search form",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.dbox.search.providers.organisation",
               "name": "Customer Search Providers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for this search provider",
                        "type": "string"
                     },
                     "title": {
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to render the provider search form",
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.customer.dbox.validations.services",
               "name": "Dbox Validation Services",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "A unique id for the warning/alert",
                        "type": "string"
                     },
                     "name": {
                        "description": "A name for an alert",
                        "type": "string"
                     },
                     "shortName": {
                        "description": "A short name for an alert",
                        "type": "string"
                     },
                     "longDesc": {
                        "description": "A long description for an alert",
                        "type": "string"
                     },
                     "dismissible": {
                        "description": "Is the alert dismissible",
                        "type": "boolean"
                     },
                     "showComments": {
                        "description": " Does the alert need to show comments",
                        "type": "boolean"
                     },
                     "commentsLabel": {
                        "description": "Comments Label for an alert",
                        "type": "string"
                     },
                     "commentsRequired": {
                        "description": "Does the alert require comments",
                        "type": "boolean"
                     },
                     "applicableProfileTypes": {
                        "description": "An array of applicable entities",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     },
                     "blocksSTP": {
                        "description": "blocks STP",
                        "type": "boolean"
                     },
                     "alertType": {
                        "description": "Alert Type Warning / Error ..",
                        "type": "string"
                     },
                     "serviceName": {
                        "description": "Name of the service that will handle or execute the action",
                        "type": "string"
                     }
                  },
                  "required": [
                     "id",
                     "name",
                     "shortName",
                     "dismissible",
                     "applicableProfileTypes",
                     "alertType",
                     "serviceName"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.dbox.basePath": "nabone-dbox/components/app.customer.dbox/resources",
                     "app.customer.dbox.toastMessagesDataUrl": "{{app.customer.dbox.basePath}}/ToastMessages.jsn",
                     "app.customer.dbox.onboardingSchemaDataUrl": "nabone-api-dbox/components/api.dbox.onboarding/resources/schema/OnboardingSchemaV2.jsn"
                  }
               }
            },
            {
               "point": "app.customer.dbox.versions",
               "config": {
                  "contentDirective": "dbox-container",
                  "context": {
                     "customerDetails": "dboxVersionLauncherCtrl.customerDetails",
                     "dboxCaseDeferred": "dboxVersionLauncherCtrl.dboxCaseDeferred"
                  },
                  "title": "Business Lookup & Onboarding",
                  "applicationId": "customer.dbox.version2",
                  "supportedPluginPointId": "app.customer.dbox.entityType",
                  "routes": [
                     "/customer/dbox-version2"
                  ]
               }
            },
            {
               "point": "app.customer.dbox.search.providers.individual",
               "config": {
                  "id": "app.customer.search.provider.customerid",
                  "title": "Customer IDs",
                  "contentDirective": "search-provider-customer-ids",
                  "order": 10
               }
            },
            {
               "point": "app.customer.dbox.search.providers.organisation",
               "config": {
                  "id": "app.customer.search.provider.customerid",
                  "title": "Customer IDs",
                  "contentDirective": "search-provider-customer-ids",
                  "order": 10
               }
            },
            {
               "point": "app.customer.dbox.search.providers.individual",
               "config": {
                  "id": "app.customer.search.provider.individual",
                  "title": "Individuals",
                  "contentDirective": "search-provider-individuals",
                  "order": 20
               }
            },
            {
               "point": "app.customer.dbox.search.providers.organisation",
               "config": {
                  "id": "app.customer.search.provider.organisation",
                  "title": "Organisations",
                  "contentDirective": "search-provider-organisations",
                  "order": 20
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "New DboxCase Created",
                  "topic": "app.customer.dbox.dboxCaseCreated"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "DboxCase Completed",
                  "topic": "app.customer.dbox.dboxCaseCompleted"
               }
            }
         ]
      },
      {
         "id": "app.ela.checklist",
         "name": "ELA Checklist",
         "dependencies": [
            "app.ela",
            "api.resource"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.checklist/app.ela.checklist.min.js?1547009616366",
                  "nabone-ela/components/app.ela.checklist/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": []
      },
      {
         "id": "app.ela.comments",
         "name": "ELA Comments Page",
         "dependencies": [
            "app.ela",
            "app.ela.debtServicing"
         ],
         "activator": "app.ela.comments.ActivatorService",
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.comments/app.ela.comments.min.js?1547009616366",
                  "nabone-ela/components/app.ela.comments/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.pages",
               "config": {
                  "pageId": "comments",
                  "name": "Credit Commentary",
                  "contentUrl": "nabone-ela/components/app.ela.comments/partials/CommentsViewContainer.html",
                  "order": 4,
                  "icon": "icon-pencil",
                  "optionsProtected": true,
                  "hasCounter": false
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "commentaries",
                  "serviceName": "app.ela.comments.CommentaryValidator"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.comments.creditMem.layout": "nabone-ela/components/app.ela.comments/resources/creditMemLayout.jsn",
                     "app.ela.comments.creditMem.schema": "nabone-ela/components/app.ela.comments/resources/creditMemSchema.jsn",
                     "app.ela.comments.getRefDataUrl": "nabone-ela/components/app.ela.comments/resources/creditMemRefData.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.ela.customerPlayback.pdf",
         "name": "ELA Customer Playback Pdf",
         "dependencies": [
            "nabone.pdf2"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.customerPlayback.pdf/app.ela.customerPlayback.pdf.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.customerPlayback.pdf",
               "config": {
                  "service": "app.ela.customerPlayback.pdf.CustomerPlaybackPdfService"
               }
            }
         ]
      },
      {
         "id": "app.ela.customerPlayback",
         "name": "ELA Customer Playback",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.customerPlayback/app.ela.customerPlayback.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.ela.customerPlayback.pdf",
               "name": "Point for registering customerPlayback pdf service",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "service": {
                        "description": "Name of service",
                        "type": "string"
                     }
                  },
                  "required": [
                     "service"
                  ]
               }
            }
         ],
         "plugins": []
      },
      {
         "id": "app.ela.debtServicing",
         "name": "ELA Debt Servicing Page",
         "dependencies": [
            "app.ela",
            "app.ela.group",
            "app.ela.loanRequest",
            "app.ela.livingExpenses"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.debtServicing/app.ela.debtServicing.min.js?1547009616366",
                  "nabone-ela/components/app.ela.debtServicing/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.ela.debtServicing.profileWidgets",
               "name": "ELA point for Debt Servicing profile level widgets"
            },
            {
               "id": "app.ela.debtServicing.groupWidgets",
               "name": "ELA point for Debt Servicing group level widgets"
            }
         ],
         "plugins": [
            {
               "point": "app.ela.pages",
               "config": {
                  "pageId": "debtservicing",
                  "name": "Debt Servicing",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/DebtServicingView.html",
                  "order": 3,
                  "icon": "icon-dollar",
                  "optionsProtected": true,
                  "hasCounter": false
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "debtServicing",
                  "serviceName": "app.ela.debtServicing.DebtServicingValidator"
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "noData",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingNoDataWidgetView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingNoDataWidgetService",
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "profileLinkingWidget",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingProfileLinkingWidgetView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingProfileLinkingWidgetService",
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "financialsSummary",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingFinancialsSummaryView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingFinancialsSummaryService",
                     "displayOrder": 2
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "income",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingIncomeView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingIncomeService",
                     "displayOrder": 3
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "expenses",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingExpensesView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingExpensesService",
                     "displayOrder": 4
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "totalAvailableForServicing",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingTotalAvailableServicingView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingTotalsWidgetService",
                     "displayOrder": 5
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "applicantRepayments",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingApplicantRepaymentView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingApplicantRepaymentService",
                     "displayOrder": 6
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "totalSurplusDeficit",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingTotalSurplusDeficitView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingTotalsWidgetService",
                     "displayOrder": 7
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "guarantorRepayments",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingGuarantorRepaymentView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingGuarantorRepaymentService",
                     "displayOrder": 8
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.profileWidgets",
               "config": {
                  "widgetId": "totalGuaranteeSurplusDeficit",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingTotalGuaranteeSurplusDeficitView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingTotalGuaranteeSurplusDeficitService",
                     "displayOrder": 9
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.groupWidgets",
               "config": {
                  "widgetId": "profilesSummary",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingProfilesSummaryView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingProfilesSummaryService",
                     "displayOrder": 1
                  }
               }
            },
            {
               "point": "app.ela.debtServicing.groupWidgets",
               "config": {
                  "widgetId": "repaymentSummary",
                  "contentUrl": "nabone-ela/components/app.ela.debtServicing/partials/widgets/DebtServicingRepaymentSummaryView.html",
                  "widgetData": {
                     "serviceName": "app.ela.debtServicing.DebtServicingRepaymentSummaryService",
                     "displayOrder": 2
                  }
               }
            }
         ]
      },
      {
         "id": "app.ela.documents",
         "name": "ELA Application Documents Page",
         "dependencies": [
            "nabone.utils",
            "nabone.components",
            "app.ela",
            "nabone.cache",
            "nabone.rule",
            "app.ela.checklist"
         ],
         "activator": "app.ela.documents.ActivatorService",
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.documents/app.ela.documents.min.js?1547009616366",
                  "nabone-ela/components/app.ela.documents/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.pages",
               "config": {
                  "pageId": "documents",
                  "name": "Application Documents",
                  "contentUrl": "nabone-ela/components/app.ela.documents/partials/DocumentsViewContainer.html",
                  "order": 5,
                  "icon": "icon-archive",
                  "optionsProtected": true,
                  "hasCounter": false
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "documents",
                  "serviceName": "app.ela.documents.DocumentValidator"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.documents.checklist.layout": "nabone-ela/components/app.ela.documents/resources/documentsChecklistLayout.jsn",
                     "app.ela.documents.checklist.schema": "nabone-ela/components/app.ela.documents/resources/documentsChecklistSchema.jsn",
                     "app.ela.documents.getRefDataUrl": "nabone-ela/components/app.ela.documents/resources/document-ref-data.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.ela.fulfilment.pdf",
         "name": "ELA Fulfilment Pdf",
         "dependencies": [
            "nabone.pdf2"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.fulfilment.pdf/app.ela.fulfilment.pdf.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.fulfilment.pdf",
               "config": {
                  "service": "app.ela.fulfilment.pdf.FulfilmentPdfService"
               }
            }
         ]
      },
      {
         "id": "app.ela.fulfilment",
         "name": "ELA Fulfilment",
         "dependencies": [],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.fulfilment/app.ela.fulfilment.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.ela.fulfilment.pdf",
               "name": "Point for registering fulfilment pdf service",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "service": {
                        "description": "Name of service",
                        "type": "string"
                     }
                  },
                  "required": [
                     "service"
                  ]
               }
            }
         ],
         "plugins": []
      },
      {
         "id": "app.ela.group",
         "name": "ELA Group Page",
         "dependencies": [
            "app.ela",
            "app.customer.search",
            "api.customer.search"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.group/app.ela.group.min.js?1547009616366",
                  "nabone-ela/components/app.ela.group/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.pages",
               "config": {
                  "pageId": "group",
                  "name": "Group Details",
                  "contentUrl": "nabone-ela/components/app.ela.group/partials/GroupView.html",
                  "order": 1,
                  "icon": "icon-user-add",
                  "optionsProtected": false,
                  "hasCounter": false
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "group",
                  "serviceName": "app.ela.group.GroupValidator"
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "profiles",
                  "serviceName": "app.ela.group.ProfilesValidator"
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "securities",
                  "serviceName": "app.ela.group.SecuritiesValidator"
               }
            }
         ]
      },
      {
         "id": "app.ela.livingExpenses",
         "name": "ELA Living Expenses",
         "dependencies": [
            "nabone.utils",
            "nabone.components",
            "app.ela",
            "nabone.cache"
         ],
         "activator": "app.ela.livingExpenses.ActivatorService",
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.livingExpenses/app.ela.livingExpenses.min.js?1547009616366",
                  "nabone-ela/components/app.ela.livingExpenses/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.livingExpenses.getRefDataUrl": "nabone-ela/resources/livingExpenses/refdata/livingExpenses-ref-data.jsn",
                     "app.ela.livingExpenses.assessment.layout": "nabone-ela/resources/livingExpenses/assessment/livingExpensesAssessmentLayout.jsn",
                     "app.ela.livingExpenses.assessment.schema": "nabone-ela/resources/livingExpenses/assessment/livingExpensesAssessmentSchema.jsn",
                     "app.ela.livingExpenses.household.layout": "nabone-ela/resources/livingExpenses/household/livingExpensesHouseholdLayout.jsn",
                     "app.ela.livingExpenses.household.schema": "nabone-ela/resources/livingExpenses/household/livingExpensesHouseholdSchema.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.ela.loanRequest",
         "name": "ELA Loan Request Page",
         "dependencies": [
            "app.ela",
            "app.ela.group",
            "app.ela.customerPlayback"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.loanRequest/app.ela.loanRequest.min.js?1547009616366",
                  "nabone-ela/components/app.ela.loanRequest/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.pages",
               "config": {
                  "pageId": "loanrequest",
                  "name": "Loan Request",
                  "contentUrl": "nabone-ela/components/app.ela.loanRequest/partials/LoanRequestView.html",
                  "order": 2,
                  "icon": "icon-doc-text",
                  "optionsProtected": false,
                  "hasCounter": false
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "structures",
                  "serviceName": "app.ela.loanRequest.BorrowingStructuresValidator"
               }
            }
         ]
      },
      {
         "id": "app.ela.options.mrl",
         "name": "MRL Option",
         "dependencies": [
            "api.offer",
            "app.ela",
            "nabone.env",
            "nabone.cache",
            "app.ela.debtServicing"
         ],
         "activator": "app.ela.options.mrl.ActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.options.mrl/app.ela.options.mrl.min.js?1547009616366",
                  "nabone-ela/components/app.ela.options.mrl/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.ela.options",
               "config": {
                  "optionId": "MRL",
                  "contextService": "app.ela.options.mrl.MRLContextService",
                  "outcomeSetChangeService": "app.ela.options.mrl.MRLOutcomeSetChangeService",
                  "creditMemOptionRuleService": "app.ela.options.mrl.MRLCreditMemRuleService",
                  "pdf": {
                     "modelService": "app.ela.options.mrl.MRLPdfModelService",
                     "template": "nabone-ela/components/app.ela.review/resources/pdf/options/mrl-layout.jsn"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.options.mrl.getRefDataUrl": "nabone-ela/resources/ela/refdata/mrl-ref-data.jsn",
                     "app.ela.mrl.questionnaire.layout": "nabone-ela/resources/ela/mrl/mrlQuestionnaireLayout.jsn",
                     "app.ela.mrl.questionnaire.schema": "nabone-ela/resources/ela/mrl/mrlQuestionnaireSchema.jsn"
                  }
               }
            },
            {
               "point": "app.ela.options.modalContent",
               "config": {
                  "widgetId": "mrlLimits",
                  "title": "Customer's upper limits for MRL concessions",
                  "contentDirective": "ela-options-mrl-limits",
                  "context": {
                     "isQualified": "modalCtrl.isQualified()"
                  }
               }
            },
            {
               "point": "app.ela.options.modalContent",
               "config": {
                  "widgetId": "mrlQuestionnaire",
                  "title": "Please take a moment to review the questions below",
                  "contentDirective": "ela-options-mrl-questionnaire",
                  "requiresSave": true,
                  "context": {
                     "optionResult": "modalCtrl.optionResult",
                     "optionData": "modalCtrl.optionData['mrlQuestionnaire']",
                     "isValid": "modalCtrl.widgetValidations['mrlQuestionnaire']",
                     "preventCancel": "modalCtrl.widgetPreventCancel['mrlQuestionnaire']",
                     "registerEvents": "modalCtrl.registerEvents(handlers)"
                  }
               }
            },
            {
               "point": "app.ela.options.modalFooter",
               "config": {
                  "widgetId": "mrlFooter",
                  "title": "MRL Footer",
                  "contentUrl": "nabone-ela/components/app.ela.options.mrl/partials/FooterView.html",
                  "optionId": "MRL"
               }
            },
            {
               "point": "app.ela.options.calculators",
               "config": {
                  "optionId": "MRL",
                  "title": "Maximum Recommended Limit",
                  "controller": "app.ela.options.mrl.MRLCalculatorController",
                  "controllerAs": "mrlCalcCtrl",
                  "headerTemplate": "nabone-ela/components/app.ela.options.mrl/partials/MRLCalculatorHeaderView.html",
                  "template": {
                     "icon": "icon-key",
                     "templateUrl": "nabone-ela/components/app.ela.options.mrl/partials/MRLCalculatorView.html"
                  }
               }
            }
         ]
      },
      {
         "id": "app.ela.options.msbca",
         "name": "MSBCA Option",
         "dependencies": [
            "api.offer",
            "app.ela",
            "app.ela.debtServicing",
            "nabone.cache"
         ],
         "activator": "app.ela.options.msbca.ActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.options.msbca/app.ela.options.msbca.min.js?1547009616366",
                  "nabone-ela/components/app.ela.options.msbca/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.ela.options",
               "config": {
                  "optionId": "MSBCA",
                  "contextService": "app.ela.options.msbca.MSBCAContextService",
                  "outcomeSetChangeService": "app.ela.options.msbca.MSBCAOutcomeSetChangeService",
                  "creditMemOptionRuleService": "app.ela.options.msbca.MSBCACreditMemRuleService",
                  "pdf": {
                     "modelService": "app.ela.options.msbca.MSBCAPdfModelService",
                     "template": "nabone-ela/components/app.ela.review/resources/pdf/options/msbca-layout.jsn"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.options.msbca.getRefDataUrl": "nabone-ela/resources/ela/refdata/msbca-ref-data.jsn",
                     "app.ela.msbca.assessment.layout": "nabone-ela/resources/ela/msbca/msbcaAssessmentLayout.jsn",
                     "app.ela.msbca.assessment.schema": "nabone-ela/resources/ela/msbca/msbcaAssessmentSchema.jsn"
                  }
               }
            },
            {
               "point": "app.ela.options.modalContent",
               "config": {
                  "widgetId": "msbcaRiskAssessment",
                  "title": "Assessment",
                  "contentDirective": "ela-options-msbca-assessment",
                  "showIf": {
                     "expr": "appliedOptionId=='MSBCA'"
                  },
                  "context": {
                     "optionResult": "modalCtrl.optionResult",
                     "optionData": "modalCtrl.optionData['riskAssessment']",
                     "registerEvents": "modalCtrl.registerEvents(handlers)"
                  }
               }
            },
            {
               "point": "app.ela.options.modalFooter",
               "config": {
                  "widgetId": "msbcaFooter",
                  "title": "MSBCA Footer",
                  "contentUrl": "nabone-ela/components/app.ela.options.msbca/partials/FooterView.html",
                  "optionId": "MSBCA"
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "option",
                  "serviceName": "app.ela.options.msbca.MSBCAValidator"
               }
            }
         ]
      },
      {
         "id": "app.ela.review",
         "name": "ELA Review Page",
         "dependencies": [
            "app.ela",
            "app.ela.group",
            "app.ela.comments",
            "app.ela.fulfilment",
            "app.ela.loanRequest",
            "app.ela.debtServicing",
            "app.ela.checklist",
            "api.resource",
            "nabone.pdf",
            "app.ela.settlements"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.review/app.ela.review.min.js?1547009616366",
                  "nabone-ela/components/app.ela.review/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.ela.pages",
               "config": {
                  "pageId": "review",
                  "name": "Review & Submit",
                  "contentUrl": "nabone-ela/components/app.ela.review/partials/ReviewView.html",
                  "order": 6,
                  "icon": "icon-check",
                  "optionsProtected": true,
                  "hasCounter": false
               }
            }
         ]
      },
      {
         "id": "app.ela.settlements",
         "name": "ELA Settlements",
         "dependencies": [
            "nabone.forms.core"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela.settlements/style.css?1547009616366",
                  "nabone-ela/components/app.ela.settlements/app.ela.settlements.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.settlements.layout": "nabone-ela/components/app.ela.settlements/resources/settlementsLayout.jsn",
                     "app.ela.settlements.schema": "nabone-ela/components/app.ela.settlements/resources/settlementsSchema.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.ela",
         "name": "Enhanced Lending Application",
         "dependencies": [
            "app.group.mrl",
            "nabone.env",
            "nabone.components",
            "nabone.efcv2.renderer",
            "nabone.utils",
            "nabone.rule",
            "api.rns",
            "api.ela",
            "api.knowme",
            "api.nabone",
            "api.efc2",
            "api.offer",
            "api.cse",
            "api.resource",
            "nabone.cache",
            "nabone.forms.efc",
            "lib.stringifyStable",
            "lib.ngTable",
            "lib.angular.filter",
            "lib.moment",
            "app.customer.groups",
            "app.ela.customerPlayback"
         ],
         "roles": [
            "EST-BPM&O-Application-SBLBusinessGroup"
         ],
         "activator": "app.ela.ApplicationActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/app.ela/app.ela.min.js?1547009616366",
                  "nabone-ela/components/app.ela/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.ela.pages",
               "name": "ELA point for the main ela pages",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "pageId": {
                        "description": "The ID for the page, this is used in the route",
                        "type": "string"
                     },
                     "name": {
                        "description": "A display name for the page, this is used in the navigation in the header",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "Url to the main HTML file to display in the workbench view",
                        "type": "string"
                     },
                     "order": {
                        "description": "Order of the pages in the header navigation",
                        "type": "number"
                     },
                     "icon": {
                        "description": "Class name of a nabUI icon to use in the header",
                        "type": "string"
                     },
                     "optionsProtected": {
                        "description": "Flag to say whether this page should not be accessible when an option is applied but in an unknown qualification state.",
                        "type": "boolean"
                     },
                     "hasCounter": {
                        "description": "Flag to say whether this page can have a counter.",
                        "type": "boolean"
                     }
                  },
                  "required": [
                     "pageId",
                     "name",
                     "contentUrl",
                     "order",
                     "icon"
                  ]
               }
            },
            {
               "id": "app.ela.validators",
               "name": "ELA point for contributing validators for the app model validation service",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "eawSectionKey": {
                        "description": "Errors and Warning key that this validator will contribute to",
                        "type": "string",
                        "enum": [
                           "group",
                           "application",
                           "debtServicing",
                           "structures",
                           "securities",
                           "profiles",
                           "commentaries",
                           "option",
                           "documents"
                        ]
                     },
                     "serviceName": {
                        "description": "Name of the service to call for this validator",
                        "type": "string"
                     }
                  },
                  "required": [
                     "eawSectionKey",
                     "serviceName"
                  ]
               }
            },
            {
               "id": "app.ela.options",
               "name": "ELA Options point for registering options with the core ELA app",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "optionId": {
                        "description": "A unique id for the option",
                        "type": "string"
                     },
                     "contextService": {
                        "description": "Name of a service that will provide context values for rules evaluation for this option",
                        "type": "string"
                     },
                     "outcomeSetChangeService": {
                        "description": "Name of a service that will handle any change in the option outcome set",
                        "type": "string"
                     },
                     "creditMemOptionRuleService": {
                        "description": "Name of a service that will handle the options rules for the Credit Mem",
                        "type": "string"
                     },
                     "closeOnApply": {
                        "description": "Flag if the widget should be closed when an option is applied, defaults to true",
                        "type": "boolean"
                     },
                     "pdf": {
                        "description": "Any application specific data that will be passed to an app instance",
                        "type": "object",
                        "properties": {
                           "modelService": {
                              "description": "Name of a service that will provide the data model for this option's PDF contribution",
                              "type": "string"
                           },
                           "template": {
                              "description": "Url to the HTML template for this option's PDF contribution",
                              "type": "string"
                           }
                        },
                        "required": [
                           "modelService",
                           "template"
                        ]
                     }
                  },
                  "required": [
                     "optionId"
                  ]
               }
            },
            {
               "id": "app.ela.options.modalContent",
               "name": "ELA Options point for contributing content to the options modal",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "The title for this section of the modal",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "url to html partial to load the widget",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to load the widget",
                        "type": "string"
                     },
                     "requiresSave": {
                        "description": "Flag if the widget requires the modal to display the save button",
                        "type": "boolean"
                     },
                     "showIf": {
                        "description": "Flag if the widget should be shown through an expression, defaults to true",
                        "type": "object"
                     },
                     "context": {
                        "description": "Any application specific data that will be passed to an app instance",
                        "type": "object"
                     }
                  },
                  "required": [
                     "widgetId",
                     "title"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.ela.options.modalFooter",
               "name": "ELA Options point for contributing an options modal footer",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "A unique id for the widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "The title for this section of the modal",
                        "type": "string"
                     },
                     "optionId": {
                        "description": "Option ID for this footer",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "url to html partial to load the widget",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to load the widget",
                        "type": "string"
                     },
                     "context": {
                        "description": "Any application specific data that will be passed to an app instance",
                        "type": "object"
                     }
                  },
                  "required": [
                     "widgetId",
                     "title",
                     "optionId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "app.ela.options.calculators",
               "name": "ELA point for options to contribute calculator modals"
            },
            {
               "id": "app.ela.businessSegment",
               "name": "ELA Role based provision of business segment"
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Enhanced Lending Application",
                     "path": "apps",
                     "icon": "briefcase",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/ela"
                           }
                        }
                     },
                     "order": 120
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.ela",
                  "title": "Enhanced Lending Application",
                  "contentUrl": "nabone-ela/components/app.ela/partials/ela.html",
                  "routes": [
                     "/ela",
                     "/ela/application/:applicationID",
                     "/ela/application/:applicationID/section/:section",
                     "/ela/group/:groupID",
                     "/ela/group/:groupID/section/:section",
                     "/ela/section/:section"
                  ],
                  "maxInstances": 1,
                  "appData": {
                     "enableJumpLinks": false
                  },
                  "matchUsingApplicationId": true,
                  "closeHandler": {
                     "service": "app.ela.ApplicationCloseService",
                     "config": {}
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.ela.efc.formId.unused": "00c5688d-43c7-4a14-951b-90efe46fa22d",
                     "app.ela.efc.formId": "nabone-ela/resources/ela/efcv2/sbl.jsn",
                     "app.ela.efc.formLayoutUrl": "nabone-ela/resources/ela/efcv2/layout/${layoutId}.jsn",
                     "app.ela.getRefDataUrl": "nabone-ela/resources/ela/refdata/ref-data.jsn",
                     "app.ela.getHyperlinkDataUrl": "nabone-ela/resources/ela/refdata/hyperlink-data.jsn",
                     "app.ela.getSiebelRefDataUrl": "nabone-ela/resources/ela/refdata/siebel-ref-data.jsn",
                     "app.ela.rulesetUrl": "nabone-ela/resources/ela/rules/${name}.jsn",
                     "app.ela.optionsUrl": "nabone-ela/resources/ela/options/options.jsn",
                     "app.ela.optionsUrl-ignore": "nabone-ela/resources/ela/options/mockGenericOption.jsn",
                     "app.ela.reloadOnSave": false
                  },
                  "dev": {
                     "app.ela.reloadOnSave": false
                  },
                  "sit": {
                     "app.ela.reloadOnSave": false
                  }
               }
            },
            {
               "point": "app.ela.options.modalContent",
               "config": {
                  "widgetId": "qualificationCriteria",
                  "title": "Qualification Criteria",
                  "contentDirective": "ela-options-qualification",
                  "context": {
                     "optionResult": "modalCtrl.optionResult"
                  }
               }
            },
            {
               "point": "app.ela.validators",
               "config": {
                  "eawSectionKey": "application",
                  "serviceName": "app.ela.ApplicationValidator"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "ela",
                  "category": "applications",
                  "label": "ELA",
                  "priority": 2,
                  "contentUrl": "nabone-ela/components/app.ela/README.md"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "ela.hub",
                  "name": "Enhanced Lending Application Hub",
                  "linkUrl": "https://spaces.cts.nab.com.au/sites/s02/site834/Pages/default.aspx"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Submitting an application (clicking the Generate Fulfilment submission button)",
                  "topic": "app.ela.complete"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Starting a new ELA application (first version saved to the database)",
                  "topic": "app.ela.start"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Group Page (Not Initial)",
                  "topic": "app.ela.groupLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Loan Request Page (Not Initial)",
                  "topic": "app.ela.loanRequestLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Debt Servicing Page (Not Initial)",
                  "topic": "app.ela.debtServicingLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Credit Commentary Page (Not Initial)",
                  "topic": "app.ela.creditCommentaryLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Application Documents Page (Not Initial)",
                  "topic": "app.ela.documentsLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Review & Submit Page (Not Initial)",
                  "topic": "app.ela.reviewSubmitLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Entity Modal (Not Initial)",
                  "topic": "app.ela.entityLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Financials page on Entity Modal (Not Initial)",
                  "topic": "app.ela.entityFinancialsLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Group Page (Initial)",
                  "topic": "app.ela.groupInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Loan Request Page (Initial)",
                  "topic": "app.ela.loanRequestInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Debt Servicing Page (Initial)",
                  "topic": "app.ela.debtServicingInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Credit Commentary Page (Initial)",
                  "topic": "app.ela.creditCommentaryInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Application Documents Page (Initial)",
                  "topic": "app.ela.documentsInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Review & Submit Page (Initial)",
                  "topic": "app.ela.reviewSubmitInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Entity Modal (Initial)",
                  "topic": "app.ela.entityInitialLoaded"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Load Financials page on Entity Modal (Initial)",
                  "topic": "app.ela.entityFinancialsInitialLoaded"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-ela/components/app.ela/resources/help/elaHelpContent.jsn",
                  "componentId": "app.ela"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-ela/components/app.ela/resources/help/elaWhatsNewContent.jsn",
                  "componentId": "app.ela"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Enhanced Lending Application"
               }
            }
         ]
      },
      {
         "id": "app.ela.businessSegment.business",
         "name": "ELA Business Segment for nabBusiness",
         "roles": [
            "EST-BPM&O-Application-SBLBusinessGroup",
            "LSE_SUPER"
         ],
         "plugins": [
            {
               "point": "app.ela.businessSegment"
            }
         ]
      },
      {
         "id": "app.ela.businessSegment.bdsb",
         "name": "ELA Business Segment for Business Direct and Small Business",
         "roles": [
            "NAB-Team-EST-BPMO-BDSB",
            "LSE_SUPER"
         ],
         "plugins": [
            {
               "point": "app.ela.businessSegment"
            }
         ]
      },
      {
         "id": "app.ela.businessSegment.health",
         "name": "ELA Business Segment fornabHealth",
         "roles": [
            "NAB-Team-EST-BPMO-Health",
            "LSE_SUPER"
         ],
         "plugins": [
            {
               "point": "app.ela.businessSegment"
            }
         ]
      },
      {
         "id": "app.ela.businessSegment.private",
         "name": "ELA Business Segment for nabPrivate",
         "roles": [
            "NAB-Team-EST-BPMO-Private",
            "LSE_SUPER"
         ],
         "plugins": [
            {
               "point": "app.ela.businessSegment"
            }
         ]
      },
      {
         "id": "app.ela.businessSegment.agri",
         "name": "ELA Business Segment for agriBusiness",
         "roles": [
            "NAB-Team-EST-BPMO-Agri",
            "LSE_SUPER"
         ],
         "plugins": [
            {
               "point": "app.ela.businessSegment"
            }
         ]
      },
      {
         "id": "nabone.efcv2.renderer",
         "name": "nabONE EFCV2 Renderer",
         "dependencies": [
            "lib.efcSdk",
            "api.efc2",
            "nabone.rule",
            "lib.efcSdk"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/nabone.efcv2.renderer/nabone.efcv2.renderer.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.pdf",
         "name": "nabONE PDF Generator",
         "dependencies": [
            "lib.jspdf"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ela/components/nabone.pdf/nabone.pdf.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.eval.explorer",
         "name": "nabONE Eval Explorer",
         "dependencies": [
            "nabone.eval",
            "nabone.forms.efc"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-eval-explorer/components/nabone.eval.explorer/nabone.eval.explorer.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.eval.explorer",
                  "title": "Expression Explorer",
                  "contentUrl": "nabone-eval-explorer/components/nabone.eval.explorer/partials/default.html",
                  "routes": [
                     "/nabone.eval.explorer"
                  ]
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "Eval Explorer Tool",
                  "icon": "terminal",
                  "route": "/nabone.eval.explorer",
                  "categoryId": "nabone"
               }
            }
         ]
      },
      {
         "id": "nabone.eval",
         "name": "nabONE Eval",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "app.examples.alerts",
         "name": "Alert Example Application",
         "dependencies": [
            "nabone.alerts",
            "nabone.platform"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.alerts/app.examples.alerts.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Alerts",
                  "applicationId": "app.examples.alerts",
                  "contentUrl": "nabone-examples/components/app.examples.alerts/partials/index.html",
                  "routes": [
                     "/examples/alerts"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Alerts",
                     "path": "examples",
                     "order": 200,
                     "config": {
                        "componentId": "app.examples.alerts",
                        "handler": {
                           "config": {
                              "route": "/examples/alerts"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.applications",
         "name": "sample Applications",
         "dependencies": [
            "nabone.forms.core",
            "api.resource",
            "nabone.ui.stepNavigation"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.applications/app.examples.applications.min.js?1547009616366",
                  "nabone-examples/components/app.examples.applications/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.examples.applications",
               "name": "Sample Application point to plugin applications."
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Sample Applications",
                  "applicationId": "app.examples.applications",
                  "contentDirective": "application-examples",
                  "routes": [
                     "/examples/applications"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Sample Applications",
                     "path": "examples",
                     "order": 100,
                     "config": {
                        "componentId": "app.examples.applications",
                        "handler": {
                           "config": {
                              "route": "/examples/applications"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.examples.applicationOne",
                  "title": "Sample Application One",
                  "contentDirective": "application-example-one",
                  "routes": [
                     "/examples/applications/one"
                  ]
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.examples.applicationTwo",
                  "title": "Sample Application Two",
                  "contentDirective": "application-example-two",
                  "routes": [
                     "/examples/applications/two"
                  ]
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.examples.applicationThree",
                  "title": "Sample Application Three",
                  "contentDirective": "application-example-Three",
                  "routes": [
                     "/examples/applications/three"
                  ]
               }
            },
            {
               "point": "app.examples.applications",
               "config": {
                  "applicationId": "app.examples.applicationOne",
                  "title": "Sample Application One",
                  "features": [
                     "Triangle background headers",
                     "Standard, Block, and Icon Panels",
                     "Cards",
                     "Progress Bars",
                     "One Table"
                  ],
                  "imageName": "sample-application-one-thumb.png",
                  "route": "/examples/applications/one"
               }
            },
            {
               "point": "app.examples.applications",
               "config": {
                  "applicationId": "app.examples.applicationTwo",
                  "title": "Sample Application Two",
                  "features": [
                     "Workflow/Step Menu",
                     "Pill Navigation/Tabs",
                     "Forms Core",
                     "Collapsible Panels",
                     "Nested Panels"
                  ],
                  "imageName": "sample-application-two-thumb.png",
                  "route": "/examples/applications/two"
               }
            },
            {
               "point": "app.examples.applications",
               "config": {
                  "applicationId": "app.examples.applicationThree",
                  "title": "Sample Application Three",
                  "features": [
                     "Pill Navigation/Tabs",
                     "Inline Alerts",
                     "Full Width Containers",
                     "Instructions Panels",
                     "One Table"
                  ],
                  "imageName": "sample-application-three-thumb.png",
                  "route": "/examples/applications/three"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.examples.applications.schema": "nabone-examples/components/app.examples.applications/resources/FormSchema.jsn",
                     "app.examples.applications.layout": "nabone-examples/components/app.examples.applications/resources/FormLayout.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.componentGroup",
         "name": "Component Group Examples",
         "dependencies": [
            "nabone.platform",
            "nabone.components",
            "nabone.componentGroup",
            "lib.highlightjs",
            "nabone.ui.panels"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.componentGroup/app.examples.componentGroup.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Component Group",
                  "applicationId": "app.examples.componentGroup",
                  "contentDirective": "one-component-group-examples",
                  "routes": [
                     "/examples/componentGroup"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Component Group",
                     "path": "examples",
                     "order": 150,
                     "config": {
                        "componentId": "app.examples.componentGroup",
                        "handler": {
                           "config": {
                              "route": "/examples/componentGroup"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.currencyInput",
         "name": "Currency Input examples",
         "dependencies": [
            "nabone.ui.currencyInput"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.currencyInput/app.examples.currencyInput.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Currency Input",
                  "applicationId": "app.examples.currencyInput",
                  "contentDirective": "currency-input-examples",
                  "routes": [
                     "/examples/currencyInput"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Currency Input",
                     "path": "examples",
                     "order": 160,
                     "config": {
                        "componentId": "app.examples.currencyInput",
                        "handler": {
                           "config": {
                              "route": "/examples/currencyInput"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-currencyinput",
                  "category": "common-components",
                  "label": "nabONE Currency Input",
                  "contentUrl": "nabone-examples/components/app.examples.currencyInput/README.md"
               }
            }
         ]
      },
      {
         "id": "app.examples.hellowidget.widget1",
         "name": "Widget 1 for Widget Application",
         "dependencies": [
            "nabone.ui.panels"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.hellowidget.widget1/app.examples.hellowidget.widget1.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.hellowidget.widgets",
               "config": {
                  "title": "Title for Widget 1 contribution",
                  "contentDirective": "widget-one",
                  "context": {
                     "whatever": "some implementation specific config in plugin component.json"
                  }
               }
            },
            {
               "point": "app.examples.hellowidget.widgets",
               "config": {
                  "title": "This is the foo widget",
                  "contentDirective": "foo-widget",
                  "context": {
                     "fooDetails": "{{ helloWidgetCtrl.fooData.foo }}",
                     "barDetails": "{{ helloWidgetCtrl.fooData.bar }}"
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.hellowidget",
         "name": "Hello Widget Application",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.hellowidget/app.examples.hellowidget.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.examples.hellowidget.widgets",
               "name": "Widgets for the hello world app",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "title": {
                        "description": "A widget title",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name corresponding with the widget",
                        "type": "string"
                     },
                     "widgetData": {
                        "description": "Optional config that is passed to the widget instance",
                        "type": "object"
                     },
                     "context": {
                        "description": "Bindings to apply to the widget",
                        "type": "object",
                        "additionalProperties": {
                           "type": "string"
                        }
                     }
                  },
                  "required": [
                     "title",
                     "contentDirective"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Hello Widget",
                  "applicationId": "app.examples.helloWidget",
                  "contentUrl": "nabone-examples/components/app.examples.hellowidget/partials/app.examples.hellowidget.html",
                  "routes": [
                     "/examples/helloWidget"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Hello Widget",
                     "path": "examples",
                     "order": 1100,
                     "config": {
                        "componentId": "app.examples.helloWidget",
                        "handler": {
                           "config": {
                              "route": "/examples/helloWidget"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.modals",
         "name": "Modal Example Application",
         "dependencies": [
            "nabone.platform",
            "nabone.components",
            "lib.highlightjs",
            "nabone.ui.panels"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.modals/app.examples.modals.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Modals",
                  "applicationId": "app.examples.modals",
                  "contentDirective": "one-modal-examples",
                  "routes": [
                     "/examples/modals"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Modals",
                     "path": "examples",
                     "order": 400,
                     "config": {
                        "componentId": "app.examples.modals",
                        "handler": {
                           "config": {
                              "route": "/examples/modals"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.multiselect",
         "name": "Multi-select directive examples",
         "dependencies": [
            "nabone.ui.multiSelect",
            "nabone.forms.core"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.multiselect/app.examples.multiselect.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Multi-Select Controls",
                  "applicationId": "app.examples.multiselect",
                  "contentUrl": "nabone-examples/components/app.examples.multiselect/partials/index.html",
                  "routes": [
                     "/examples/multiselect"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Multi-Select Controls",
                     "path": "examples",
                     "order": 500,
                     "config": {
                        "componentId": "app.examples.multiselect",
                        "handler": {
                           "config": {
                              "route": "/examples/multiselect"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-multiselect",
                  "category": "common-components",
                  "label": "nabONE MultiSelect Control",
                  "contentUrl": "nabone-examples/components/app.examples.multiselect/README.md"
               }
            }
         ]
      },
      {
         "id": "app.examples.notifications",
         "name": "Notification Example Application",
         "dependencies": [
            "nabone.notifications",
            "nabone.components",
            "lib.highlightjs",
            "nabone.ui.panels"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.notifications/app.examples.notifications.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Notifications",
                  "applicationId": "app.examples.notifications",
                  "contentDirective": "one-notifications-examples",
                  "routes": [
                     "/examples/notifications"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Notifications",
                     "path": "examples",
                     "order": 300,
                     "config": {
                        "componentId": "app.examples.notifications",
                        "handler": {
                           "config": {
                              "route": "/examples/notifications"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "name": "One Pagination Examples",
         "dependencies": [],
         "id": "app.examples.onePagination",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.onePagination/app.examples.onePagination.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "One Pagination Control",
                  "applicationId": "app.examples.onePagination",
                  "contentDirective": "one-pagination-examples",
                  "routes": [
                     "/examples/one-pagination"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "One Pagination Control",
                     "path": "examples",
                     "order": 600,
                     "config": {
                        "componentId": "app.examples.onePagination",
                        "handler": {
                           "config": {
                              "route": "/examples/one-pagination"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "name": "Phone Number Input Examples",
         "dependencies": [],
         "id": "app.examples.onePhoneNumber",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.onePhoneNumber/app.examples.onePhoneNumber.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Phone Number Controls",
                  "applicationId": "app.examples.onePhoneNumber",
                  "contentDirective": "one-phone-number-examples",
                  "routes": [
                     "/examples/onePhoneNumber"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Phone Number Controls",
                     "path": "examples",
                     "order": 600,
                     "config": {
                        "componentId": "app.examples.onePhoneNumber",
                        "handler": {
                           "config": {
                              "route": "/examples/onePhoneNumber"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.oneTable",
         "name": "oneTable directive examples",
         "dependencies": [
            "nabone.platform"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.oneTable/app.examples.oneTable.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "one Table",
                  "applicationId": "app.examples.oneTable",
                  "contentUrl": "nabone-examples/components/app.examples.oneTable/partials/index.html",
                  "routes": [
                     "/examples/one-table"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "one Table",
                     "path": "examples",
                     "order": 600,
                     "config": {
                        "componentId": "app.examples.oneTable",
                        "handler": {
                           "config": {
                              "route": "/examples/one-table"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.onlineStatus",
         "name": "Online status awareness examples",
         "dependencies": [
            "nabone.onlineStatus",
            "nabone.platform"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.onlineStatus/app.examples.onlineStatus.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Online Status",
                  "applicationId": "app.examples.onlineStatus",
                  "contentUrl": "nabone-examples/components/app.examples.onlineStatus/partials/index.html",
                  "routes": [
                     "/examples/onlineStatus"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Online Status",
                     "path": "examples",
                     "order": 700,
                     "config": {
                        "componentId": "app.examples.onlineStatus",
                        "handler": {
                           "config": {
                              "route": "/examples/onlineStatus"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "name": "Panel Examples",
         "dependencies": [
            "nabone.ui.panels",
            "nabone.forms.core",
            "lib.highlightjs",
            "nabone.components"
         ],
         "id": "app.examples.panel",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.panel/app.examples.panel.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Panels",
                  "applicationId": "app.examples.panels",
                  "contentDirective": "one-panel-examples",
                  "routes": [
                     "/examples/panels"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Panels",
                     "path": "examples",
                     "order": 120,
                     "config": {
                        "componentId": "app.examples.panels",
                        "handler": {
                           "config": {
                              "route": "/examples/panels"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.pdf",
         "name": "PDF examples",
         "dependencies": [
            "nabone.pdf2",
            "nabone.platform"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.pdf/app.examples.pdf.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "PDF Generation",
                  "applicationId": "app.examples.pdf",
                  "contentUrl": "nabone-examples/components/app.examples.pdf/partials/PdfExamples.html",
                  "routes": [
                     "/examples/pdf"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "PDF Generation",
                     "path": "examples",
                     "order": 800,
                     "config": {
                        "componentId": "app.examples.pdf",
                        "handler": {
                           "config": {
                              "route": "/examples/pdf"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.submenu",
         "name": "Menu with Submenu",
         "dependencies": [],
         "roles": [],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "order": 150,
                     "path": "examples/submenu",
                     "label": "Menu with Submenu"
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.submenu1",
         "name": "Page linked to submenu",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.submenu1/app.examples.submenu1.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Submenu Page",
                  "applicationId": "app.examples.submenu1",
                  "contentUrl": "nabone-examples/components/app.examples.submenu1/partials/index.html",
                  "routes": [
                     "/examples/submenu1"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Submenu page",
                     "path": "examples/submenu",
                     "order": 152,
                     "config": {
                        "componentId": "app.examples.submenu1",
                        "handler": {
                           "config": {
                              "route": "/examples/submenu1"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "name": "Toggle Button Examples",
         "dependencies": [
            "nabone.ui.toggleButtonGroup",
            "nabone.forms.core",
            "nabone.ui.panels"
         ],
         "id": "app.examples.toggleButtons",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.toggleButtons/app.examples.toggleButtons.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.examples.items",
               "config": {
                  "title": "Toggle Button Controls",
                  "applicationId": "app.examples.toggleButtons",
                  "contentDirective": "one-toggle-button-examples",
                  "routes": [
                     "/examples/toggleButtons"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Toggle Button Controls",
                     "path": "examples",
                     "order": 900,
                     "config": {
                        "componentId": "app.examples.toggleButtons",
                        "handler": {
                           "config": {
                              "route": "/examples/toggleButtons"
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "app.examples.ui",
         "name": "UI Examples",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples.ui/app.examples.ui.min.js?1547009616366",
                  "nabone-examples/components/app.examples.ui/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.examples.ui",
                  "title": "UI Examples",
                  "contentUrl": "nabone-examples/components/app.examples.ui/partials/index.html",
                  "routes": [
                     "/examples/ui"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.examples",
         "name": "nabONE Examples",
         "dependencies": [
            "nabone.components",
            "nabone.platform",
            "nabone.componentGroup"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-examples/components/app.examples/app.examples.min.js?1547009616366",
                  "nabone-examples/components/app.examples/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.examples.items",
               "name": "Code examples",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  },
                  "required": [
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "examples"
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.examples",
                  "title": "nabONE Examples",
                  "contentDirective": "one-examples-home",
                  "context": {
                     "oneComponentGroup": {
                        "componentPluginPointId": "app.examples.items",
                        "title": "nabONE Code Examples",
                        "menuId": "examples",
                        "baseRoute": "/examples"
                     },
                     "containerAppInstance": "::app"
                  },
                  "routes": [
                     "/examples",
                     "/examples/:page"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "Code Examples",
                  "icon": "mouse",
                  "route": "/examples",
                  "categoryId": "nabone"
               }
            }
         ]
      },
      {
         "id": "nabone.expenses",
         "name": "nabOne Expenses Component",
         "dependencies": [
            "api.resource",
            "nabone.forms.core",
            "nabone.ui.components.overrides",
            "nabone.components"
         ],
         "roles": [
            "NABONE-Applications-Lending-Bank-Tools-Operations",
            "NABONE-Applications-Lending-Bank-Tools-Ubank",
            "NABONE-Applications-Lending-Bank-Tools-Banker"
         ],
         "activator": "nabone.expenses.ExpensesRefDataActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-expenses/components/nabone.expenses/nabone.expenses.min.js?1547009616366",
                  "nabone-expenses/components/nabone.expenses/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "app.customer.bankerTools"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.expenses.getRefDataUrl": "nabone-expenses/components/nabone.expenses/resources/expensesRefData.jsn",
                     "nabone.expenses.expenseDetail.schema": "nabone-expenses/components/nabone.expenses/resources/schemas/expenseDetailSchema.jsn",
                     "nabone.expenses.household.schema": "nabone-expenses/components/nabone.expenses/resources/schemas/householdSchema.jsn",
                     "nabone.expenses.betLivingExpenses.schema": "nabone-expenses/components/nabone.expenses/resources/schemas/betLivingExpensesSchema.jsn",
                     "nabone.expenses.nonLivingExpenses.schema": "nabone-expenses/components/nabone.expenses/resources/schemas/nonLivingExpensesSchema.jsn",
                     "nabone.expenses.expenseDetail.layout": "nabone-expenses/components/nabone.expenses/resources/layouts/expenseDetailLayout.jsn",
                     "nabone.expenses.household.layout": "nabone-expenses/components/nabone.expenses/resources/layouts/householdLayout.jsn",
                     "nabone.expenses.betLivingExpenses.layout": "nabone-expenses/components/nabone.expenses/resources/layouts/betLivingExpensesLayout.jsn",
                     "nabone.expenses.otherExpenses.layout": "nabone-expenses/components/nabone.expenses/resources/layouts/otherExpensesLayout.jsn",
                     "nabone.expenses.nonLivingExpenses.layout": "nabone-expenses/components/nabone.expenses/resources/layouts/nonLivingExpensesLayout.jsn"
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Tools Lending Summary - Expenses (Add Expense) started",
                  "topic": "app.customer.bankerTools.expense.add",
                  "monitoredProperties": [
                     "expenseDetails"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Tools Lending Summary - Expenses (Edit Expense) started",
                  "topic": "app.customer.bankerTools.expense.edit",
                  "monitoredProperties": [
                     "expenseDetails"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker Tools Lending Summary - Expenses finished",
                  "topic": "app.customer.bankerTools.expense.finish",
                  "monitoredProperties": [
                     "expenseDetails"
                  ]
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Expenses"
               }
            }
         ]
      },
      {
         "id": "lib.angular.filter",
         "name": "Angular Filter",
         "modules": [
            {
               "files": [
                  "nabone-ext-angular-filter/components/lib.angular.filter/angular-filter.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.bootstrap",
         "name": "Bootstrap",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "lib.efcSdk",
         "name": "EFC v2 SDK",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-efc-sdk/components/lib.efcSdk/resources/efc-combined.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.efcv1Renderer",
         "name": "EFC v1 Form Renderer",
         "dependencies": [
            "lib.uglifyJsBrowser"
         ],
         "modules": [
            {
               "files": [
                  "nabone-ext-efcv1-renderer/components/lib.efcv1Renderer/atbss-form-core.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.uglifyJsBrowser",
         "name": "UglifyJS Browser",
         "modules": [
            {
               "files": [
                  "nabone-ext-efcv1-renderer/components/lib.uglifyJsBrowser/uglify-js-browser.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.highcharts",
         "name": "Highcharts",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-highcharts/components/lib.highcharts/highcharts.js?1547009616366",
                  "nabone-ext-highcharts/components/lib.highcharts/highcharts-more.js?1547009616366",
                  "nabone-ext-highcharts/components/lib.highcharts/modules/funnel.js?1547009616366",
                  "nabone-ext-highcharts/components/lib.highcharts/modules/exporting.js?1547009616366",
                  "nabone-ext-highcharts/components/lib.highcharts/modules/no-data-to-display.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.highlightjs",
         "name": "HighlightJS",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-highlightjs/components/lib.highlightjs/resources/highlight.pack.js?1547009616366",
                  "nabone-ext-highlightjs/components/lib.highlightjs/resources/github.css?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.jspdf",
         "name": "JS PDF",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-jspdf/components/lib.jspdf/resources/jspdf.min.js?1547009616366",
                  "nabone-ext-jspdf/components/lib.jspdf/resources/jspdf.plugin.autotable.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.moment",
         "name": "MomentJS",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-moment/components/lib.moment/moment.min.js?1547009616366",
                  "nabone-ext-moment/components/lib.moment/moment-timezone-with-data.min.js?1547009616366"
               ]
            }
         ],
         "attributes": {
            "offlineSupport": true
         }
      },
      {
         "id": "lib.ngA11y",
         "name": "Angular Accessibility",
         "modules": [
            {
               "files": [
                  "nabone-ext-ng-a11y/components/lib.ngA11y/nga11y.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngBootstrap",
         "name": "Angular Bootstrap",
         "modules": [
            {
               "files": [
                  "nabone-ext-ng-bootstrap/components/lib.ngBootstrap/angular-bootstrap-tpls.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngTable",
         "name": "Angular Table",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-ng-table/components/lib.ngTable/ng-table.min.css?1547009616366",
                  "nabone-ext-ng-table/components/lib.ngTable/ng-table.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngUiSelect",
         "name": "Angular UI Select",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-ng-uiselect/components/lib.ngUiSelect/select.min.css?1547009616366",
                  "nabone-ext-ng-uiselect/components/lib.ngUiSelect/select.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.nouislider-angular",
         "name": "nouislider-angular",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-nouislider-angular/components/lib.nouislider-angular/nouislider/nouislider.min.js?1547009616366",
                  "nabone-ext-nouislider-angular/components/lib.nouislider-angular/nouislider/nouislider.min.css?1547009616366",
                  "nabone-ext-nouislider-angular/components/lib.nouislider-angular/nouislider-angular/nouislider.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.viewer.pdfjs",
         "name": "PDF viewer library for pdfjs",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-pdf-jsviewer/components/lib.viewer.pdfjs/pdf.combined.js?1547009616366",
                  "nabone-ext-pdf-jsviewer/components/lib.viewer.pdfjs/angular-pdf-viewer.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.pdfMake",
         "name": "PDF library for JS",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-pdf-make/components/lib.pdfMake/pdfmake.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.stringifyStable",
         "name": "Stringify stable",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ext-stringify/components/lib.stringifyStable/stringifyStable.js?1547009616366"
               ]
            }
         ]
      },
      {
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.utils"
         ],
         "id": "api.fmd",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-farm-management-deposit/components/api.fmd/api.fmd.min.js?1547009616366"
               ]
            }
         ],
         "name": "Farm Management Deposit API",
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.fmd.baseUrl": "{{api.eesg.baseUrl}}/v1/pricing/calculators/fmd",
                     "api.fmd.withCredentials": true,
                     "api.fmd.getGroupStructureAndAccountsUrl": "{{api.fmd.baseUrl}}/dataCollection?borrowingGroupId=${borrowingGroupId}",
                     "api.fmd.calculateDiscountsUrl": "{{api.fmd.baseUrl}}/calculate",
                     "api.fmd.concessionsUrl": "{{api.fmd.baseUrl}}/accept"
                  }
               }
            },
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.fmd",
                  "service": "api.fmd.FmdApiService",
                  "description": "Farm Management Deposit API Service"
               }
            }
         ]
      },
      {
         "id": "app.fmd.pdf",
         "name": "FMD Pdf",
         "dependencies": [
            "api.resource",
            "api.fmd",
            "lib.moment",
            "nabone.pdf2"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-farm-management-deposit/components/app.fmd.pdf/app.fmd.pdf.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": []
      },
      {
         "id": "app.fmd",
         "name": "Farm Management Deposit",
         "dependencies": [
            "nabone.forms.core",
            "api.resource",
            "api.fmd",
            "app.fmd.pdf",
            "nabone.notifications"
         ],
         "roles": [
            "NAB-Team-EST-BPMO-Agri"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-farm-management-deposit/components/app.fmd/app.fmd.min.js?1547009616366",
                  "nabone-farm-management-deposit/components/app.fmd/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.fmd.layout": "nabone-farm-management-deposit/components/app.fmd/resources/fmd/fmdLayout.jsn",
                     "app.fmd.schema": "nabone-farm-management-deposit/components/app.fmd/resources/fmd/fmdSchema.jsn"
                  }
               }
            },
            {
               "point": "app.group.components",
               "config": {
                  "applicationId": "app.group.fmd",
                  "title": "Farm Management Deposit",
                  "contentDirective": "fmd-manager",
                  "context": {
                     "groupNumber": "{{ groupCtrl.groupNumber }}",
                     "closeInstanceNoConfirm": "componentGroupCtrl.closeInstance(instance.instanceId, false)",
                     "closeInstanceConfirm": "componentGroupCtrl.closeInstance(instance.instanceId, true)"
                  },
                  "routes": [
                     "/group/fmd"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Farm Management Deposit",
                     "path": "groupActivities",
                     "config": {
                        "description": "Business lending Concessional rate Calculator for FMD account holders.",
                        "icon": "leaf",
                        "handler": {
                           "config": {
                              "route": "/group/fmd"
                           }
                        }
                     },
                     "order": 101
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Start Farm Management Deposit",
                  "topic": "app.fmd.start"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Calculate Farm Management Deposit",
                  "topic": "app.fmd.calculate"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Generate PDF for Farm Management Deposit",
                  "topic": "app.fmd.pdf"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-farm-management-deposit/components/app.fmd/resources/help/fmdCalculatorScreenHelpContent.jsn",
                  "componentId": "app.group.fmd"
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.eqf",
         "name": "Equipment Finance Application Form",
         "dependencies": [],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "8",
                  "name": "Equipment Finance Application",
                  "type": "EquipmentFinance",
                  "description": "to link to the current application to apply and submit a request to asset finance to setup a facility.",
                  "provider": "EFC",
                  "display": false,
                  "namespaces": [
                     "formCatalogue"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.mob",
         "name": "Merchants On Boarding",
         "dependencies": [],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "7",
                  "name": "Merchants On Boarding",
                  "type": "MerchantOnBoarding",
                  "description": "as a referral to TSD to initiate a conversation with the customer to understand their specific needs for a merchant.",
                  "provider": "EFC",
                  "display": false,
                  "namespaces": [
                     "formCatalogue"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.override.businessPaymentsCard",
         "name": "Business Payments Card Form Override",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv1.override.businessPaymentsCard/nabone.efcv1.override.businessPaymentsCard.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv1.override",
               "config": {
                  "formType": "BusinessPaymentsCard",
                  "service": "BusinessPaymentsCardFormOverride"
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "6",
                  "name": "Business Payment Card Application",
                  "type": "BusinessPaymentsCard",
                  "description": "is used to link to the current e-form to apply and submit for a business payment card.",
                  "provider": "EFC",
                  "display": false,
                  "namespaces": [
                     "formCatalogue"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.override.commcards",
         "name": "Commercial Cards Form Override",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv1.override.commcards/nabone.efcv1.override.commcards.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv1.override",
               "config": {
                  "formType": "CommercialCardApplication",
                  "service": "CommCardsFormOverride"
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "5",
                  "name": "Commercial Card Application",
                  "type": "CommercialCardApplication",
                  "description": "set up a commercial business card for a customer. The cards are aimed at small to medium businesses that require a card to help manage expenses and cash flow. The business expenses cards differ depending on how the business uses the card, whether that be as a charge card, credit card for the business or a credit card with rewards.",
                  "provider": "EFC",
                  "display": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 400
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.override.dn",
         "name": "Diary Notes Form Override",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv1.override.dn/nabone.efcv1.override.dn.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv1.override",
               "config": {
                  "formType": "DiaryNotes",
                  "service": "DiaryNotesFormOverride"
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.override.nco",
         "name": "NAB Connect OnBoarding Form Override",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv1.override.nco/nabone.efcv1.override.nco.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv1.override",
               "config": {
                  "formType": "NabConnectOnBoarding",
                  "service": "NabConnectOnBoardingOverride"
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "3",
                  "name": "NAB Connect Onboarding - RapidConnect",
                  "type": "NabConnectOnBoarding",
                  "description": "onboard single entity customers (one business customer number) to NAB Connect, if their initial requirement is the standard set of core NAB Connect services. If they have multiple entities or more complex service requirements, please use the NAB Connect Application form to enable a streamlined set up and to ensure we get it right first time.",
                  "provider": "EFC",
                  "display": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 200
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.override.rob",
         "name": "RoB Form Override",
         "dependencies": [
            "lib.ngTable"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv1.override.rob/nabone.efcv1.override.rob.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv1.override",
               "config": {
                  "formType": "ReceivablesOnBoarding",
                  "service": "RobFormOverride"
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "1",
                  "name": "Receivables On Boarding (TSD Only)",
                  "type": "ReceivablesOnBoarding",
                  "description": "create and submit merchant referrals and applications to eMerch. Products for which use of this form is relevant include NAB EFTPOS Countertop and Mobile terminals which enable secure processing of payments from customer using all major credit, charge and debit cards. This form is for TSD use only.",
                  "provider": "EFC",
                  "display": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 100
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.flexi-card",
         "name": "FlexiCard to Visa Debit Opt Out",
         "dependencies": [],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "27",
                  "name": "FlexiCard to Visa Debit Opt Out",
                  "type": "a2deef1c-cf71-4c64-9989-3cf1496f8149",
                  "layout": "default",
                  "description": "opt a customer out of receiving a replacement NAB Visa Debit Card.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 1200
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.ntr-merchant-amendments",
         "name": "NAB Gateway Merchant Amendments Request",
         "dependencies": [],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "30",
                  "name": "NAB Gateway Merchant Amendments Request",
                  "type": "c9d975d9-c680-474d-a812-9047ff1700f8",
                  "layout": "default",
                  "description": "submit requests to update or amend existing Merchant details on the NAB Gateway platform.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 1300
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.plc",
         "name": "Personal Loan Closure",
         "dependencies": [],
         "plugins": [
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "24",
                  "name": "Personal Loan Closure",
                  "type": "e1b5fcaf-0c3f-4492-8f31-adf96c8655d5",
                  "layout": "default",
                  "description": "confirm and close all personal loans where customers have paid the quoted payout figure on the same day.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 1100
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.rtcForm",
         "name": "Request to change home loan form customisations",
         "dependencies": [
            "api.nabone"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv2.form.rtcForm/nabone.efcv2.form.rtcForm.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "0fbd09cc-9320-4c75-b25c-61098b28ee8b",
                  "overrides": {
                     "modelOverrider": "nabone.efcv2.form.rtcForm.ModelOverrider"
                  }
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "13",
                  "name": "Request To Change My Home Loan",
                  "type": "0fbd09cc-9320-4c75-b25c-61098b28ee8b",
                  "description": "capture requests from customers who want to make a change to their home loan, which can be completed simply as a modification. Please refer to Policy and Product Swap Matrix for eligible modifications. Helpful hint: Add the customer name and, or number to the Title field.",
                  "provider": "EFCv2",
                  "display": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 300
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.spg",
         "name": "SPG Request Form",
         "dependencies": [
            "api.nabone"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv2.form.spg/nabone.efcv2.form.spg.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "8976d421-4c6d-4e35-9ecd-cd9c7038acc4",
                  "overrides": {
                     "layoutOverrider": "nabone.efcv2.form.spg.LayoutOverrider"
                  }
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "23",
                  "name": "PPSR - SPG Requests",
                  "type": "8976d421-4c6d-4e35-9ecd-cd9c7038acc4",
                  "layout": "default",
                  "description": "lodge requests to Secured Party Grantors (SPGs) on the Personal Property Security Register (PPSR). SPGs are unique ID's used by PPSR to identify, link and record secured party interests over registered securities.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 1000
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.tdForm",
         "name": "Request to change home loan form customisations",
         "dependencies": [
            "api.nabone"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv2.form.tdForm/nabone.efcv2.form.tdForm.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "652dc0d8-3934-46b8-a8bf-294a15931084",
                  "overrides": {
                     "modelOverrider": "nabone.efcv2.form.tdForm.ModelOverrider",
                     "layoutOverrider": "nabone.efcv2.form.tdForm.LayoutOverrider",
                     "actionStrategyProvider": "nabone.efcv2.form.tdForm.ActionStrategyProvider",
                     "schemaOverrider": "nabone.efcv2.form.tdForm.SchemaOverrider"
                  }
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "21",
                  "name": "Transaction Dispute (Payment Return and PayID Conflict included)",
                  "type": "652dc0d8-3934-46b8-a8bf-294a15931084",
                  "description": "dispute a transaction type that includes ATM withdrawals, BPAY, Funds Transfers or Card transactions. This form is not to be used for disputes about NAB Traveller card payments, ATM deposits, Internet banking payments from and to the same customer, ATO payments or Lost or stolen cards. If the customer has a lost or stolen card and is disputing a transaction they do not recognise, contact Fraud Assist on 1300 622 372 or speed dial 118.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 600
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-form-catalogue/components/nabone.efcv2.form.tdForm/resources/help/nabonetdFormHelpContent.jsn",
                  "componentId": "nabone.form.view"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-form-catalogue/components/nabone.efcv2.form.tdForm/resources/help/nabonetdFormWhatsNewContent.jsn",
                  "componentId": "nabone.form.view"
               }
            }
         ]
      },
      {
         "id": "nabone.efcv2.form.visaSwitchForm",
         "name": "Visa Mini Customer Deferral",
         "dependencies": [
            "api.nabone"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.efcv2.form.visaSwitchForm/nabone.efcv2.form.visaSwitchForm.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "1bf6c981-422f-4bee-86e9-55072645b82e",
                  "overrides": {
                     "modelOverrider": "nabone.efcv2.form.visaSwitchForm.ModelOverrider",
                     "layoutOverrider": "nabone.efcv2.form.visaSwitchForm.LayoutOverrider"
                  }
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "14",
                  "name": "Visa Mini Customer Deferral",
                  "type": "1bf6c981-422f-4bee-86e9-55072645b82e",
                  "description": "defer the migration of Mastercard to VISA for customers.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 700
               }
            },
            {
               "point": "nabone.form.catalogue.forms",
               "config": {
                  "id": "22",
                  "name": "VISA Switch - Commercial Customer Deferral",
                  "type": "8ca96e58-0c8f-4c3f-9b91-ad5369aa5939",
                  "layout": "default",
                  "description": "defer the migration of Mastercard to VISA for commercial customers.",
                  "provider": "EFCv2",
                  "display": true,
                  "transient": true,
                  "namespaces": [
                     "formCatalogue"
                  ],
                  "order": 900
               }
            }
         ]
      },
      {
         "id": "nabone.form.catalogue.precacher",
         "name": "Form Catalogue Pre-cacher",
         "activator": "FormCataloguePrecacher",
         "dependencies": [
            "api.efc2",
            "api.efc1",
            "nabone.forms",
            "nabone.form.catalogue.service",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.form.catalogue.precacher/nabone.form.catalogue.precacher.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.efc.precache": false
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.form.catalogue",
         "name": "Form Catalogue",
         "dependencies": [
            "nabone.forms",
            "nabone.form.catalogue.service",
            "nabone.ui.components.overrides"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-form-catalogue/components/nabone.form.catalogue/nabone.form.catalogue.min.js?1547009616366",
                  "nabone-form-catalogue/components/nabone.form.catalogue/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Form Catalogue",
                     "path": "apps",
                     "icon": "clipboard",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/forms",
                              "availableOffline": false
                           }
                        }
                     },
                     "order": 100
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.app.form.catalogue",
                  "title": "Form Catalogue",
                  "contentDirective": "form-catalogue",
                  "context": {
                     "showInstances": "true",
                     "showBundles": "true"
                  },
                  "routes": [
                     "/forms"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Form Catalogue"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-form-catalogue/components/nabone.form.catalogue/resources/help/naboneFormHelpContent.jsn",
                  "componentId": "nabone.app.form.catalogue"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-form-catalogue/components/nabone.form.catalogue/resources/help/naboneFormWhatsNewContent.jsn",
                  "componentId": "nabone.app.form.catalogue"
               }
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.form.catalogue.override",
               "name": "Form Catalogue Overrides",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "formType": {
                        "description": "The EFC form type id",
                        "type": "string"
                     },
                     "overrides": {
                        "type": "object",
                        "properties": {
                           "formOverrider": {
                              "description": "A service implementing IFormOverrider",
                              "type": "string"
                           }
                        },
                        "additionalProperties": false
                     }
                  },
                  "required": [
                     "formType",
                     "overrides"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.forms.core",
         "name": "nabONE Forms Core",
         "dependencies": [
            "nabone.eval",
            "nabone.layout",
            "nabone.ui.dom",
            "nabone.ui.addressLookup",
            "nabone.ui.currencyInput",
            "nabone.ui.multiSelect",
            "nabone.ui.toggleButtonGroup",
            "nabone.ui.panels"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-forms-core/components/nabone.forms.core/style.css?1547009616366",
                  "nabone-forms-core/components/nabone.forms.core/nabone.forms.core.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.forms.efc",
         "name": "nabONE Forms EFC",
         "dependencies": [
            "nabone.layout",
            "nabone.eval",
            "nabone.forms.core"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-forms-efc/components/nabone.forms.efc/style.css?1547009616366",
                  "nabone-forms-efc/components/nabone.forms.efc/nabone.forms.efc.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.help",
         "name": "nabONE Help Centre",
         "dependencies": [
            "nabone.components",
            "nabone.ui.modal",
            "api.resource",
            "nabone.eval",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-help/components/nabone.help/nabone.help.min.js?1547009616366",
                  "nabone-help/components/nabone.help/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.help.content",
               "name": "Help Centre content",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "helpContentFile": {
                        "description": "Location of the help content file",
                        "type": "string"
                     },
                     "componentId": {
                        "description": "Id of component to associate this help to",
                        "type": "string"
                     },
                     "visibleIf": {
                        "properties": {
                           "expr": {
                              "description": "Expression to evaluate to determine if this help content should be show. Will use the `context` property passed to `nabone.help.context.changed`",
                              "type": "string"
                           }
                        },
                        "required": [
                           "expr"
                        ]
                     }
                  },
                  "required": [
                     "helpContentFile",
                     "componentId"
                  ]
               }
            },
            {
               "id": "nabone.whatsNew.content",
               "name": "What's New content",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "helpContentFile": {
                        "description": "Location of the whatsNew content file",
                        "type": "string"
                     },
                     "componentId": {
                        "description": "Id of component to associate this help to",
                        "type": "string"
                     }
                  },
                  "required": [
                     "helpContentFile",
                     "componentId"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.rightSidebar.apps",
               "config": {
                  "title": "Help",
                  "maxInstances": 1,
                  "displayOrder": 1,
                  "applicationId": "nabone.rightSidebar.help",
                  "loadOnContainerStart": true,
                  "contentDirective": "viewHelpContent",
                  "context": {
                     "isOpen": "rightSideBarCtrl.isOpen",
                     "defaultContentId": "help.default",
                     "pluginPoint": "nabone.help.content"
                  }
               }
            },
            {
               "point": "nabone.rightSidebar.apps",
               "config": {
                  "title": "What's New",
                  "maxInstances": 1,
                  "displayOrder": 2,
                  "applicationId": "nabone.rightSidebar.whatsNew",
                  "loadOnContainerStart": true,
                  "contentDirective": "viewHelpContent",
                  "context": {
                     "isOpen": "rightSideBarCtrl.isOpen",
                     "defaultContentId": "whatsNew.default",
                     "pluginPoint": "nabone.whatsNew.content"
                  }
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-help",
                  "category": "common-components",
                  "label": "Help System",
                  "contentUrl": "nabone-help/components/nabone.help/README.html"
               }
            }
         ]
      },
      {
         "id": "app.nabonehome.inflightApps",
         "name": "Home Inflight Apps",
         "dependencies": [
            "nabone.components",
            "api.ela",
            "app.nabonehome"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-home/components/app.nabonehome.inflightApps/app.nabonehome.inflightApps.min.js?1547009616366",
                  "nabone-home/components/app.nabonehome.inflightApps/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.container.homepage.inflight",
               "name": "Additional Home Page components",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "serviceClass": {
                        "description": "Name of a service that will handle the operations for the specific app",
                        "type": "string"
                     },
                     "applicationType": {
                        "description": "The name of the application type",
                        "type": "string"
                     }
                  },
                  "required": [
                     "serviceClass",
                     "applicationType"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.nabonehome.inflightApps",
                  "title": "Inflight Tasks",
                  "contentUrl": "nabone-home/components/app.nabonehome.inflightApps/partials/InflightAppsIndex.html",
                  "routes": [
                     "/inflightTasks"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "nabone.home.components",
               "config": {
                  "widgetId": "nabone.container.inflightApps",
                  "title": "Inflight Tasks",
                  "displayOrder": 1,
                  "contentDirective": "home-inflight-apps",
                  "context": {
                     "buid": "homeAppsCtrl.buid",
                     "isSummaryView": true
                  }
               }
            }
         ]
      },
      {
         "id": "app.nabonehome",
         "name": "nabONE home page",
         "attributes": {
            "offlineSupport": true
         },
         "dependencies": [
            "nabone.efcv2",
            "api.resource",
            "api.ela",
            "nabone.utils",
            "nabone.notifications",
            "nabone.ui.dom",
            "nabone.componentGroup"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-home/components/app.nabonehome/app.nabonehome.min.js?1547009616366",
                  "nabone-home/components/app.nabonehome/style.css?1547009616366",
                  "nabone-home/components/app.nabonehome/resources/fonts/nabDigitalScript/nabDigitalScript.css?1547009616366",
                  "nabone-home/components/app.nabonehome/resources/fonts/nabImpact/NABImpact.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.home.components",
               "name": "Group Components (Menu Items)",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "title": {
                        "description": "A component title",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "maxInstances": {
                        "description": "Maximum allowed instances of this component",
                        "type": "number"
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     },
                     "attributes": {
                        "type": "object",
                        "properties": {
                           "visibleIf": {
                              "description": "Access control rules defined as a visibility expression",
                              "type": "string"
                           }
                        },
                        "additionalProperties": true
                     },
                     "autoStart": {
                        "type": "boolean",
                        "default": false
                     }
                  },
                  "required": [
                     "applicationId"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "nabone.home.components",
               "name": "Additional Home Page components",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "Unique ID for this widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "Widget title",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "Widget order item",
                        "type": "number"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     }
                  },
                  "required": [
                     "widgetId",
                     "title",
                     "contentDirective"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.home.components",
               "config": {
                  "applicationId": "app.nabonehome.home",
                  "title": "My nabONE",
                  "contentUrl": "nabone-home/components/app.nabonehome/partials/index.html",
                  "routes": [
                     "/home/home"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "My nabONE",
                     "path": "home",
                     "config": {
                        "componentId": "app.nabonehome.home",
                        "handler": {
                           "config": {
                              "route": "/home/home"
                           }
                        }
                     },
                     "order": 1
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "home"
                  }
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "nabONE Home",
                     "path": "apps",
                     "icon": "home-1",
                     "order": 10,
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/home",
                              "availableOffline": true
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.nabonehome",
                  "title": "nabONE",
                  "contentDirective": "one-mynabone",
                  "context": {
                     "oneComponentGroup": {
                        "id": "app.nabonehome",
                        "componentPluginPointId": "app.home.components",
                        "title": "Home",
                        "menuId": "home",
                        "menuComponent": "home-side-bar",
                        "headerComponent": "group-header",
                        "baseRoute": "/home"
                     },
                     "appInstance": "app",
                     "isLoading": "false",
                     "initError": "false",
                     "appTitle": "My nabONE",
                     "containerAppInstance": "::app"
                  },
                  "routes": [
                     "/home"
                  ],
                  "maxInstances": 1,
                  "startNotification": {
                     "id": "loading-nabone-home",
                     "type": "information",
                     "title": "Welcome to nabONE",
                     "timeout": 4000
                  }
               }
            },
            {
               "point": "nabone.container.apps.startnotifications",
               "config": {
                  "applicationId": "app.nabonehome",
                  "startNotification": {
                     "id": "loading-nabone-home",
                     "type": "information",
                     "title": "Welcome to nabONE",
                     "timeout": 4000
                  }
               }
            },
            {
               "point": "nabone.container.apps.autostart",
               "config": {
                  "route": "/home"
               }
            },
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "landingPageFeedbackForm",
                  "overrides": {
                     "actionStrategyProvider": "app.nabonehome.FeedbackFormActionStrategyProvider"
                  }
               }
            },
            {
               "point": "nabone.rightSidebar.apps",
               "config": {
                  "title": "Feedback",
                  "maxInstances": 1,
                  "applicationId": "nabone.rightSidebar.feedback",
                  "contentDirective": "feedbackForm",
                  "context": {
                     "selectedApplicationId": "rightSideBarCtrl.currentActiveId"
                  }
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-home/components/app.nabonehome/resources/help/defaultHelpContent.jsn",
                  "componentId": "help.default"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-home/components/app.nabonehome/resources/help/defaultWhatsNewContent.jsn",
                  "componentId": "whatsNew.default"
               }
            }
         ]
      },
      {
         "id": "nabone.host",
         "name": "nabONE Host",
         "dependencies": [],
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-host/components/nabone.host/nabone.host.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "EESG first request timing event",
                  "topic": "nabone.interceptor.eesg.firstRequest"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Authentication event",
                  "topic": "nabone.host.auth"
               }
            }
         ]
      },
      {
         "dependencies": [
            "app.group.overview"
         ],
         "roles": [],
         "id": "app.coap.externalLink",
         "modules": [
            {
               "files": [
                  "nabone-hosted-apps/components/app.group.coap.externalLink/partials.js?1547009616366",
                  "nabone-hosted-apps/components/app.group.coap.externalLink/module.js?1547009616366",
                  "nabone-hosted-apps/components/app.group.coap.externalLink/types.js?1547009616366",
                  "nabone-hosted-apps/components/app.group.coap.externalLink/style.css?1547009616366"
               ],
               "ordered": true
            },
            {
               "files": [
                  "nabone-hosted-apps/components/app.group.coap.externalLink/directives/coapExternalLink/coapExternalLinkController.js?1547009616366"
               ],
               "ordered": true
            },
            {
               "files": [
                  "nabone-hosted-apps/components/app.group.coap.externalLink/component.js?1547009616366"
               ],
               "ordered": true
            }
         ],
         "name": "Customer On A Page external link",
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.coap.externalLink.baseUrl": "https://businesslending.nabone.nab.com.au",
                     "app.coap.externalLink.urlTemplate": "{{app.coap.externalLink.baseUrl}}/groups/${groupNumber}/summary"
                  }
               }
            },
            {
               "config": {
                  "contentDirective": "coap-external-link",
                  "context": {
                     "groupNumber": "groupCtrl.groupNumber",
                     "class": "col-xs-12 text-right"
                  },
                  "displayOrder": -1000,
                  "title": "Cutstomer on a Page external link",
                  "widgetId": "app.coap.externalLink"
               },
               "point": "app.group.overview.widgets"
            }
         ]
      },
      {
         "id": "api.pricing.ipt.refData",
         "name": "IPT Pricing Reference Data API",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ipt/components/api.pricing.ipt.refData/api.pricing.ipt.refData.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.pricing.ipt.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.pricing.ipt.refData.baseUrl": "{{api.pricing.ipt.baseUrl}}/info/nab/pricing/homeloan/",
                     "api.pricing.ipt.refData.withCredentials": false
                  },
                  "dev": {
                     "api.pricing.ipt.baseUrl": "http://localhost:3000"
                  }
               }
            }
         ]
      },
      {
         "id": "api.pricing.ipt.refData.ui",
         "name": "IPT Pricing Reference Data API - Test UI Plugin",
         "dependencies": [
            "api.pricing.ipt.refData",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.pricing.ipt.refData",
                  "service": "api.pricing.ipt.refData.IptRefDataService",
                  "description": "IPT Pricing Reference Data"
               }
            }
         ]
      },
      {
         "id": "api.pricing.ipt",
         "name": "IPT Pricing API",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ipt/components/api.pricing.ipt/api.pricing.ipt.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.pricing.ipt.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.pricing.ipt.withCredentials": true,
                     "api.pricing.ipt.getSubmissionsUrl": "{{api.pricing.ipt.baseUrl}}/internal/${lineOfBusiness}/pricing/${pricingType}/submissions/${submissionType}/${batchSize}?v=2",
                     "api.pricing.ipt.getSubmissionDetailUrl": "{{api.pricing.ipt.baseUrl}}/internal/${lineOfBusiness}/pricing/${pricingType}/submission/${submissionId}?v=4",
                     "api.pricing.ipt.updateSubmissionUrl": "{{api.pricing.ipt.baseUrl}}/internal/${lineOfBusiness}/pricing/${pricingType}/submission?v=3",
                     "api.pricing.ipt.getPricingSubmissionsUrl": "{{api.pricing.ipt.baseUrl}}/v1/pricing/submissions/search",
                     "api.pricing.ipt.managePricingSubmissionLockUrl": "{{api.pricing.ipt.baseUrl}}/v1/pricing/${iptRole}/submissions/${submissionId}/lock"
                  }
               }
            }
         ]
      },
      {
         "id": "api.pricing.ipt.ui",
         "name": "IPT Pricing API - Test UI Plugin",
         "dependencies": [
            "api.pricing.ipt",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.pricing.ipt",
                  "service": "api.pricing.ipt.SubmissionsApiService",
                  "description": "IPT Pricing Escalations Submissions"
               }
            }
         ]
      },
      {
         "id": "app.ipt",
         "name": "ipt",
         "dependencies": [
            "api.user",
            "nabone.env",
            "nabone.forms.efc",
            "nabone.components",
            "api.resource",
            "api.customer.accounts",
            "nabone.notifications",
            "api.efc2",
            "api.pricing.ipt",
            "api.pricing.ipt.refData",
            "app.customer",
            "app.customer.activities",
            "app.customer.tempCustomer",
            "nabone.user",
            "nabone.ui.components.overrides",
            "nabone.layout",
            "nabone.pdf2"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ipt/components/app.ipt/app.ipt.min.js?1547009616366",
                  "nabone-ipt/components/app.ipt/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.ipt.baseUrl": "{{api.eesg.baseUrl}}",
                     "app.ipt.pdfLayout": "nabone-ipt/components/app.ipt/resources/reports/pricingLayout.jsn",
                     "app.ipt.statusExportPdfLayout": "nabone-ipt/components/app.ipt/resources/reports/statusExportLayout.jsn"
                  },
                  "dev": {
                     "api.ipt.baseUrl": "http://localhost:3000"
                  },
                  "sit": {}
               }
            }
         ]
      },
      {
         "id": "app.pricing.ipt.escalations",
         "name": "IPT Escalations",
         "dependencies": [
            "app.pricing.ipt",
            "app.customer.tempCustomer",
            "nabone.components",
            "nabone.notifications",
            "nabone.user",
            "api.efc2",
            "api.customer.accounts",
            "api.pricing.ipt.refData",
            "nabone.ui.components.overrides",
            "app.ipt"
         ],
         "roles": [
            "INT-SE-HomeLending-PricingDesk-USR"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ipt/components/app.pricing.ipt.escalations/app.pricing.ipt.escalations.min.js?1547009616366",
                  "nabone-ipt/components/app.pricing.ipt.escalations/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "IPT Escalations",
                     "path": "apps",
                     "icon": "flight",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/pricing/ipt/escalations"
                           }
                        }
                     },
                     "order": 70
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.pricing.ipt.escalations",
                  "title": "IPT Escalations",
                  "contentDirective": "ipt-escalations",
                  "context": {
                     "refreshRate": 60000
                  },
                  "routes": [
                     "/pricing/ipt/escalations"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.pricing.ipt.escalations.submission",
                  "title": "IPT Escalation Submission",
                  "contentUrl": "nabone-ipt/components/app.pricing.ipt.escalations/partials/IptEscalationSummary.html",
                  "routes": [
                     "/pricing/ipt/escalations/:submissionId"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "IPT Escalation Submission",
                  "applicationId": "app.pricing.ipt.escalations",
                  "contentDirective": "ipt-esc-summary",
                  "context": {
                     "submissionId": "{{ app.params.submissionId }}",
                     "customerNumber": "{{ custCtrl.customerNumber }}",
                     "submissionDetails": "app.config.data.submissionDetails"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/pricingipt",
                     "/customer/pricingipt/:submissionId"
                  ],
                  "closeHandler": {
                     "service": "app.pricing.ipt.escalations.IptEscSubmissionCloseHandler",
                     "config": {}
                  },
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (customerIdData.idSource == 'me' || customerIdData.idSource == 'temp')"
                  }
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "IPT Escalations"
               }
            }
         ]
      },
      {
         "id": "app.pricing.ipt.history.banker",
         "name": "IPT Banker History",
         "dependencies": [
            "nabone.user",
            "api.pricing.ipt",
            "app.ipt",
            "app.customer",
            "nabone.pdf2"
         ],
         "roles": [
            "INT-SE-HomeLending-PricingBanker-USR",
            "INT-SE-HomeLending-PricingDesk-USR"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ipt/components/app.pricing.ipt.history.banker/app.pricing.ipt.history.banker.min.js?1547009616366",
                  "nabone-ipt/components/app.pricing.ipt.history.banker/style.css?1547009616366"
               ]
            }
         ],
         "pluginsPoints": [],
         "plugins": [
            {
               "point": "app.home.components",
               "config": {
                  "applicationId": "app.pricing.ipt.history.banker",
                  "title": "Pricing",
                  "contentDirective": "ipt-banker-history",
                  "context": {
                     "refreshRate": 60000
                  },
                  "routes": [
                     "/pricing/ipt/history/banker"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Finance & Pricing",
                     "path": "home",
                     "config": {
                        "componentId": "app.pricing.ipt.history.banker",
                        "handler": {
                           "config": {
                              "route": "/pricing/ipt/history/banker"
                           }
                        }
                     },
                     "order": 3
                  }
               }
            }
         ]
      },
      {
         "id": "app.pricing.ipt",
         "name": "Finance & Pricing",
         "dependencies": [
            "api.user",
            "nabone.env",
            "nabone.forms.efc",
            "nabone.components",
            "api.resource",
            "api.customer.accounts",
            "nabone.notifications",
            "api.efc2",
            "api.pricing.ipt",
            "api.ela",
            "api.pricing.ipt.refData",
            "app.customer",
            "app.customer.activities",
            "app.ipt",
            "app.customer.tempCustomer",
            "nabone.user",
            "api.pricing.ipt.refData",
            "nabone.ui.components.overrides",
            "nabone.layout",
            "nabone.pdf2"
         ],
         "roles": [
            "INT-SE-HomeLending-PricingBanker-USR",
            "INT-SE-HomeLending-PricingDesk-USR"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ipt/components/app.pricing.ipt/app.pricing.ipt.min.js?1547009616366",
                  "nabone-ipt/components/app.pricing.ipt/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Finance & Pricing",
                     "path": "customer",
                     "config": {
                        "componentId": "customer.ipt",
                        "handler": {
                           "config": {
                              "route": "/customer/ipt"
                           }
                        }
                     },
                     "order": 700
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Finance & Pricing",
                  "applicationId": "customer.ipt",
                  "contentDirective": "ipt-request-history",
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}",
                     "customerDetails": "custCtrl.customer"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/ipt"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (customerIdData.idSource == 'me' || customerIdData.idSource == 'temp')"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.pricing.ipt.baseUrl": "{{api.eesg.baseUrl}}",
                     "app.pricing.ipt.formUrl.facilitiesLayout": "nabone-ipt/components/app.pricing.ipt/resources/forms/facilitiesLayout.jsn",
                     "app.pricing.ipt.formUrl.facilitiesSchema": "nabone-ipt/components/app.pricing.ipt/resources/schemas/facilitiesSchema.jsn",
                     "app.pricing.ipt.formUrl": "nabone-ipt/components/app.pricing.ipt/resources/forms/loanEfcDefnResponse.jsn",
                     "app.pricing.ipt.formUrl.customerDetails": "nabone-ipt/components/app.pricing.ipt/resources/forms/customerDetails.jsn",
                     "app.pricing.ipt.formUrl.bankerDetails": "nabone-ipt/components/app.pricing.ipt/resources/forms/bankerDetails.jsn",
                     "app.pricing.ipt.formUrl.additionalDetails": "nabone-ipt/components/app.pricing.ipt/resources/forms/additionalDetails.jsn",
                     "api.pricing.ipt.pricing.createPricingAssessment": "{{api.pricing.ipt.baseUrl}}/internal/nab/pricing/homeloan/assessment?v=4",
                     "api.pricing.ipt.pricing.updatePricingAssessment": "{{api.pricing.ipt.baseUrl}}/internal/nab/pricing/homeloan/assessment/{assessmentId}?v=2",
                     "api.pricing.ipt.pricing.createPricingSubmission": "{{api.pricing.ipt.baseUrl}}/internal/nab/pricing/homeloan/submission?v=3",
                     "api.pricing.ipt.pricing.updatePricingSubmission": "{{api.pricing.ipt.baseUrl}}/internal/nab/pricing/homeloan/submission?v=3",
                     "api.pricing.ipt.formUrl.dealSummaryFormUrl": "nabone-ipt/components/app.pricing.ipt/resources/forms/dealSummaryForm.jsn",
                     "app.pricing.ipt.formUrl.dealSummaryLayout": "nabone-ipt/components/app.pricing.ipt/resources/forms/dealSummaryLayout.jsn",
                     "app.pricing.ipt.formUrl.dealSummarySchema": "nabone-ipt/components/app.pricing.ipt/resources/schemas/dealSummarySchema.jsn",
                     "app.pricing.ipt.pdfLayout": "nabone-ipt/components/app.pricing.ipt/resources/reports/pricingLayout.jsn"
                  },
                  "dev": {
                     "api.pricing.ipt.baseUrl": "http://localhost:3000"
                  },
                  "sit": {}
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "ipt.userGuide",
                  "name": "Instant Pricing Tool User Guide",
                  "linkUrl": "https://intranet.nab.com.au/Customers/prod_house/A/Documents/IPT%20Userguide%20v1.7.pdf"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "ipt.faq",
                  "name": "Instant Pricing Tool FAQ",
                  "linkUrl": "https://intranet.nab.com.au/Customers/prod_house/A/Documents/Instant%20Pricing%20Tool%20FAQs%20v6.pdf"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "ipt.scenario",
                  "name": "Instant Pricing Tool Scenario Guide",
                  "linkUrl": "https://intranet.nab.com.au/Customers/prod_house/A/PublishingImages/Pages/Home-Loans-Living-Room---Pricing-and-Discretions/Scenario%20Guide%20v1%202.pdf"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "ipt.glossary",
                  "name": "Instant Pricing Tool Glossary",
                  "linkUrl": "https://intranet.nab.com.au/Customers/prod_house/A/Documents/Pricing%20Glossary.pdf"
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Home Loan Instant Pricing Tool",
                     "path": "customerActivities",
                     "config": {
                        "description": "Submit a home loan pricing request",
                        "icon": "calculator",
                        "imageUrl": "nabone-ipt/components/app.pricing.ipt/resources/img/iptActivity.png",
                        "visibleIf": "customerIdData.lineOfBusiness == 'nab' && (customerIdData.idSource == 'me' || customerIdData.idSource == 'temp')",
                        "handler": {
                           "config": {
                              "route": "/customer/ipt"
                           }
                        }
                     },
                     "order": 200
                  }
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-ipt/components/app.pricing.ipt/resources/help/iptHelpContent.jsn",
                  "componentId": "customer.ipt"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-ipt/components/app.pricing.ipt/resources/help/iptWhatsNewContent.jsn",
                  "componentId": "nabone.app.pricing.ipt"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Home Loan Instant Pricing Tool (IPT)"
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "IPT Banker Submission",
                  "applicationId": "app.pricing.ipt",
                  "contentDirective": "ipt-content",
                  "context": {
                     "customerNumber": "app.config.appData.customerNumber",
                     "customerDetails": "custCtrl.customer",
                     "submissionData": "app.config.appData.submissionData"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/bankeript/:submissionId"
                  ]
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-ipt/components/app.pricing.ipt/resources/help/iptHelpContent.jsn",
                  "componentId": "customer.ipt"
               }
            }
         ]
      },
      {
         "dependencies": [
            "nabone.api",
            "nabone.env"
         ],
         "id": "api.kyc",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-kyc/components/api.kyc/api.kyc.min.js?1547009616366"
               ]
            }
         ],
         "name": "Customer KYC API Services",
         "plugins": [
            {
               "config": {
                  "default": {
                     "api.kyc.retrieveKycDocumentList": "{{api.eesg.baseUrl}}/info/nab/reference/kyc/documents?v=1",
                     "api.kyc.updateKycDetails": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/kyc/verification?v=2",
                     "api.kyc.getActiveSources": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/kyc/verification/source?v=1",
                     "api.kyc.retrieveKycStatus": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/kyc/verification/status?v=1",
                     "api.kyc.updateKycStatus": "{{api.eesg.baseUrl}}/internal/nab/customer/${customerId}/kyc/verification/status?v=1"
                  }
               },
               "point": "nabone.env.properties"
            }
         ]
      },
      {
         "dependencies": [
            "api.kyc",
            "nabone.api.test"
         ],
         "id": "api.kyc.ui",
         "name": "Customer KYC API Test UI Plugin",
         "plugins": [
            {
               "config": {
                  "apiId": "api.kyc",
                  "description": "Customer API KYC Service",
                  "service": "api.kyc.CustomerKycApi"
               },
               "point": "nabone.api.test.ui"
            }
         ]
      },
      {
         "id": "app.kyc.indicator",
         "name": "KYC Indicator Plugin",
         "dependencies": [
            "nabone.components",
            "nabone.toggle",
            "api.kyc",
            "app.kyc",
            "app.customer",
            "api.customer",
            "api.customer.profile"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-kyc/components/app.kyc.indicator/app.kyc.indicator.min.js?1547009616366",
                  "nabone-kyc/components/app.kyc.indicator/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.customer.quickdata",
               "config": {
                  "contentDirective": "customer-kyc-summary",
                  "context": {
                     "customer": "custCtrl.customer",
                     "personStatus": "custCtrl.customer.austracHeld",
                     "organsiationStatus": "custCtrl.customer.kycStatus",
                     "ng-if": "custCtrl.customer && !custCtrl.customer.isTemporary && custCtrl.customerIdData.lineOfBusiness == 'nab'"
                  },
                  "displayOrder": -1
               }
            },
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "KYC Incomplete",
                  "widgetId": "kyc-status-widget",
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "customer-kyc-alert",
                  "displayOrder": -10,
                  "context": {
                     "customer": "custCtrl.customer",
                     "personStatus": "custCtrl.customer.austracHeld",
                     "organsiationStatus": "custCtrl.customer.kycStatus"
                  },
                  "widgetData": {}
               }
            },
            {
               "point": "nabone.toggle.list",
               "config": {
                  "id": "nabone.kyc.complete",
                  "toggleStrategy": "nabone.toggle.BasicRoleToggleStrategy",
                  "toggleConfig": {
                     "roles": [
                        "NABONE-Applications-IndividualOnboarding",
                        "NABONE-Applications-UpdateCustomerDetails",
                        "Digital Business Onboarding Pilot",
                        "Digital Business Onboarding Pilot Admin",
                        "NABONE-Applications-DBOX-Banker"
                     ]
                  }
               }
            }
         ]
      },
      {
         "id": "app.kyc",
         "name": "Know Your Customer",
         "dependencies": [
            "api.resource",
            "api.kyc",
            "api.referenceData",
            "nabone.env",
            "nabone.forms.core",
            "nabone.eval",
            "nabone.pdf2",
            "api.customer",
            "app.customer.onboarding"
         ],
         "activator": "app.kyc.KycActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-kyc/components/app.kyc/style.css?1547009616366",
                  "nabone-kyc/components/app.kyc/app.kyc.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.kyc.entityTypes",
               "name": "KYC entity type registration",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string"
                     },
                     "name": {
                        "type": "string"
                     },
                     "description": {
                        "type": "string"
                     },
                     "lastUpdated": {
                        "type": "string",
                        "description": "Date last updated in yyyy-MM-dd format"
                     },
                     "criteria": {
                        "type": "object",
                        "properties": {
                           "expr": {
                              "type": "string"
                           }
                        },
                        "additionalProperties": false
                     },
                     "enabled": {
                        "type": "boolean",
                        "default": true
                     },
                     "hasChecklist": {
                        "type": "boolean",
                        "default": true
                     },
                     "order": {
                        "type": "number"
                     },
                     "requiresCustomValidation": {
                        "type": "boolean",
                        "description": "Set to true if the entity requires additional KYC checklists to be completed for related entities (eg. beneficial owners, trustees etc)",
                        "default": false
                     }
                  },
                  "required": [
                     "id",
                     "name",
                     "criteria",
                     "lastUpdated",
                     "order"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "individual",
                  "name": "Individual",
                  "criteria": {
                     "expr": "entityType == 'individual'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "hasChecklist": false,
                  "order": 1
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "soleTrader",
                  "name": "Sole Trader",
                  "criteria": {
                     "expr": "entityType == 'soleTrader'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A Sole Trader is a single person business where a person trades in their own legal right using either their own name or a registered business name, and who alone has full liability for the activities of the business. <br>For example: John Smith, or John Smith trading as Smith Plumbing. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20952.aspx\" target=\"_blank\">GAC 952</a> for further information.",
                  "order": 2
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "company.australianUnlisted",
                  "name": "Private/Proprietary Company (Australian)",
                  "criteria": {
                     "expr": "entityType == 'company.australianUnlisted'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A Company legal entity whose shares are not traded on the Australian Stock Exchange (ASX) and must include Pty Ltd (Proprietary Limited) behind it's name. <br>For example: Pears Pty Ltd or ABC Pty Ltd as Kids Haven. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20953.aspx\" target=\"_blank\">GAC 953</a> for further information.",
                  "order": 3
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "company.australianListed",
                  "name": "Public Company (Australian)",
                  "criteria": {
                     "expr": "entityType == 'company.australianListed'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A publicly listed company whose shares are traded on the ASX. Name must include Limited, Ltd or NL (No Liability); and name must not include Proprietary or Pty <br>For example: Basic Concepts Ltd; Orange NL or ABC Limited trading as Kids Haven. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20953.aspx\" target=\"_blank\">GAC 953</a> for further information.",
                  "order": 4
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "trust",
                  "name": "Trust",
                  "criteria": {
                     "expr": "entityType == 'trust'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A Trust is a legal arrangement where the ownership of assets is transferred to the name of a trustee to look after and use those assets for the benefit of a third party (the Beneficiary/Member/Unit Holder). The details of the arrangement are in a Trust Deed. Trusts may be private (e.g. A Family Trust) or public (e.g. a registered managed investment scheme). <br>Trust with company trustee: Strong Pty Ltd ATF the Strong Family Trust or Blue Power Pty Ltd ATF the Power Family Trust trading as Power Building <br>Trust with individual trustee: John & Louise Citizen as trustee for the Citizen Trust or David & Pamela Smith ATF the ABC Superannuation Fund. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20954.aspx\" target=\"_blank\">GAC 954</a> for further information.",
                  "order": 5
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "partnership",
                  "name": "Partnership",
                  "criteria": {
                     "expr": "entityType == 'partnership'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A partnership is two or more individuals (partners) or companies carrying on business in common with a view for profit. There are three different types of partnerships: refer to <a href=\"https://intranet.nab.com.au/Div/A/bpa_keys/Documents/FAQ's.docx\" target='_blank'>KYC FAQs</a> Q.5 to determine which type of partnership your customer is. <br>For example: Jane Citizen and John Williams, Jane Citizen and John Williams trading as Citizen's Flowers or Black Pty Ltd & White Pty Ltd trading as Black & White Chartered Accountants. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20955.aspx\" target=\"_blank\">GAC 955</a> for further information.<br><strong>IMPORTANT:</strong> Services are only provided to Partnerships that are registered with a Partnership Australian Business Number (ABN). If customers are seeking to open accounts as Unregistered Partnerships they should be treated as separate Sole Traders.",
                  "order": 6
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "governmentBody.australian",
                  "name": "Australian Government Body",
                  "criteria": {
                     "expr": "entityType == 'governmentBody.australian'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A government body is a permanent or semi permanent organisation of government that is responsible for the oversight and administration of specific functions. It can be Australian e.g. Local Government, Commonwealth, State or Territory government body. <br>For example: Melbourne City Council or Ranges High School. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20958.aspx\" target=\"_blank\">GAC 958</a> for further information.",
                  "order": 7
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "governmentBody.foreign",
                  "name": "Foreign Government Body",
                  "criteria": {
                     "expr": "entityType == 'governmentBody.foreign'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A government agency is a permanent or semi permanent organisation in the machinery of government that is responsible for the oversight and administration of specific functions. It can be a foreign Government body e.g. the Government of Singapore <br>For example: Utah City Council or Ranges High School. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20958.aspx\" target=\"_blank\">GAC 958</a> for further information.",
                  "order": 8
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "association.incorporated",
                  "name": "Incorporated Association",
                  "criteria": {
                     "expr": "entityType == 'association.incorporated'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "Clubs or community groups, operating not for profit, whose members have decided to give their organisation a formal legal structure, thus becoming a 'legal entity' that is registered with or under the relevant State or Territory Act. An Incorporated Association can be recognised by the word 'Incorporated' or the abbreviation 'Inc.' after its name. For example: ABC Farmers Inc. <br><strong>IMPORTANT:</strong> An Incorporated Association must be able to provide a Unique Identifier Number issued by the body responsible for the incorporator of the association; otherwise it is an Unincorporated Association. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20956.aspx\" target=\"_blank\">GAC 956</a> for further information.",
                  "order": 9
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "association.unincorporated",
                  "name": "Unincorporated Association",
                  "criteria": {
                     "expr": "entityType == 'association.unincorporated'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "Clubs or community groups, operating not for profit and not registered under any Act. For example: ABC Sports Club. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20956.aspx\" target=\"_blank\">GAC 956</a> for further information.",
                  "order": 10
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "registeredCooperative",
                  "name": "Registered Co-operative",
                  "criteria": {
                     "expr": "entityType == 'registeredCooperative'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A Registered Co-operative is a legal entity incorporated under the relevant state or territory act that is controlled and used by its members for whom it was established and who benefit from using its service. It is often referred to as a Co-op. <br>For example: Kangaroo Co-Operative Ltd. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20957.aspx\" target=\"_blank\">GAC 957</a> for further information.",
                  "order": 11
               }
            },
            {
               "point": "app.kyc.entityTypes",
               "config": {
                  "id": "foreignEntity",
                  "name": "Foreign Entity",
                  "criteria": {
                     "expr": "entityType == 'foreignEntity'"
                  },
                  "enabled": true,
                  "lastUpdated": "2017-04-07",
                  "description": "A foreign entity is an organisation that is registered outside of Australia. <br>For example: Cooper BV or Green Couch Co Ltd or Royal Belgian Embassy. Refer to <a href=\"https://intranet.nab.com.au/PP/manual07/Pages/GAC%20959.aspx\" target=\"_blank\">GAC 959</a> for further information.",
                  "order": 12
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.kyc.basePath": "nabone-kyc/components/app.kyc/resources",
                     "app.kyc.checklist.schemaPath": "{{app.kyc.basePath}}/checklist.${checklistId}.schema.jsn",
                     "app.kyc.checklist.layoutPath": "{{app.kyc.basePath}}/checklist.${checklistId}.layout.jsn",
                     "app.kyc.checklist.pdf.layoutPath": "{{app.kyc.basePath}}/checklist.${checklistId}.pdf.layout.jsn",
                     "app.kyc.checklist.common.pdf.layoutPath": "{{app.kyc.basePath}}/checklist.pdf.common.layout.jsn",
                     "app.kyc.checklist.pdfPath": "{{app.kyc.basePath}}/checklist.${checklistId}.${recipient}.pdf",
                     "app.kyc.referenceData": "{{app.kyc.basePath}}/kycChecklistsReferenceData.jsn",
                     "app.kyc.withCredentials": false,
                     "app.kyc.getRefDataUrl": "nabone-kyc/components/app.kyc/resources/kycDetailsReferenceData.jsn",
                     "app.kyc.activeKyc.schema": "nabone-kyc/components/app.kyc/resources/ActiveKyc/forms/ActiveKycSchema.jsn",
                     "app.kyc.activeKyc.layout": "nabone-kyc/components/app.kyc/resources/ActiveKyc/forms/ActiveKycLayout.jsn",
                     "app.kyc.manualKyc.layout.citizenshipCertificateUnder18": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/CitizenCertificateUnder18Layout.jsn",
                     "app.kyc.manualKyc.layout.citizenshipCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/CitizenCertificateLayout.jsn",
                     "app.kyc.manualKyc.layout.under18YearsBirthCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/Under18BirthCertificateLayout.jsn",
                     "app.kyc.manualKyc.layout.birthCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/BirthCertificateLayout.jsn",
                     "app.kyc.manualKyc.layout.passport": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/PassportLayout.jsn",
                     "app.kyc.manualKyc.layout.proofOfAgeCard": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/ProofOfAgeLayout.jsn",
                     "app.kyc.manualKyc.layout.socialSecurityOrPensionCard": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/SocialSecurityLayout.jsn",
                     "app.kyc.manualKyc.layout.driversLicense": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/DriversLicenceLayout.jsn",
                     "app.kyc.manualKyc.layout.idCardPermitOtherAustGovt": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/IdCardOtherAusGovtLayout.jsn",
                     "app.kyc.manualKyc.layout.utilityBillRegistrationNotice": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/UtilityBillLayout.jsn",
                     "app.kyc.manualKyc.layout.licenceOtherInternationalForeign": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/LicenceForeignLayout.jsn",
                     "app.kyc.manualKyc.layout.identityCardForeignGovtUnIssued": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/IdCardForeignLayout.jsn",
                     "app.kyc.manualKyc.layout.brokerIdentified2B": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/BrokerIdentified2BLayout.jsn",
                     "app.kyc.manualKyc.layout.atoNotice": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/AtoNoticeLayout.jsn",
                     "app.kyc.manualKyc.layout.medicare": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/MedicareLayout.jsn",
                     "app.kyc.manualKyc.layout.recipientAbstudyOrAustudy": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/RecipientAbstudyOrAustudyLayout.jsn",
                     "app.kyc.manualKyc.layout.ratesNotice": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/RatesNoticeLayout.jsn",
                     "app.kyc.manualKyc.layout.licenceAustralianGovtIssue": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/LicenceAusGovLayout.jsn",
                     "app.kyc.manualKyc.layout.recentArrival": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/TravelDocumentLayout.jsn",
                     "app.kyc.manualKyc.layout.u18InternationalTravelDocument": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/U18InternationalTravelDocumentLayout.jsn",
                     "app.kyc.manualKyc.layout.jbWereCustomer": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/CustomerDocumentLayout.jsn",
                     "app.kyc.manualKyc.layout.bnzaCustomer": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/CustomerDocumentLayout.jsn",
                     "app.kyc.manualKyc.layout.deathCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/DeathCertificateLayout.jsn",
                     "app.kyc.manualKyc.layout.indigenousCommunityProofOfIdCard": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/IndigenousCommunityIdLayout.jsn",
                     "app.kyc.manualKyc.layout.writtenReference": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/WrittenReferenceLayout.jsn",
                     "app.kyc.manualKyc.layout.indTorresStraitIslandersCommLetter": "nabone-kyc/components/app.kyc/resources/ManualKyc/forms/CommsLetterLayout.jsn",
                     "app.kyc.manualKyc.schema.citizenshipCertificateUnder18": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/CitizenCertificateUnder18Schema.jsn",
                     "app.kyc.manualKyc.schema.citizenshipCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/CitizenCertificateSchema.jsn",
                     "app.kyc.manualKyc.schema.under18YearsBirthCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/Under18BirthCertificateSchema.jsn",
                     "app.kyc.manualKyc.schema.birthCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/BirthCertificateSchema.jsn",
                     "app.kyc.manualKyc.schema.passport": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/PassportSchema.jsn",
                     "app.kyc.manualKyc.schema.proofOfAgeCard": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/ProofOfAgeSchema.jsn",
                     "app.kyc.manualKyc.schema.socialSecurityOrPensionCard": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/SocialSecuritySchema.jsn",
                     "app.kyc.manualKyc.schema.driversLicense": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/DriversLicenceSchema.jsn",
                     "app.kyc.manualKyc.schema.idCardPermitOtherAustGovt": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/IdCardOtherAusGovtSchema.jsn",
                     "app.kyc.manualKyc.schema.utilityBillRegistrationNotice": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/UtilityBillSchema.jsn",
                     "app.kyc.manualKyc.schema.licenceOtherInternationalForeign": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/LicenceForeignSchema.jsn",
                     "app.kyc.manualKyc.schema.identityCardForeignGovtUnIssued": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/IdCardForeignSchema.jsn",
                     "app.kyc.manualKyc.schema.brokerIdentified2B": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/BrokerIdentified2BSchema.jsn",
                     "app.kyc.manualKyc.schema.atoNotice": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/AtoNoticeSchema.jsn",
                     "app.kyc.manualKyc.schema.medicare": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/MedicareSchema.jsn",
                     "app.kyc.manualKyc.schema.ratesNotice": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/RatesNoticeSchema.jsn",
                     "app.kyc.manualKyc.schema.recipientAbstudyOrAustudy": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/RecipientAbstudyOrAustudySchema.jsn",
                     "app.kyc.manualKyc.schema.licenceAustralianGovtIssue": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/LicenceAusGovSchema.jsn",
                     "app.kyc.manualKyc.schema.recentArrival": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/TravelDocumentSchema.jsn",
                     "app.kyc.manualKyc.schema.u18InternationalTravelDocument": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/U18InternationalTravelDocumentSchema.jsn",
                     "app.kyc.manualKyc.schema.jbWereCustomer": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/CustomerDocumentSchema.jsn",
                     "app.kyc.manualKyc.schema.bnzaCustomer": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/CustomerDocumentSchema.jsn",
                     "app.kyc.manualKyc.schema.deathCertificate": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/DeathCertificateSchema.jsn",
                     "app.kyc.manualKyc.schema.indigenousCommunityProofOfIdCard": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/IndigenousCommunityIdSchema.jsn",
                     "app.kyc.manualKyc.schema.writtenReference": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/WrittenReferenceSchema.jsn",
                     "app.kyc.manualKyc.schema.indTorresStraitIslandersCommLetter": "nabone-kyc/components/app.kyc/resources/ManualKyc/schema/CommsLetterSchema.jsn"
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "eKYC Submitted",
                  "topic": "app.kyc.active.submit"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "100 Point ID KYC Submitted",
                  "topic": "app.kyc.manual.submit"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "KYC Confirmed - On Boarding Complete",
                  "topic": "app.kyc.confirmed"
               }
            }
         ]
      },
      {
         "id": "app.library.kyc",
         "name": "KYC library",
         "dependencies": [
            "nabone.forms.efc",
            "nabone.pdf2",
            "app.kyc"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-kyc/components/app.library.kyc/app.library.kyc.min.js?1547009616366",
                  "nabone-kyc/components/app.library.kyc/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.library.kyc.documents",
               "name": "KYC Relevant Documents",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string"
                     },
                     "name": {
                        "type": "string"
                     },
                     "description": {
                        "type": "string"
                     },
                     "lastUpdated": {
                        "type": "string",
                        "description": "Date last updated in yyyy-MM-dd format"
                     },
                     "enabled": {
                        "type": "boolean",
                        "default": true
                     },
                     "filename": {
                        "type": "string"
                     },
                     "url": {
                        "type": "string"
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "id",
                     "name",
                     "lastUpdated",
                     "order"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "filename"
                        ]
                     },
                     {
                        "required": [
                           "url"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.library.kyc",
                  "title": "KYC Checklists",
                  "contentDirective": "kyc-library",
                  "routes": [
                     "/library/kyc"
                  ],
                  "maxInstances": 1,
                  "appData": {
                     "enableJumpLinks": false
                  }
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "kyc.checklists",
                  "name": "KYC Checklists",
                  "route": "/library/kyc",
                  "order": 1
               }
            },
            {
               "point": "app.library.kyc.documents",
               "config": {
                  "id": "identifying-beneficial-owners",
                  "filename": "nabone-kyc/components/app.kyc/resources/identifying-beneficial-owners.pdf",
                  "name": "How to identify beneficial owner",
                  "lastUpdated": "2017-04-07",
                  "order": 1
               }
            },
            {
               "point": "app.library.kyc.documents",
               "config": {
                  "id": "general-manuals",
                  "url": "https://intranet.nab.com.au/Div/A/bpa_keys/Pages/9100.aspx",
                  "name": "General Manuals",
                  "lastUpdated": "2017-04-07",
                  "order": 2
               }
            },
            {
               "point": "app.library.kyc.documents",
               "config": {
                  "id": "kyc-faq",
                  "filename": "https://intranet.nab.com.au/Div/A/bpa_keys/Documents/FAQ's.docx",
                  "name": "KYC FAQs",
                  "lastUpdated": "2017-04-07",
                  "order": 3
               }
            },
            {
               "point": "app.library.kyc.documents",
               "config": {
                  "id": "smo-nomination",
                  "filename": "nabone-kyc/components/app.kyc/resources/smo-nomination.docx",
                  "name": "Example SMO nomination letter",
                  "lastUpdated": "2017-04-07",
                  "order": 4
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Banker checklist opened",
                  "topic": "app.library.kyc.bankerChecklistOpened"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Customer checklist opened",
                  "topic": "app.library.kyc.customerChecklistOpened"
               }
            }
         ]
      },
      {
         "id": "nabone.layout",
         "name": "nabONE Layout",
         "dependencies": [
            "nabone.eval"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-layout/components/nabone.layout/nabone.layout.min.js?1547009616366"
               ]
            }
         ],
         "plugins": []
      },
      {
         "id": "lib.ngAria",
         "name": "Angular Aria",
         "modules": [
            {
               "files": [
                  "nabone-libs/components/lib.ngAria/resources/angular-aria.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngCookies",
         "name": "Angular Cookies",
         "modules": [
            {
               "files": [
                  "nabone-libs/components/lib.ngCookies/resources/angular-cookies.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngResource",
         "name": "Angular Resource",
         "modules": [
            {
               "files": [
                  "nabone-libs/components/lib.ngResource/resources/angular-resource.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngRoute",
         "name": "Angular Route",
         "modules": [
            {
               "files": [
                  "nabone-libs/components/lib.ngRoute/resources/angular-route.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.ngSanitize",
         "name": "Angular Resource",
         "modules": [
            {
               "files": [
                  "nabone-libs/components/lib.ngSanitize/resources/angular-sanitize.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.preStartup",
         "name": "Placeholder component for libraries that are required before bootstrapping",
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-libs/components/lib.preStartup/resources/libraries.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "lib.markdownit",
         "name": "nabONE Markdown-it repack",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-markdown/components/lib.markdownit/lib.markdownit.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.markdown",
         "name": "nabONE Markdown Services",
         "dependencies": [
            "lib.highlightjs",
            "lib.markdownit"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-markdown/components/nabone.markdown/nabone.markdown.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "api.nps",
         "name": "NPS API",
         "dependencies": [
            "api.nabone",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/api.nps/api.nps.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "dev": {
                     "api.nps.baseUrl": "http://nigsa768894.aurdev.national.com.au:9082/NPS-web/",
                     "api.nabInt.baseUrl": "https://dev-nabone.ausdev.thenational.com"
                  },
                  "qa": {
                     "api.nps.baseUrl": "https://qa-nabone.ausdev.thenational.com/internal/",
                     "api.nabInt.baseUrl": "https://qa-nabone.ausdev.thenational.com"
                  },
                  "sit": {
                     "api.nps.baseUrl": "https://sit1-nabone.ausdev.thenational.com/internal/",
                     "api.nabInt.baseUrl": "https://sit1-nabone.ausdev.thenational.com"
                  },
                  "ppte": {
                     "api.nps.baseUrl": "http://localhost:3000/",
                     "api.nabInt.baseUrl": "http://localhost:3000/"
                  },
                  "prd": {
                     "api.nps.baseUrl": "https://nabone.aus.thenational.com/internal/",
                     "api.nabInt.baseUrl": "https://nabone.aus.thenational.com"
                  }
               }
            }
         ]
      },
      {
         "id": "api.nps.ui",
         "name": "NPS API - Test UI Plugin",
         "dependencies": [
            "api.nps",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.nps",
                  "service": "api.nps.NpsApiService",
                  "description": "NPS"
               }
            }
         ]
      },
      {
         "id": "app.admin.nps",
         "name": "Net Promoter Score",
         "dependencies": [
            "api.nps",
            "app.nps",
            "nabone.ui.modal",
            "lib.bootstrap"
         ],
         "roles": [
            "NAB-Application-NPS-ADMIN"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.admin.nps/app.admin.nps.min.js?1547009616366",
                  "nabone-nps/components/app.admin.nps/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.admin.nps",
                  "title": "NPS Admin - Dashboard",
                  "contentUrl": "nabone-nps/components/app.admin.nps/partials/adminIndex.html",
                  "routes": [
                     "/npsAdmin"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "NPS Admin",
                  "widgetId": "nps.admin",
                  "displayOrder": 5,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-nps/components/app.admin.nps/partials/adminIndex.html",
                  "widgetData": {
                     "fillWindow": true
                  },
                  "tileConfig": {
                     "label": "NPS Admin",
                     "backgroundImage": "nabone-nps/components/app.admin.nps/resources/nps-admin-tile.png",
                     "tileClass": "tile-md",
                     "description": "Manage notifications, call backs and view audit trail for the NPS Dashboard",
                     "order": 5
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.business",
         "name": "Net Promoter Score - Business",
         "dependencies": [
            "app.nps"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.business/app.nps.business.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Business",
                  "contentUrl": "nabone-nps/components/app.nps.business/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "BUSINESS",
                     "icon": "briefcase"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.callCentre",
         "name": "Net Promoter Score - Call Centre",
         "dependencies": [
            "app.nps"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.callCentre/app.nps.callCentre.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Call Centre",
                  "contentUrl": "nabone-nps/components/app.nps.callCentre/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "CONTACTCENTRE",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.cob",
         "name": "Net Promoter Score - Change of Banker",
         "dependencies": [
            "app.nps"
         ],
         "roles": [
            "NAB-Application-NPS-BB",
            "NAB-Application-NPS-ADMIN",
            "NAB-Application-NPS-OPS"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.cob/app.nps.cob.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "app.nps.digital",
         "name": "Net Promoter Score - Digital",
         "dependencies": [
            "app.nps"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.digital/app.nps.digital.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Digital",
                  "contentUrl": "nabone-nps/components/app.nps.digital/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "DIGITAL",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.episode",
         "name": "Net Promoter Score - Episode",
         "dependencies": [
            "app.nps"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.episode/app.nps.episode.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Episode",
                  "contentUrl": "nabone-nps/components/app.nps.episode/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "EPISODE",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.home",
         "name": "Net Promoter Score - Home",
         "dependencies": [
            "app.nps"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.home/app.nps.home.min.js?1547009616366",
                  "nabone-nps/components/app.nps.home/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "applicationId": "app.nps.home",
                  "title": "NPS Home",
                  "contentUrl": "nabone-nps/components/app.nps.home/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "HOME",
                     "icon": "cog"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.fcs",
         "name": "Net Promoter Score - Financial Crime Services",
         "dependencies": [
            "app.nps",
            "app.nps.home"
         ],
         "roles": [],
         "modules": [],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Financial Crimes",
                  "contentUrl": "nabone-nps/components/app.nps.home/partials/FCSLayoutSelector.html",
                  "widgetData": {
                     "path": "FCS",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.msb",
         "name": "Net Promoter Score - Micro and Small Business",
         "dependencies": [
            "app.nps",
            "app.nps.home"
         ],
         "roles": [],
         "modules": [],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Micro and Small Business",
                  "contentUrl": "nabone-nps/components/app.nps.home/partials/MSBLayoutSelector.html",
                  "widgetData": {
                     "path": "MSB",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.wealthdigital",
         "name": "Net Promoter Score - Wealth Digital",
         "dependencies": [
            "app.nps",
            "app.nps.home"
         ],
         "roles": [],
         "modules": [],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Wealth Digital",
                  "contentUrl": "nabone-nps/components/app.nps.home/partials/WealthDigitalLayoutSelector.html",
                  "widgetData": {
                     "path": "WEALTHDIGITAL",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.nabPrivate",
         "name": "Net Promoter Score - NAB Private",
         "dependencies": [
            "app.nps"
         ],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.nabPrivate/app.nps.nabPrivate.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS NAB Private",
                  "contentUrl": "nabone-nps/components/app.nps.nabPrivate/partials/NabPrivateLayoutSelector.html",
                  "widgetData": {
                     "path": "NABPRIVATE",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.operations",
         "name": "Net Promoter Score - Operations",
         "dependencies": [
            "app.nps"
         ],
         "roles": [
            "NAB-Application-NPS-ADMIN",
            "NAB-Application-NPS-OPS"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.operations/app.nps.operations.min.js?1547009616366",
                  "nabone-nps/components/app.nps.operations/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "applicationId": "app.nps.operations",
                  "title": "NPS Operations",
                  "contentUrl": "nabone-nps/components/app.nps.operations/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "operations",
                     "icon": "cog"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps.retail",
         "name": "Net Promoter Score - Retail",
         "dependencies": [
            "app.nps"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps.retail/app.nps.retail.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.nps.core",
               "config": {
                  "title": "NPS Retail",
                  "contentUrl": "nabone-nps/components/app.nps.retail/partials/LayoutSelector.html",
                  "widgetData": {
                     "path": "RETAIL",
                     "icon": "tags"
                  }
               }
            }
         ]
      },
      {
         "id": "app.nps",
         "name": "Net Promoter Score",
         "dependencies": [
            "api.nps",
            "lib.highcharts",
            "api.nabone",
            "lib.ngTable",
            "lib.bootstrap",
            "nabone.utils"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-nps/components/app.nps/app.nps.min.js?1547009616366",
                  "nabone-nps/components/app.nps/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "NPS Dashboard",
                     "path": "apps",
                     "icon": "nps-promoter",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/nps"
                           }
                        }
                     },
                     "order": 60
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.nps",
                  "title": "NPS Dashboard",
                  "contentUrl": "nabone-nps/components/app.nps/partials/npsDashboardView.html",
                  "routes": [
                     "/nps",
                     "/nps/:domain",
                     "/nps/:domain/:BUID"
                  ],
                  "maxInstances": 1
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "nps.hub",
                  "name": "NPS Hub",
                  "linkUrl": "https://intranet.nab.com.au/Customers/NPS/Pages/Net%20Promoter%20System.aspx"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-nps/components/app.nps/resources/help/npsHelpContent.jsn",
                  "componentId": "app.nps"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "NPS Dashboard"
               }
            }
         ],
         "pluginPoints": [
            {
               "id": "app.nps.core",
               "name": "NPS Container"
            }
         ]
      },
      {
         "id": "app.customer.individualOnboarding",
         "name": "Individual Onboarding",
         "dependencies": [
            "api.customer",
            "app.customer",
            "app.customer.onboarding.individual",
            "app.customer.profile",
            "api.customer.profile",
            "nabone.alerts",
            "nabone.schema",
            "nabone.layout",
            "nabone.utils",
            "nabone.spinner",
            "nabone.forms.core"
         ],
         "roles": [
            "NABONE-Applications-IndividualOnboarding",
            "NABONE-Applications-UpdateCustomerDetails",
            "Digital Business Onboarding Pilot",
            "Digital Business Onboarding Pilot Admin",
            "NABONE-Applications-DBOX-Banker"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-onboarding-individual/components/app.customer.individualOnboarding/app.customer.individualOnboarding.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Individual Onboarding",
                     "path": "customerActivities",
                     "config": {
                        "description": "Onboard new individuals including KYC and viewing a previously saved application.",
                        "icon": "user",
                        "handler": {
                           "config": {
                              "route": "/customer/onboarding-individual"
                           }
                        },
                        "attributes": {
                           "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'temp' && (customer.isTemporary && customer.customerType === 'person')"
                        }
                     },
                     "order": 201
                  }
               }
            },
            {
               "point": "app.customer.components",
               "config": {
                  "title": "Individual Onboarding",
                  "applicationId": "customer.onboarding.individual",
                  "contentDirective": "individual-onboarding",
                  "context": {
                     "customerDetails": "custCtrl.customer",
                     "updateProspect": "custCtrl.onUpdateProspect()",
                     "closeInstanceNoConfirm": "componentGroupCtrl.closeInstance(instance.instanceId, false)",
                     "closeInstanceConfirm": "componentGroupCtrl.closeInstance(instance.instanceId, true)"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/customer/onboarding-individual",
                     "/customer/:ID/onboarding-individual"
                  ],
                  "attributes": {
                     "visibleIf": "customerIdData.lineOfBusiness == 'nab' && customerIdData.idSource == 'temp' && (customer.isTemporary && customer.customerType === 'person')"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.customer.individualOnboarding.och.poll.limit": 60000,
                     "app.customer.individualOnboarding.och.poll.interval": 4000
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Start Individual Onboarding",
                  "topic": "app.customer.ivy.start.individual"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Submit Individual for Onboarding",
                  "topic": "app.customer.ivy.submit.individual"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Submit Individual for Onboarding Failed",
                  "topic": "app.customer.ivy.submit.individual.failure"
               }
            }
         ],
         "pluginPoints": []
      },
      {
         "id": "app.onboarding.refData",
         "name": "Onboarding Reference Data",
         "activator": "app.onboarding.refData.OnboardingRefDataActivatorService",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-onboarding-refdata/components/app.onboarding.refdata/module.js?1547009616366",
                  "nabone-onboarding-refdata/components/app.onboarding.refdata/types.js?1547009616366",
                  "nabone-onboarding-refdata/components/app.onboarding.refdata/services/OnboardingRefDataActivatorService.js?1547009616366",
                  "nabone-onboarding-refdata/components/app.onboarding.refdata/services/OnboardingRefDataService.js?1547009616366",
                  "nabone-onboarding-refdata/components/app.onboarding.refdata/component.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.onboarding.refData.basePath": "nabone-onboarding-refdata/components/app.onboarding.refdata/resources",
                     "app.onboarding.refData.withCredentials": false,
                     "app.onboarding.refData.getRefDataUrl": "{{app.onboarding.refData.basePath}}/onboardingRefData.jsn"
                  }
               }
            }
         ]
      },
      {
         "id": "api.pdt",
         "name": "Pricing Discovery Tool API",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-pdt/components/api.pdt/api.pdt.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.pdt.baseUrl": "{{api.gateway.baseUrl}}/nab/facilityPricing",
                     "api.pdt.adminBaseUrl": "{{api.pdt.baseUrl}}/administration",
                     "api.pdt.getLockedUsersUrl": "{{api.pdt.adminBaseUrl}}/lockedUsers?v=1",
                     "api.pdt.getUnLockingUrl": "{{api.pdt.adminBaseUrl}}/unlockUsers?v=1",
                     "api.pdt.fileUploadBaseUrl": "{{api.pdt.adminBaseUrl}}/referenceDataFile",
                     "api.pdt.fileUploadValidationUrl": "{{api.pdt.fileUploadBaseUrl}}/VALIDATE?v=1",
                     "api.pdt.fileUploadSaveUrl": "{{api.pdt.fileUploadBaseUrl}}/SAVE?v=1",
                     "api.pdt.authenticationCheckUrl": "{{api.pdt.adminBaseUrl}}/isUserAuthorised?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "app.admin.pricingDiscoveryTool",
         "name": "Pricing Discovery Tool Admin",
         "dependencies": [
            "nabone.forms",
            "nabone.form.view",
            "nabone.efcv1.renderer",
            "app.pricingDiscoveryTool",
            "nabone.notifications",
            "api.pdt"
         ],
         "roles": [
            "NAB-Application-PDT-Admin-Group"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-pdt/components/app.admin.pricingDiscoveryTool/app.admin.pricingDiscoveryTool.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.container.apps.pricingDiscoveryTool.admin",
               "name": "pricing Discovery Tool Admin"
            }
         ],
         "plugins": [
            {
               "point": "app.admin.widgets",
               "config": {
                  "title": "Pricing Discovery Tool Admin",
                  "widgetId": "pdt.admin",
                  "displayOrder": 6,
                  "launcherService": "app.admin.AdminWidgetMenuLauncher",
                  "contentUrl": "nabone-pdt/components/app.admin.pricingDiscoveryTool/partials/adminConsole.html",
                  "widgetData": {
                     "fillWindow": true
                  },
                  "tileConfig": {
                     "label": "PDT Admin",
                     "backgroundImage": "nabone-platform/components/app.admin/resources/pdt-admin-tile.png",
                     "tileClass": "tile-md",
                     "description": "Administer PDT reference data and unlock users.",
                     "order": 6
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.admin.pricingDiscoveryTool",
                  "title": "Admin - Price Discovery",
                  "contentUrl": "nabone-pdt/components/app.admin.pricingDiscoveryTool/partials/adminConsole.html",
                  "routes": [
                     "/pricingToolAdmin"
                  ],
                  "maxInstances": 1
               }
            }
         ]
      },
      {
         "id": "app.pricingDiscoveryTool",
         "name": "Price Discovery Tool",
         "dependencies": [
            "nabone.components",
            "nabone.form.view",
            "nabone.forms",
            "nabone.utils",
            "lib.ngUiSelect",
            "api.efc1",
            "api.user"
         ],
         "roles": [
            "NAB-Application-PDT-User-Group"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-pdt/components/app.pricingDiscoveryTool/app.pricingDiscoveryTool.min.js?1547009616366",
                  "nabone-pdt/components/app.pricingDiscoveryTool/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.container.apps.pricingDiscoveryTool",
               "name": "Price Discovery Tool"
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Price Discovery Tool",
                     "path": "apps",
                     "icon": "chart-line",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/pricingTool"
                           }
                        }
                     },
                     "order": 80
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.pricingDiscoveryTool",
                  "title": "Price Discovery",
                  "contentUrl": "nabone-pdt/components/app.pricingDiscoveryTool/partials/pricingDiscoveryTool.html",
                  "routes": [
                     "/pricingTool"
                  ],
                  "maxInstances": 3
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "pdt.userGuide",
                  "name": "Pricing Discovery Tool User Guide",
                  "linkUrl": "https://intranet.nab.com.au/Div/A/site196/siteassets/Price%20Discovery%20Tool%20User%20Guide%20Final.pdf"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "pdt.faq",
                  "name": "Pricing Discovery Tool FAQ",
                  "linkUrl": "https://intranet.nab.com.au/Div/A/site196/Documents/Price%20Discovery%20FAQ%27s.pdf"
               }
            },
            {
               "point": "app.library.content",
               "config": {
                  "id": "pdt.quickReference",
                  "name": "Pricing Discovery Tool Quick Reference Guide",
                  "linkUrl": "https://intranet.nab.com.au/Div/A/site196/siteassets/PDT%20QRG.pdf"
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-pdt/components/app.pricingDiscoveryTool/resources/help/pdtHelpContent.jsn",
                  "componentId": "app.pricingDiscoveryTool"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Price Discovery Tool"
               }
            }
         ]
      },
      {
         "id": "one.platform.menu",
         "name": "ONE Menu Manager",
         "activator": "one.platform.MenuManager",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform-plugins/components/one.platform.menu/one.platform.menu.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "one.platform.menus",
               "name": "Menu",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "action": {
                        "type": "object",
                        "properties": {
                           "label": {
                              "description": "A label for the menu option",
                              "type": "string"
                           },
                           "path": {
                              "description": "The path for the menu item",
                              "type": "string"
                           },
                           "icon": {
                              "description": "The icon to display",
                              "type": "string"
                           },
                           "order": {
                              "description": "The display order for the menu item",
                              "type": "number"
                           },
                           "config": {
                              "type": "object",
                              "properties": {
                                 "handler": {
                                    "$ref": "#/definitions/actionHandler"
                                 }
                              }
                           }
                        },
                        "additionalProperties": false,
                        "required": [
                           "label",
                           "path"
                        ]
                     },
                     "menu": {
                        "type": "object",
                        "properties": {
                           "label": {
                              "description": "A label for the menu option",
                              "type": "string"
                           },
                           "path": {
                              "description": "The path for the menu item",
                              "type": "string"
                           },
                           "icon": {
                              "description": "The icon to display",
                              "type": "string"
                           },
                           "order": {
                              "description": "The display order for the menu item",
                              "type": "number"
                           },
                           "config": {
                              "type": "object"
                           }
                        },
                        "additionalProperties": false,
                        "required": [
                           "path"
                        ]
                     }
                  },
                  "definitions": {
                     "actionHandler": {
                        "description": "Action handler configuration",
                        "type": "object",
                        "properties": {
                           "service": {
                              "description": "An angular service name implementing IActionHandler that will handle the option action",
                              "type": "string"
                           },
                           "config": {
                              "description": "Configuration to pass to the action handler - specific to the handler implementation",
                              "type": "object",
                              "properties": {}
                           }
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "api.directory",
         "name": "NAB Global Directory API",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.cache"
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "dev": {
                     "api.directory.profilePictureUrl": "nabone-platform/resources/img/profile_picture_placeholder.gif"
                  },
                  "default": {
                     "api.directory.profilePictureUrl": "https://www.au.thenational.com/NIWA6/directory/photo.do?dn=uid=${userId},ou=People,o=AFS,o=NAG,dc=thenational,dc=com"
                  }
               }
            }
         ]
      },
      {
         "id": "api.eesg",
         "name": "EESG Gateway API and Configuration",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.eesg/api.eesg.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.eesg.baseUrl": "https://apistaff.nab.com.au",
                     "api.eesg.alt.baseUrls": [],
                     "api.eesg.appKey": "771cbae7-81bc-4599-ad73-a6f83ae14697",
                     "api.eesg.planningITNabId": "DL0030",
                     "api.eesg.planningITName": "nabOne",
                     "api.eesg.baseUrlSchemaGMC": "https://cd-esg-empst01-t3-api.esg.cd.non.whu.nab.com.au",
                     "api.eesg.baseUrlSchema": "{{api.eesg.baseUrl}}",
                     "api.eesg.getSchemasUrl": "{{api.eesg.baseUrlSchema}}/info/nabapi/schemas?v=1",
                     "api.eesg.getSchemaUrl": "{{api.eesg.baseUrlSchema}}/info/nabapi/schema/${name}?v=1",
                     "api.eesg.healthcheckUrl": "{{api.eesg.baseUrl}}/healthcheck",
                     "api.eesg.retry.APICodes": "API-521",
                     "api.eesg.retry.count": 3,
                     "api.eesg.retry.interval": 1000
                  },
                  "dev": {
                     "api.eesg.baseUrl": "https://apistaff-sit4.nabdev.com.au"
                  },
                  "qa": {
                     "api.eesg.baseUrl": "https://apistaff-sit4.nabdev.com.au"
                  },
                  "sit5": {
                     "api.eesg.baseUrl": "https://apistaff-sit5.nabdev.com.au"
                  },
                  "sit4": {
                     "api.eesg.baseUrl": "https://apistaff-sit4.nabdev.com.au"
                  },
                  "sit3": {
                     "api.eesg.baseUrl": "https://apistaff-sit3.nabdev.com.au"
                  },
                  "sit2": {
                     "api.eesg.baseUrl": "https://apistaff-sit2.nabdev.com.au"
                  },
                  "sit1": {
                     "api.eesg.baseUrl": "https://apistaff-sit1.nabdev.com.au"
                  },
                  "ppte": {
                     "api.eesg.baseUrl": "https://apistaff-ppte.nabtest.com.au"
                  },
                  "prd": {
                     "api.eesg.baseUrl": "https://apistaff.nab.com.au"
                  }
               }
            }
         ]
      },
      {
         "id": "api.eesg.ui",
         "name": "EESG Gateway API and Configuration - Test UI Plugin",
         "dependencies": [
            "api.eesg",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.eesg",
                  "service": "api.eesg.EesgApiService",
                  "description": "EESG"
               }
            }
         ]
      },
      {
         "id": "api.efc1",
         "name": "Enterprise Forms Capability v1 API",
         "dependencies": [
            "nabone.platform",
            "nabone.cache",
            "nabone.api",
            "nabone.env"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.efc1/api.efc1.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.efc1.getFormInstanceUrl": "{{api.gateway.baseUrl}}/nab/forms/instance/formId/${formId}?v=1",
                     "api.efc1.submitUrl": "{{api.gateway.baseUrl}}/nab/forms/instance/instanceId/${id}?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "api.efc1.ui",
         "name": "Enterprise Forms Capability v1 API - Test UI Plugin",
         "dependencies": [
            "api.efc1",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.efc1",
                  "service": "api.efc1.Efc1ApiService",
                  "description": "EFC1"
               }
            }
         ]
      },
      {
         "id": "api.efc2",
         "name": "Enterprise Forms Capability v2 API",
         "dependencies": [
            "nabone.platform",
            "api.eesg",
            "nabone.cache",
            "nabone.api",
            "nabone.env",
            "lib.efcSdk"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.efc2/api.efc2.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.efc2.getFormDefinitionUrl": "{{api.eesg.baseUrl}}/forms/nab/form/${formId}/definition?v=2",
                     "api.efc2.getFormDefinitionWithLayoutUrl": "{{api.eesg.baseUrl}}/forms/nab/form/${formId}/definition/${layoutId}?v=2",
                     "api.efc2.getFormLayoutUrl": "{{api.eesg.baseUrl}}/forms/nab/form/${formId}/layout/${layoutId}?v=2",
                     "api.efc2.createFormInstanceUrl": "{{api.eesg.baseUrl}}/forms/nab/instance?v=2",
                     "api.efc2.updateFormInstanceUrl": "{{api.eesg.baseUrl}}/forms/nab/instance/{instanceId}?v=2",
                     "api.efc2.getFormDefinition.url": "{{api.eesg.baseUrl}}/forms/nab/form/{formId}/definition/{layoutId}?v=2",
                     "api.efc2.createFormInstance.url": "{{api.eesg.baseUrl}}/forms/nab/instance?v=2",
                     "api.efc2.updateFormInstance.url": "{{api.eesg.baseUrl}}/forms/nab/instance/{instanceId}?v=2"
                  }
               }
            }
         ]
      },
      {
         "id": "api.efc2.ui",
         "name": "Enterprise Forms Capability v2 API - Test UI Plugin",
         "dependencies": [
            "api.efc2",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.efc2",
                  "service": "api.efc2.Efc2ApiService",
                  "description": "EFC2"
               }
            }
         ]
      },
      {
         "id": "api.ela",
         "name": "Enhanced Lending Application API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.ela/api.ela.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.ela.baseUrl": "{{api.gateway.baseUrl}}/nab/lending/"
                  }
               }
            }
         ]
      },
      {
         "id": "api.ela.ui",
         "name": "Enhanced Lending Application API - Test UI Plugin",
         "dependencies": [
            "api.ela",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.ela",
                  "service": "api.ela.ElaApiService",
                  "description": "Lending"
               }
            }
         ]
      },
      {
         "id": "api.gateway",
         "name": "Internal Gateway Config",
         "dependencies": [
            "nabone.env",
            "nabone.cache"
         ],
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.gateway/api.gateway.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.gateway.heartbeatUrl": "{{api.gateway.baseUrl}}/heartbeat"
                  },
                  "local": {
                     "api.gateway.baseUrl": "http://localhost:3000/internal"
                  },
                  "ci": {
                     "api.gateway.baseUrl": "http://10.163.105.85/test"
                  },
                  "dev": {
                     "api.gateway.baseUrl": "https://dev-nabone.ausdev.thenational.com/internal"
                  },
                  "qa": {
                     "api.gateway.baseUrl": "https://qa-nabone.ausdev.thenational.com/internal"
                  },
                  "sit1": {
                     "api.gateway.baseUrl": "https://sit1-nabone.ausdev.thenational.com/internal"
                  },
                  "sit2": {
                     "api.gateway.baseUrl": "https://sit2-nabone.ausdev.thenational.com/internal"
                  },
                  "sit3": {
                     "api.gateway.baseUrl": "https://sit3-nabone.ausdev.thenational.com/internal"
                  },
                  "sit4": {
                     "api.gateway.baseUrl": "https://sit4-nabone.ausdev.thenational.com/internal"
                  },
                  "sit5": {
                     "api.gateway.baseUrl": "https://sit5-nabone.ausdev.thenational.com/internal"
                  },
                  "ppte": {
                     "api.gateway.baseUrl": "https://ppte-nabone.austest.thenational.com/internal"
                  },
                  "prd": {
                     "api.gateway.baseUrl": "https://nabone.aus.thenational.com/internal"
                  }
               }
            }
         ]
      },
      {
         "id": "api.gateway.statusProvider",
         "name": "Internal Gateway Config Status Provider",
         "dependencies": [
            "api.gateway",
            "nabone.onlineStatus"
         ],
         "plugins": [
            {
               "point": "nabone.onlineStatus.provider",
               "config": {
                  "namespace": "nabONE",
                  "service": "api.gateway.GatewayApiService",
                  "description": "nabONE API"
               }
            }
         ]
      },
      {
         "id": "api.nabone",
         "name": "nabONE API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.nabone.baseUrl": "{{api.gateway.baseUrl}}/nab/application/nabone/"
                  },
                  "dev": {
                     "api.nabone.baseUrl": "{{api.gateway.baseUrl}}/nab/application/nabone/"
                  },
                  "sit": {
                     "api.nabone.baseUrl": "{{api.gateway.baseUrl}}/nab/application/nabone/"
                  },
                  "qa": {
                     "api.nabone.baseUrl": "{{api.gateway.baseUrl}}/nab/application/nabone/"
                  },
                  "prd": {
                     "api.nabone.baseUrl": "{{api.gateway.baseUrl}}/nab/application/nabone/"
                  }
               }
            }
         ]
      },
      {
         "id": "api.nabone.ui",
         "name": "nabONE API - Test UI Plugin",
         "dependencies": [
            "api.nabone",
            "nabone.api.test"
         ],
         "plugins": [
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.nabone",
                  "service": "api.nabone.NaboneApiService",
                  "description": "nabONE"
               }
            }
         ]
      },
      {
         "id": "api.resource",
         "name": "nabONE Resource Loader",
         "dependencies": [
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.resource/api.resource.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "api.splunk",
         "name": "Splunk HTTP Event Collector API",
         "dependencies": [
            "nabone.env",
            "nabone.cache"
         ],
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.splunk/api.splunk.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.splunk.collector.endpoint": "https://splunk-hfa.splunk.ext.national.com.au:8088/services/collector/event",
                     "api.splunk.collector.authToken": "8CEC47BB-27FC-464B-9ED4-DF4312F507C6"
                  },
                  "prd": {
                     "api.splunk.collector.endpoint": "https://splunk-hfa.splunk.ext.national.com.au:8088/services/collector/event",
                     "api.splunk.collector.authToken": "E5070331-89CF-4D51-9A7D-D3B32CAE8B39"
                  }
               }
            }
         ]
      },
      {
         "id": "api.user",
         "name": "Deprecated (nabINT) User Details API",
         "dependencies": [
            "nabone.api",
            "nabone.env",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/api.user/api.user.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.user.membershipUrl": "{{api.gateway.baseUrl}}/user/membership?v=1"
                  }
               }
            }
         ]
      },
      {
         "id": "app.devtoolbox",
         "name": "Developer Toolbox",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/app.devtoolbox/app.devtoolbox.min.js?1547009616366",
                  "nabone-platform/components/app.devtoolbox/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Developer Toolbox",
                     "path": "apps",
                     "icon": "keyboard",
                     "order": 150,
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/devtoolbox"
                           }
                        }
                     }
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.app.devtoolbox",
                  "title": "Developer Toolbox",
                  "contentUrl": "nabone-platform/components/app.devtoolbox/partials/devToolbox.html",
                  "routes": [
                     "/devtoolbox"
                  ],
                  "maxInstances": 1,
                  "appData": {
                     "enableJumpLinks": false
                  }
               }
            },
            {
               "point": "app.devtoolbox.categories",
               "config": {
                  "categoryId": "nabone",
                  "categoryName": "nabONE",
                  "categoryDescription": "A collection of tools and resources to help with development within the nabONE platform",
                  "style": {
                     "border-color": "#292C2E",
                     "background-color": "#292C2E",
                     "color": "#F2F4F6"
                  }
               }
            },
            {
               "point": "app.devtoolbox.categories",
               "config": {
                  "categoryId": "nabapi",
                  "categoryName": "nabAPI",
                  "categoryDescription": "This section contains a collection of tools and resources relevant to nabAPI",
                  "style": {
                     "border-color": "#292C2E",
                     "background-color": "#572381",
                     "color": "#F2F4F6"
                  }
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "nabUI",
                  "icon": "brush",
                  "route": "/external/nabui",
                  "categoryId": "nabone"
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "AngularJS Website",
                  "backgroundImage": "nabone-platform/components/app.devtoolbox/resources/angular-tile.png",
                  "route": "/external/angularjs",
                  "tileClass": "tile-md",
                  "categoryId": "nabone",
                  "description": "HTML enhanced for web apps!"
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "TypeScript Website",
                  "backgroundImage": "nabone-platform/components/app.devtoolbox/resources/typescript-tile.png",
                  "route": "/external/typescript",
                  "categoryId": "nabone"
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.external.angularjs",
                  "title": "AngularJS Website",
                  "routes": [
                     "/external/angularjs"
                  ],
                  "contentDirective": "one-external-app",
                  "context": {
                     "url": "https://angularjs.org/"
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.external.typescript",
                  "title": "Typescript Website",
                  "routes": [
                     "/external/typescript"
                  ],
                  "contentDirective": "one-external-app",
                  "context": {
                     "url": "https://www.typescriptlang.org"
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.external.nabui",
                  "title": "nabUI",
                  "routes": [
                     "/external/nabui"
                  ],
                  "contentDirective": "one-external-app",
                  "context": {
                     "url": "https://app.cts.nab.com.au/a2/apps/NABUI/v3/docs/index.html"
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.external.nabApiDocs",
                  "title": "nabAPI Developer Portal",
                  "contentUrl": "nabone-platform/components/nabone.container/partials/naboneExternalApp.html",
                  "routes": [
                     "/nabapi/devportal"
                  ],
                  "appData": {
                     "root": "https://internal-docs.esg.extnp.national.com.au/"
                  }
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "NAB API Dev Portal",
                  "route": "/nabapi/devportal",
                  "categoryId": "nabapi",
                  "tileClass": "tile-md",
                  "backgroundImage": "nabone-platform/components/app.devtoolbox/resources/nabone-tools.png",
                  "order": 1
               }
            }
         ],
         "pluginPoints": [
            {
               "id": "app.devtoolbox.tiles",
               "name": "Developer Toolbox point to plug in new tiles."
            },
            {
               "id": "app.devtoolbox.categories",
               "name": "Developer Toolbox point to plug in new categories."
            }
         ]
      },
      {
         "id": "app.documentation",
         "name": "nabONE Documentation",
         "dependencies": [
            "nabone.components",
            "app.devtoolbox",
            "nabone.documentation",
            "nabone.markdown"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/app.documentation/app.documentation.min.js?1547009616366",
                  "nabone-platform/components/app.documentation/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "nabONE Documentation",
                  "backgroundImage": "nabone-platform/components/app.devtoolbox/resources/nabone-tools.png",
                  "route": "/nabone-documentation",
                  "categoryId": "nabone",
                  "tileClass": "tile-md",
                  "description": "All the nabONE documentation needed to get started",
                  "order": 1
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.documentation",
                  "title": "nabONE Documentation",
                  "contentDirective": "one-documentation",
                  "routes": [
                     "/nabone-documentation",
                     "/nabone-documentation/:name",
                     "/nabone-documentation/:category/:name"
                  ],
                  "maxInstances": 1,
                  "context": {
                     "routeParams": "app.params"
                  },
                  "appData": {
                     "enableJumpLinks": false
                  }
               }
            }
         ]
      },
      {
         "id": "app.library",
         "name": "nabONE Library",
         "dependencies": [],
         "roles": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/app.library/app.library.min.js?1547009616366",
                  "nabone-platform/components/app.library/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.library",
                  "title": "Library",
                  "contentUrl": "nabone-platform/components/app.library/partials/index.html",
                  "routes": [
                     "/library"
                  ],
                  "maxInstances": 1,
                  "appData": {
                     "enableJumpLinks": false
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Opened library content",
                  "topic": "app.library.openedContent"
               }
            },
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "Library",
                     "path": "apps",
                     "icon": "book",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/library"
                           }
                        }
                     },
                     "order": 110
                  }
               }
            }
         ],
         "pluginPoints": [
            {
               "id": "app.library.content",
               "name": "Library Contributions",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string"
                     },
                     "name": {
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "A URL from which to load the library content",
                        "type": "string"
                     },
                     "linkUrl": {
                        "description": "An external link where the content is located",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive which provides the library content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "route": {
                        "description": "A deeplink route the library item will respond to",
                        "type": "string"
                     },
                     "enabled": {
                        "type": "boolean",
                        "default": true
                     },
                     "order": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "id",
                     "name"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "linkUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     },
                     {
                        "required": [
                           "route"
                        ]
                     }
                  ]
               }
            }
         ]
      },
      {
         "id": "app.serviceStatus",
         "name": "Provides API service status",
         "dependencies": [
            "api.eesg",
            "api.gateway",
            "api.efc2"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/app.serviceStatus/app.serviceStatus.min.js?1547009616366",
                  "nabone-platform/components/app.serviceStatus/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.serviceStatus.provider",
               "name": "Service status provider",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "namespace": {
                        "description": "Namespace or nickname for the provider",
                        "type": "string"
                     },
                     "description": {
                        "description": "Description to appear on the service status page",
                        "type": "string"
                     },
                     "service": {
                        "description": "Name of the registered angular service which implements nabone.onlineStatus.IStatusProvider",
                        "type": "string"
                     }
                  },
                  "required": [
                     "namespace",
                     "description",
                     "service"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.serviceStatus.provider",
               "config": {
                  "namespace": "eesg",
                  "description": "EESG",
                  "service": "api.eesg.EesgApiService"
               }
            },
            {
               "point": "app.serviceStatus.provider",
               "config": {
                  "namespace": "nabONE",
                  "description": "nabONE Gateway",
                  "service": "api.gateway.GatewayApiService"
               }
            },
            {
               "point": "app.serviceStatus.provider",
               "config": {
                  "namespace": "efc",
                  "description": "EFC2",
                  "service": "api.efc2.Efc2ApiService"
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.serviceStatus",
                  "title": "Online status awareness examples",
                  "contentUrl": "nabone-platform/components/app.serviceStatus/partials/index.html",
                  "routes": [
                     "/serviceStatus"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.alerts",
         "name": "Inline alert boxes",
         "dependencies": [
            "lib.bootstrap"
         ]
      },
      {
         "id": "nabone.analytics.browserConsole",
         "name": "Analytics logging into the browser console (for testing)",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.analytics.browserConsole/nabone.analytics.browserConsole.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.analytics.eventLogger.provider",
               "config": {
                  "service": "nabone.analytics.browserConsole.ConsoleEventLogger",
                  "inactiveEnvironments": [
                     "prd",
                     "dev"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.analytics.splunk",
         "name": "Analytics (using Splunk)",
         "dependencies": [
            "nabone.env",
            "nabone.utils",
            "nabone.storage",
            "api.splunk"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.analytics.splunk/nabone.analytics.splunk.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.analytics.eventLogger.provider",
               "config": {
                  "service": "nabone.analytics.splunk.SplunkEventLogger",
                  "activeEnvironments": [
                     "sit4",
                     "prd"
                  ],
                  "inactiveEnvironments": []
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.analytics.splunk.eventStorage.dataStoreName": "analyticsEvents",
                     "nabone.analytics.splunk.postIntervalSeconds": 37,
                     "nabone.analytics.splunk.postChunkSize": 100,
                     "nabone.analytics.splunk.source": "hec_nabone",
                     "nabone.analytics.splunk.index": "nabone_np"
                  },
                  "prd": {
                     "nabone.analytics.splunk.source": "hec_nabone",
                     "nabone.analytics.splunk.index": "nabone_prod"
                  }
               }
            },
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "analyticsEvents"
               }
            }
         ]
      },
      {
         "id": "nabone.analytics",
         "name": "Analytics",
         "activator": "nabone.analytics.Activator",
         "dependencies": [
            "nabone.env",
            "nabone.storage",
            "nabone.user",
            "nabone.utils"
         ],
         "pluginPoints": [
            {
               "id": "nabone.analytics.eventLogger.provider",
               "name": "An extension point at which an instance of IEventLogger can be provided to the composite logger",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "service": {
                        "description": "The service that provides the implementation of IEventLogger",
                        "type": "string"
                     },
                     "activeEnvironments": {
                        "description": "The environments in which the logger is active. If omitted, than the logger is active in all environments, other than those listed by inactiveEnvironments.",
                        "type": "array",
                        "items": {
                           "type": "string"
                        },
                        "uniqueItems": true
                     },
                     "inactiveEnvironments": {
                        "description": "The environments in which the logger is explicitly inactive.",
                        "type": "array",
                        "items": {
                           "type": "string"
                        },
                        "uniqueItems": true
                     }
                  },
                  "required": [
                     "service"
                  ]
               }
            },
            {
               "id": "nabone.analytics.monitor",
               "name": "A message bus monitor configuration that maps and sinks events to analytics loggers",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "_comment": {
                        "description": "Description of the monitor for reference purposes only",
                        "type": "string"
                     },
                     "topic": {
                        "description": "The topic to which the monitor subscribes",
                        "type": "string"
                     },
                     "importance": {
                        "description": "The importance level. Optional with 'info' default",
                        "enum": [
                           "trace",
                           "debug",
                           "info",
                           "warn",
                           "error",
                           "fatal"
                        ],
                        "default": "info"
                     },
                     "message": {
                        "description": "An optional message",
                        "type": "string"
                     },
                     "monitoredProperties": {
                        "description": "A string array of the published message data paths to be analysed. If not specified, then the complete data object is used.",
                        "type": "array",
                        "items": {
                           "type": "string"
                        },
                        "uniqueItems": true
                     }
                  },
                  "required": [
                     "topic"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "The session startup event",
                  "topic": "nabone.analytics.session.start"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "The one platform loaded event",
                  "topic": "one.platform.started"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Component load event",
                  "topic": "one.platform.component.loaded"
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.analytics.session.dataStoreName": "analyticsControlSet",
                     "nabone.analytics.api.reporting.exclusions": [
                        {
                           "requestMatchingRegExp": "heartbeat$"
                        },
                        {
                           "requestMatchingRegExp": "^(?!http).+"
                        },
                        {
                           "requestMatchingRegExp": "splunk-hfa.splunk.ext.national.com.au"
                        }
                     ],
                     "nabone.analytics.api.applyThresholds": false,
                     "nabone.analytics.api.timing.reporting.thresholds": [
                        {
                           "requestMatchingRegExp": ".*",
                           "roundTripExceedingMillis": 5000
                        },
                        {
                           "requestMatchingRegExp": "search",
                           "roundTripExceedingMillis": 2500
                        }
                     ]
                  }
               }
            },
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "analyticsControlSet"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-analytics",
                  "category": "common-components",
                  "label": "nabONE Analytics",
                  "contentUrl": "nabone-platform/components/nabone.analytics/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.api.test",
         "name": "nabONE API Test Page",
         "dependencies": [
            "nabone.api"
         ],
         "roles": [
            "NABONE_API_TESTER"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.api.test/nabone.api.test.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.api.test.ui",
               "name": "nabONE Api Test UI"
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.api.test",
                  "title": "nabONE API Test",
                  "contentUrl": "nabone-platform/components/nabone.api.test/partials/nabone.api.test/main.html",
                  "routes": [
                     "/nabone.api.test"
                  ]
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "API Test Tool",
                  "icon": "retweet",
                  "route": "/nabone.api.test",
                  "categoryId": "nabone"
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "API Test Tool",
                  "icon": "retweet",
                  "route": "/nabone.api.test",
                  "categoryId": "nabapi"
               }
            }
         ]
      },
      {
         "id": "nabone.api",
         "name": "nabONE nabAPI services",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.apps",
         "name": "nabONE Application Management",
         "activator": "nabone.apps.Activator",
         "dependencies": [
            "nabone.platform",
            "lib.ngBootstrap",
            "nabone.watchersToggle",
            "one.platform.menu",
            "api.user",
            "nabone.notifications",
            "nabone.env",
            "nabone.user",
            "nabone.preferences"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.apps/nabone.apps.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.container.apps",
               "name": "Container Applications",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "title": {
                        "description": "The application title that appears on screen",
                        "type": "string"
                     },
                     "contentUrl": {
                        "description": "url to html partial to load the app",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "Name of a directive to load the app",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     },
                     "maxInstances": {
                        "description": "optional maximum number of permitted instances",
                        "type": "integer"
                     },
                     "appData": {
                        "description": "Any application specific data that will be passed to an app instance",
                        "type": "object",
                        "properties": {}
                     }
                  },
                  "required": [
                     "applicationId",
                     "title",
                     "routes"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            },
            {
               "id": "nabone.apps.initialise",
               "name": "Apps during-activation hook"
            },
            {
               "id": "nabone.apps.afterStart",
               "name": "Apps after-startup hook"
            },
            {
               "id": "nabone.container.apps.autostart",
               "name": "Auto started applications",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "route": {
                        "description": "An application route to autostart",
                        "type": "string"
                     }
                  },
                  "required": [
                     "route"
                  ]
               }
            },
            {
               "id": "nabone.container.apps.startnotifications",
               "name": "Custom Application Startup Notifications",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "applicationId": {
                        "description": "A unique id for the application",
                        "type": "string"
                     },
                     "notification": {
                        "description": "The notification object to use at startup",
                        "type": "object"
                     }
                  }
               }
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "menu": {
                     "path": "apps"
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application loading",
                  "topic": "nabone.container.apps.application.loading",
                  "monitoredProperties": [
                     "application.applicationId",
                     "application.instanceId",
                     "application.title",
                     "application.route"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application loading failed",
                  "topic": "nabone.container.apps.application.loadingfailed",
                  "importance": "error",
                  "monitoredProperties": [
                     "application.applicationId",
                     "application.instanceId",
                     "application.title",
                     "application.route"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Application closing",
                  "topic": "nabone.container.apps.application.closed",
                  "monitoredProperties": [
                     "instanceId"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Favorite added",
                  "topic": "nabone.container.sideBarMenu.favoriteAdded",
                  "monitoredProperties": [
                     "label",
                     "path"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Favorite removed",
                  "topic": "nabone.container.sideBarMenu.favoriteRemoved",
                  "monitoredProperties": [
                     "label",
                     "path"
                  ]
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Search in sidebar",
                  "topic": "nabone.container.sideBarMenu.searchedFor"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Switched tab",
                  "topic": "nabone.container.tabs.switchedTo",
                  "monitoredProperties": [
                     "instanceId",
                     "applicationId",
                     "title",
                     "route"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.cache",
         "name": "nabONE caching",
         "dependencies": [
            "nabone.storage"
         ],
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-cache",
                  "category": "tooling",
                  "label": "nabONE Cache",
                  "priority": 2,
                  "contentUrl": "lib/nabone-cache/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.componentGroup",
         "name": "A re-usable container for housing a set of related components",
         "dependencies": [
            "nabone.components",
            "nabone.ui.components.overrides",
            "nabone.preferences"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.componentGroup/style.css?1547009616366",
                  "nabone-platform/components/nabone.componentGroup/nabone.componentGroup.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.components",
         "name": "nabONE components",
         "dependencies": [
            "nabone.utils",
            "nabone.preferences",
            "nabone.ui.dom",
            "nabone.ui.multiSelect",
            "nabone.eval",
            "nabone.pkg"
         ]
      },
      {
         "id": "nabone.components.lazy",
         "name": "Post container startup components",
         "dependencies": [
            "lib.moment"
         ],
         "plugins": [
            {
               "point": "nabone.platform.afterStart"
            }
         ]
      },
      {
         "id": "nabone.documentation",
         "name": "nabONE Documentation",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.documentation/nabone.documentation.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.documentation.pages",
               "name": "Point for registration of documentation pages",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "name": {
                        "type": "string"
                     },
                     "description": {
                        "type": "string"
                     },
                     "category": {
                        "type": "string"
                     },
                     "label": {
                        "type": "string"
                     },
                     "contentUrl": {
                        "type": "string"
                     },
                     "priority": {
                        "type": "number"
                     },
                     "highlight": {
                        "type": "boolean"
                     },
                     "highlightIcon": {
                        "type": "string"
                     }
                  },
                  "required": [
                     "name",
                     "category",
                     "label",
                     "contentUrl"
                  ],
                  "dependencies": {
                     "highlight": [
                        "highlightIcon"
                     ]
                  }
               }
            },
            {
               "id": "nabone.documentation.categories",
               "name": "Point for registration of documentation categories",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "name": {
                        "type": "string"
                     },
                     "label": {
                        "type": "string"
                     },
                     "priority": {
                        "type": "number"
                     },
                     "contentUrl": {
                        "type": "number"
                     }
                  },
                  "required": [
                     "name",
                     "label"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.documentation.categories",
               "config": {
                  "name": "dev-guides",
                  "label": "Guides & Tutorials",
                  "priority": 1
               }
            },
            {
               "point": "nabone.documentation.categories",
               "config": {
                  "name": "dev-standards",
                  "label": "Standards",
                  "priority": 2
               }
            },
            {
               "point": "nabone.documentation.categories",
               "config": {
                  "name": "tooling",
                  "label": "Tooling",
                  "priority": 3
               }
            },
            {
               "point": "nabone.documentation.categories",
               "config": {
                  "name": "common-components",
                  "label": "Common Components",
                  "priority": 4
               }
            },
            {
               "point": "nabone.documentation.categories",
               "config": {
                  "name": "applications",
                  "label": "Applications",
                  "priority": 5
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "getting-started",
                  "category": "dev-guides",
                  "label": "Getting Started",
                  "priority": 1,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/getting-started.md",
                  "highlight": true,
                  "highlightIcon": "icon-book-open",
                  "description": "Get started developing for nabONE with a step by step guide to setting up your environment and building your own nabONE components"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "glossary",
                  "category": "dev-guides",
                  "label": "Glossary",
                  "priority": 2,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/glossary.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "building-packages",
                  "category": "dev-guides",
                  "label": "Building Packages",
                  "priority": 3,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/packages.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "building-components",
                  "category": "dev-guides",
                  "label": "Building Components",
                  "priority": 4,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/components.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "api-components",
                  "category": "dev-guides",
                  "label": "API Components",
                  "priority": 5,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/api-components.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "admin-components",
                  "category": "dev-guides",
                  "label": "Admin Components",
                  "priority": 6,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/admin-components.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "unit-testing",
                  "category": "dev-guides",
                  "label": "Unit Testing",
                  "priority": 7,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/unit-testing.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "e2e-testing",
                  "category": "dev-guides",
                  "label": "E2E Testing",
                  "priority": 8,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/e2e-testing.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "applications",
                  "category": "dev-guides",
                  "label": "How nabONE Manages Applications",
                  "priority": 9,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/applications.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "ui-standards",
                  "category": "dev-standards",
                  "label": "UI Components",
                  "priority": 3,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-standards/ui-standards.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "msg-bus",
                  "category": "dev-guides",
                  "label": "Message Bus",
                  "priority": 11,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/msg-bus.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "writing-markdown",
                  "category": "dev-guides",
                  "label": "Writing Markdown Documents",
                  "priority": 12,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-guides/writing-markdown.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "standards",
                  "category": "dev-standards",
                  "label": "Standards & Conventions",
                  "priority": 1,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-standards/standards.md",
                  "highlight": true,
                  "highlightIcon": "icon-cubes",
                  "description": "Learn about the development and testing standards required for all nabONE contributions including the use of AngularJS and Typescript."
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "styling-and-css",
                  "category": "dev-standards",
                  "label": "Styling and CSS",
                  "priority": 2,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-standards/styling-and-css.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "forms-efc",
                  "category": "dev-standards",
                  "label": "Forms and EFC",
                  "priority": 6,
                  "contentUrl": "nabone-platform/components/nabone.documentation/markdown/dev-standards/forms-efc.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-test-support",
                  "category": "tooling",
                  "label": "nabONE Test Support",
                  "priority": 1,
                  "contentUrl": "lib/nabone-test-support/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.complexExpr.complexExprProvider",
         "name": "Form Complex Expression Provider",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.efcv1.complexExpr.complexExprProvider/nabone.efcv1.complexExpr.complexExprProvider.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv1.complexExpr",
               "config": {
                  "service": "ComplexExpressionProvider",
                  "exprContextService": "ExpressionContextService"
               }
            }
         ]
      },
      {
         "id": "nabone.efcv1.renderer",
         "name": "Form Renderer",
         "dependencies": [
            "lib.efcv1Renderer"
         ]
      },
      {
         "id": "nabone.efcv2",
         "name": "nabONE EFCv2 Renderer",
         "dependencies": [
            "nabone.components",
            "api.efc2",
            "nabone.forms.efc",
            "nabone.form.catalogue.service"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.efcv2/nabone.efcv2.min.js?1547009616366",
                  "nabone-platform/components/nabone.efcv2/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.efcv2.override",
               "name": "EFC2 Form Overrides",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "formType": {
                        "description": "the EFC form type id",
                        "type": "string"
                     },
                     "overrides": {
                        "type": "object",
                        "properties": {
                           "modelOverrider": {
                              "description": "optional nabone.efcv2.IModelOverrider service impl",
                              "type": "string"
                           },
                           "layoutOverrider": {
                              "description": "optional nabone.efcv2.ILayoutOverrider service impl",
                              "type": "string"
                           },
                           "schemaOverrider": {
                              "description": "optional nabone.efcv2.ISchemaOverrider service impl",
                              "type": "string"
                           },
                           "expressionContextProvider": {
                              "description": "optional nabone.efcv2.IExpressionContextProvider service impl",
                              "type": "string"
                           },
                           "actionStrategyProvider": {
                              "description": "optional nabone.efcv2.IActionStrategyProvider service impl",
                              "type": "string"
                           },
                           "rendererSelectionStrategyProvider": {
                              "description": "optional nabone.efcv2.IRendererSelectionStrategyProvider service impl",
                              "type": "string"
                           },
                           "readonlyStrategyProvider": {
                              "description": "optional nabone.efcv2.IReadonlyStrategyProvider service impl",
                              "type": "string"
                           },
                           "changeListenerProvider": {
                              "description": "optional nabone.efcv2.IChangeListenerProvider service impl",
                              "type": "string"
                           }
                        },
                        "additionalProperties": false
                     }
                  },
                  "required": [
                     "formType",
                     "overrides"
                  ],
                  "additionalProperties": false
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.efcv2.override",
               "config": {
                  "formType": "*",
                  "overrides": {
                     "rendererSelectionStrategyProvider": "nabone.efcv2.DefaultRendererSelectionStrategyProvider",
                     "actionStrategyProvider": "nabone.efcv2.DefaultActionStrategyProvider",
                     "readonlyStrategyProvider": "nabone.efcv2.DefaultReadonlyStrategyProvider",
                     "modelOverrider": "nabone.efcv2.DefaultModelOverrider",
                     "layoutOverrider": "nabone.efcv2.DefaultLayoutOverrider",
                     "schemaOverrider": "nabone.efcv2.DefaultSchemaOverrider",
                     "expressionContextProvider": "nabone.efcv2.DefaultExpressionContextProvider",
                     "changeListenerProvider": "nabone.efcv2.DefaultChangeListenerProvider"
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.env",
         "name": "nabONE Environment Manager",
         "activator": "nabone.env.Activator",
         "pluginPoints": [
            {
               "id": "nabone.env.properties",
               "name": "nabONE Environment Config"
            }
         ],
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-env",
                  "category": "common-components",
                  "label": "Environment Manager",
                  "contentUrl": "nabone-platform/components/nabone.env/README.md"
               }
            }
         ],
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.eval.docs",
         "name": "nabONE Eval Docs",
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-eval",
                  "category": "tooling",
                  "label": "nabONE Eval",
                  "priority": 7,
                  "contentUrl": "nabone-eval/README.md"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-query",
                  "category": "tooling",
                  "label": "nabONE Query",
                  "priority": 7,
                  "contentUrl": "nabone-eval/QUERY.md"
               }
            }
         ]
      },
      {
         "id": "nabone.feedback",
         "name": "nabONE Feedback system",
         "pluginPoints": [
            {
               "id": "nabone.feedback.topic",
               "name": "Contribute to the feedback form 'Tools' list",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "title": {
                        "description": "Description or title that appears in the feedback form",
                        "type": "string"
                     }
                  },
                  "required": [
                     "title"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.form.catalogue.service",
         "name": "Form Catalogue Provider",
         "dependencies": [
            "nabone.forms"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.form.catalogue.service/nabone.form.catalogue.service.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.form.catalogue.forms",
               "name": "Form catalogue forms",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "description": "Unique identifier for the form",
                        "type": "string"
                     },
                     "name": {
                        "description": "Name of the form to be displayed in the catalogue",
                        "type": "string"
                     },
                     "type": {
                        "description": "Type of form - string based for EFCv1 forms, guid for EFCv2",
                        "type": "string"
                     },
                     "namespaces": {
                        "description": "Namespaces in which the form should be displayed",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     },
                     "description": {
                        "description": "Description as displayed when launching the form",
                        "type": "string"
                     },
                     "provider": {
                        "description": "EFC, NABONE or EFCv2",
                        "type": "string"
                     },
                     "display": {
                        "description": "Whether or not the form should be displayed in the catalogue",
                        "type": "boolean"
                     },
                     "route": {
                        "description": "Optional route for deep linking",
                        "type": "string"
                     },
                     "transient": {
                        "description": "Transient forms can not be saved",
                        "type": "boolean"
                     },
                     "order": {
                        "description": "Order in which the form should appear in the catalogue",
                        "type": "number"
                     }
                  },
                  "required": [
                     "id",
                     "name",
                     "type",
                     "description",
                     "namespaces",
                     "provider",
                     "display"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.form.view",
         "name": "Form Viewer",
         "dependencies": [
            "nabone.efcv1.renderer",
            "nabone.forms",
            "nabone.efcv2",
            "api.efc1",
            "nabone.ui.components.overrides"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.form.view/style.css?1547009616366",
                  "nabone-platform/components/nabone.form.view/nabone.form.view.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.efcv1.override",
               "name": "Form View Overrides"
            },
            {
               "id": "nabone.efcv1.complexExpr",
               "name": "Expression Context Providers"
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.form.view",
                  "title": "Form Viewer",
                  "contentUrl": "nabone-platform/components/nabone.form.view/default.html",
                  "routes": [
                     "/forms/:formType/:instanceID",
                     "/forms/:formType"
                  ],
                  "maxInstances": 1,
                  "closeHandler": {
                     "service": "FormCloseModal",
                     "config": {}
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Form opened",
                  "topic": "nabone.forms.form.opened"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Form saved",
                  "topic": "nabone.forms.form.saved"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Form submitted",
                  "topic": "nabone.forms.form.submitted"
               }
            }
         ]
      },
      {
         "id": "nabone.forms",
         "name": "Forms",
         "dependencies": [
            "nabone.storage"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.forms/nabone.forms.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "forms"
               }
            }
         ]
      },
      {
         "id": "nabone.layout.docs",
         "name": "nabONE Layout Docs",
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-layout",
                  "category": "tooling",
                  "label": "nabONE Layout",
                  "priority": 7,
                  "contentUrl": "nabone-layout/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.notifications",
         "name": "nabONE notification manager",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.onlineStatus",
         "name": "Provides online/offline status awareness",
         "dependencies": [
            "nabone.notifications"
         ],
         "pluginPoints": [
            {
               "id": "nabone.onlineStatus.provider",
               "name": "Online status provider",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "namespace": {
                        "description": "Unique namespace of the provider",
                        "type": "string"
                     },
                     "description": {
                        "description": "Description of the provider for reference purposes only",
                        "type": "string"
                     },
                     "service": {
                        "description": "Name of the registered angular service which implements nabone.onlineStatus.IStatusProvider",
                        "type": "string"
                     }
                  },
                  "required": [
                     "namespace",
                     "service"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.onlineStatus.onlineInterval": 30000,
                     "nabone.onlineStatus.offlineInterval": 2000,
                     "nabone.onlineStatus.heartbeatEnabled": true
                  },
                  "dev": {
                     "nabone.onlineStatus.heartbeatEnabled": false
                  },
                  "sit4": {
                     "nabone.onlineStatus.heartbeatEnabled": false
                  },
                  "sit5": {
                     "nabone.onlineStatus.heartbeatEnabled": false
                  }
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Online/offline status changed",
                  "topic": "nabone.onlineStatus.changed"
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-online-status",
                  "category": "common-components",
                  "label": "Online/Offline Status",
                  "contentUrl": "nabone-platform/components/nabone.onlineStatus/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.pdf2",
         "name": "nabONE PDF Generator",
         "dependencies": [
            "nabone.eval",
            "lib.pdfMake",
            "lib.viewer.pdfjs"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.pdf2/style.css?1547009616366",
                  "nabone-platform/components/nabone.pdf2/nabone.pdf2.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.pkg",
         "name": "Directives & services for runtime package awareness",
         "dependencies": [
            "nabone.env"
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.pkg.versioningEnabled": false
                  },
                  "dev": {
                     "nabone.pkg.versioningEnabled": false
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.platform",
         "name": "nabONE platform base dependencies",
         "activator": "nabone.platform.Activator",
         "dependencies": [
            "nabone.pkg",
            "nabone.env",
            "nabone.utils",
            "nabone.api",
            "nabone.components",
            "nabone.notifications",
            "nabone.spinner",
            "nabone.storage",
            "nabone.cache",
            "nabone.alerts",
            "nabone.onlineStatus",
            "nabone.analytics",
            "nabone.ui.components.overrides",
            "nabone.schema",
            "nabone.polyfills"
         ],
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-platform",
                  "category": "common-components",
                  "label": "nabone.platform",
                  "contentUrl": "nabone-platform/components/nabone.platform/README.md"
               }
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.platform.container",
               "name": "nabONE container registration"
            },
            {
               "id": "nabone.platform.activate",
               "name": "Platform activation hook - platform use only"
            },
            {
               "id": "nabone.platform.afterStart",
               "name": "Platform after-startup hook - call after activation and results ignored"
            }
         ]
      },
      {
         "id": "nabone.polyfills",
         "name": "nabONE platform polyfills for IE 11 support",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.preferences",
         "name": "User Preferences API",
         "dependencies": [
            "nabone.storage"
         ],
         "plugins": [
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "preferences"
               }
            }
         ]
      },
      {
         "id": "nabone.rule",
         "name": "nabONE Rules services",
         "dependencies": [
            "nabone.eval",
            "nabone.cache",
            "nabone.rules"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-platform/components/nabone.rule/nabone.rule.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-rules",
                  "category": "tooling",
                  "label": "nabONE Rules",
                  "priority": 7,
                  "contentUrl": "nabone-rules/components/lib.rule/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.schema",
         "name": "nabONE Schema",
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-schema",
                  "category": "tooling",
                  "label": "nabONE Schema",
                  "priority": 6,
                  "contentUrl": "lib/nabone-schema/README.md"
               }
            }
         ],
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.spinner",
         "name": "nabONE spinner",
         "attributes": {
            "offlineSupport": true
         },
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-spinner",
                  "category": "common-components",
                  "label": "nabONE Spinner",
                  "contentUrl": "nabone-platform/components/nabone.spinner/README.md"
               }
            }
         ],
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.storage",
         "name": "Local Storage",
         "dependencies": [
            "nabone.env"
         ],
         "pluginPoints": [
            {
               "id": "nabone.storage.dataStore",
               "name": "An extension point at which apps/components declare required object stores to the storage service",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "dataStoreName": {
                        "description": "The name of the data store to create",
                        "type": "string"
                     }
                  },
                  "required": [
                     "dataStoreName"
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.storage.dbName": "nabONE"
                  }
               }
            },
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-storage",
                  "category": "tooling",
                  "label": "nabONE Storage",
                  "priority": 7,
                  "contentUrl": "lib/nabone-storage/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.ui.components.overrides",
         "name": "nabONE specific customisations for universal UI components",
         "dependencies": [
            "nabone.ui.modal"
         ]
      },
      {
         "id": "nabone.user",
         "name": "User details service",
         "dependencies": [
            "api.nabone",
            "nabone.preferences",
            "api.directory",
            "nabone.storage"
         ],
         "activator": "nabone.user.activator",
         "plugins": [
            {
               "point": "nabone.storage.dataStore",
               "config": {
                  "dataStoreName": "user"
               }
            }
         ]
      },
      {
         "id": "nabone.utils",
         "name": "nabONE common utility services",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.watchersToggle.docs",
         "name": "nabONE component for watchersToggle",
         "plugins": [
            {
               "point": "nabone.documentation.pages",
               "config": {
                  "name": "nabone-watchers-toggle",
                  "category": "tooling",
                  "label": "nabONE Watchers Toggle",
                  "priority": 6,
                  "contentUrl": "nabone-watchers-toggle/README.md"
               }
            }
         ]
      },
      {
         "id": "nabone.rules",
         "name": "nabONE Rules",
         "modules": [
            {
               "files": [
                  "nabone-rules/components/lib.rule/nabone-lib-rules.min.js?1547009616366"
               ]
            }
         ],
         "dependencies": [
            "nabone.eval"
         ]
      },
      {
         "id": "nabone.schema.explorer",
         "name": "nabONE Schema Explorer",
         "dependencies": [
            "nabone.schema",
            "api.eesg",
            "nabone.forms.efc"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-schema-explorer/components/nabone.schema.explorer/nabone.schema.explorer.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "nabone.schema.explorer",
                  "title": "Schema Explorer",
                  "contentUrl": "nabone-schema-explorer/components/nabone.schema.explorer/partials/default.html",
                  "routes": [
                     "/nabone.schema.explorer"
                  ]
               }
            },
            {
               "point": "app.devtoolbox.tiles",
               "config": {
                  "label": "Schema Explorer Tool",
                  "icon": "code",
                  "route": "/nabone.schema.explorer",
                  "categoryId": "nabone"
               }
            }
         ]
      },
      {
         "id": "api.lendingSubmission",
         "name": "Structured Lending Submission API",
         "dependencies": [
            "nabone.env",
            "nabone.api",
            "nabone.cache"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-sls/components/api.lendingSubmission/api.lendingSubmission.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.lendingSubmission.baseUrl": "{{api.eesg.baseUrl}}",
                     "api.lendingSubmission.withCredentials": true,
                     "api.lendingSubmission.retrieveLendingSubmissionsUrl": "{{api.lendingSubmission.baseUrl}}/v1/credit/sls/${lendingGroupNumber}/submissions",
                     "api.lendingSubmission.retrieveLendingSubmissionDetailsUrl": "{{api.lendingSubmission.baseUrl}}/v1/credit/sls/${lendingGroupNumber}/submissions/${lendingSubmissionNumber}",
                     "api.lendingSubmission.saveChecklistAnswersUrl": "{{api.lendingSubmission.baseUrl}}/v1/credit/sls/${lendingGroupNumber}/submissions/${lendingSubmissionNumber}/answers",
                     "api.lendingSubmission.saveAcknowledgmentUrl": "{{api.lendingSubmission.baseUrl}}/v1/credit/sls/${lendingGroupNumber}/submissions/${lendingSubmissionNumber}/acknowledgement"
                  }
               }
            }
         ]
      },
      {
         "id": "app.group.borrowing.sls",
         "name": "Structured Lending Submission Summary",
         "dependencies": [
            "app.customer.groups",
            "app.group.borrowing",
            "nabone.ui.panels",
            "nabone.componentGroup",
            "nabone.components",
            "api.lendingSubmission",
            "nabone.forms.core",
            "lib.moment",
            "lib.angular.filter",
            "nabone.utils",
            "nabone.ui.components.overrides",
            "nabone.user"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-sls/components/app.group.borrowing.sls/app.group.borrowing.sls.min.js?1547009616366",
                  "nabone-sls/components/app.group.borrowing.sls/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "app.lending.submission.views",
               "name": "Views to appear on the borrowing summary details page",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "widgetId": {
                        "description": "Unique ID for this widget",
                        "type": "string"
                     },
                     "title": {
                        "description": "Menu title",
                        "type": "string"
                     },
                     "displayOrder": {
                        "description": "Menu order item",
                        "type": "number"
                     },
                     "contentUrl": {
                        "description": "A URL to load the component partial",
                        "type": "string"
                     },
                     "contentDirective": {
                        "description": "A directive name to use as the component content",
                        "type": "string"
                     },
                     "context": {
                        "description": "List of attributes/bindings to apply to the content directive",
                        "type": "object",
                        "additionalProperties": true
                     },
                     "routes": {
                        "description": "An array of deeplink routes the app will respond to",
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  },
                  "required": [
                     "widgetId",
                     "routes"
                  ],
                  "oneOf": [
                     {
                        "required": [
                           "contentUrl"
                        ]
                     },
                     {
                        "required": [
                           "contentDirective"
                        ]
                     }
                  ]
               }
            }
         ],
         "plugins": [
            {
               "point": "app.group.components",
               "config": {
                  "title": "Structured Lending Submission",
                  "applicationId": "app.group.borrowing.lendingSubmission",
                  "contentDirective": "lending-submission",
                  "context": {
                     "selectedSubmission": "groupCtrl.selectedSubmission",
                     "groupNumber": "groupCtrl.groupNumber",
                     "openComponent": "componentGroupCtrl.openComponent(route)",
                     "routeParams": "app.params",
                     "ng-if": "groupCtrl.selectedSubmission != undefined"
                  },
                  "maxInstances": 1,
                  "routes": [
                     "/group/borrowing/lendingSubmission/:lendingSubmissionNumber"
                  ]
               }
            },
            {
               "point": "app.group.borrowing.views",
               "config": {
                  "widgetId": "app.group.borrowing.sls",
                  "title": "SLS Summary",
                  "displayOrder": 3,
                  "contentDirective": "submission-summary",
                  "context": {
                     "groupNumber": "groupBorrowingCtrl.groupNumber",
                     "launchSls": "componentGroupCtrl.openComponent(route)",
                     "selectedSubmission": "groupCtrl.selectedSubmission"
                  },
                  "routes": [
                     "/group/borrowing"
                  ]
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Structured Lending Submission"
               }
            }
         ]
      },
      {
         "id": "app.lendingSubmission.covenantsConditions",
         "name": "Structured Lending Submission Covenants and Conditions",
         "dependencies": [
            "app.group.borrowing.sls",
            "nabone.ui.panels",
            "nabone.componentGroup",
            "nabone.components"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-sls/components/app.lendingSubmission.covenantsConditions/app.lendingSubmission.covenantsConditions.min.js?1547009616366",
                  "nabone-sls/components/app.lendingSubmission.covenantsConditions/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.lending.submission.views",
               "config": {
                  "widgetId": "app.lending.submission.views.covenantsConditions",
                  "title": "Covenants & Conditions",
                  "displayOrder": 2,
                  "contentDirective": "covenants-conditions",
                  "context": {
                     "borrowingStructures": "lendingSubmissionCtrl.selectedSubmission.borrowingStructures"
                  },
                  "routes": [
                     "covenantsConditions"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.lendingSubmission.internalNotes",
         "name": "Structured Lending Submission Internal Notes",
         "dependencies": [
            "app.group.borrowing.sls",
            "nabone.ui.panels",
            "nabone.componentGroup",
            "nabone.components"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-sls/components/app.lendingSubmission.internalNotes/app.lendingSubmission.internalNotes.min.js?1547009616366",
                  "nabone-sls/components/app.lendingSubmission.internalNotes/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.lending.submission.views",
               "config": {
                  "widgetId": "app.lending.submission.views.internalNotes",
                  "title": "Internal Notes",
                  "displayOrder": 3,
                  "contentDirective": "internal-notes",
                  "context": {
                     "internalNote": "lendingSubmissionCtrl.selectedSubmission.internalNote"
                  },
                  "routes": [
                     "internalNotes"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.lendingSubmission.questionsAnswers",
         "name": "Structured Lending Submission Questions And Answers",
         "dependencies": [
            "app.group.borrowing.sls",
            "nabone.ui.panels",
            "nabone.forms.core",
            "nabone.componentGroup",
            "nabone.components"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-sls/components/app.lendingSubmission.questionsAnswers/app.lendingSubmission.questionsAnswers.min.js?1547009616366",
                  "nabone-sls/components/app.lendingSubmission.questionsAnswers/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.lending.submission.views",
               "config": {
                  "widgetId": "app.lending.submission.views.questionsAndAnswers",
                  "title": "Q & A",
                  "displayOrder": 4,
                  "contentDirective": "sls-questions-answers",
                  "context": {
                     "borrowingStructures": "lendingSubmissionCtrl.selectedSubmission.borrowingStructures",
                     "checklistFormContext": "lendingSubmissionCtrl.checklistFormContext",
                     "checklistLayout": "lendingSubmissionCtrl.checklistLayout"
                  },
                  "routes": [
                     "questionsAnswers"
                  ]
               }
            }
         ]
      },
      {
         "id": "app.lendingSubmission.structure",
         "name": "Structured Lending Submission Borrowing Structure",
         "dependencies": [
            "app.group.borrowing.sls",
            "nabone.ui.panels",
            "nabone.ui.treeView",
            "nabone.componentGroup",
            "nabone.components",
            "lib.angular.filter"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-sls/components/app.lendingSubmission.structure/app.lendingSubmission.structure.min.js?1547009616366",
                  "nabone-sls/components/app.lendingSubmission.structure/style.css?1547009616366"
               ]
            }
         ],
         "pluginPoints": [],
         "plugins": [
            {
               "point": "app.lending.submission.views",
               "config": {
                  "widgetId": "app.lending.submission.views.borrowingStructure",
                  "title": "Borrowing Structure",
                  "displayOrder": 1,
                  "contentDirective": "borrowing-structure",
                  "context": {
                     "borrowingStructures": "lendingSubmissionCtrl.selectedSubmission.borrowingStructures",
                     "lendingSubmissionNumber": "lendingSubmissionCtrl.selectedSubmission.lendingSubmissionNumber"
                  },
                  "routes": [
                     "borrowingStructure"
                  ]
               }
            }
         ]
      },
      {
         "id": "api.termDeposit",
         "name": "Term Deposit API",
         "dependencies": [
            "nabone.env",
            "api.nabone",
            "nabone.api"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-term-deposit/components/api.termDeposit/api.termDeposit.min.js?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "api.termDeposit.getTermDepositsUrl": "{{api.eesg.baseUrl}}/internal/nab/accounts/termDeposits/${queryType}/${queryValue}/${fromNum}/${toNum}?v=1",
                     "api.termDeposit.getTermDepositRatesUrl": "{{api.eesg.baseUrl}}/internal/nab/account/${accountToken}/tdRates/${maturityDate}/${interestFrequency}?v=2",
                     "api.termDeposit.updateTermDepositUrl": "{{api.eesg.baseUrl}}/internal/nab/account/${accountToken}/termDeposit/rollover?v=2"
                  }
               }
            },
            {
               "point": "nabone.api.test.ui",
               "config": {
                  "apiId": "api.termDeposit",
                  "service": "api.termDeposit.TermDepositApiService",
                  "description": "Term Deposit API"
               }
            }
         ]
      },
      {
         "dependencies": [
            "api.termDeposit",
            "nabone.components",
            "nabone.notifications",
            "api.customer.profile",
            "api.customer.accounts",
            "app.customer.accounts",
            "api.resource",
            "lib.moment",
            "api.referenceData",
            "nabone.ui.toggleButtonGroup",
            "nabone.ui.slider",
            "app.nabonehome"
         ],
         "id": "app.termDeposit",
         "activator": "app.termDeposit.TermDepositActivatorService",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-term-deposit/components/app.termDeposit/app.termDeposit.min.js?1547009616366",
                  "nabone-term-deposit/components/app.termDeposit/style.css?1547009616366"
               ]
            }
         ],
         "name": "Term Deposit",
         "roles": [
            "NABONE-Banker-ManageTD"
         ],
         "plugins": [
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Term Deposit Banker View",
                  "topic": "app.termDeposit.bankerView"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Term Deposit Banker View (Changed BUID)",
                  "topic": "app.termDeposit.updateBankerView"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Term Deposit Details",
                  "topic": "app.termDeposit.openDetail"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Term Deposit Details Update",
                  "topic": "app.termDeposit.update"
               }
            },
            {
               "point": "nabone.analytics.monitor",
               "config": {
                  "_comment": "Term Deposit Details Update Confirmed",
                  "topic": "app.termDeposit.confirm"
               }
            },
            {
               "config": {
                  "applicationId": "app.termDeposit",
                  "contentUrl": "nabone-term-deposit/components/app.termDeposit/partials/index.html",
                  "routes": [
                     "/termdeposit"
                  ],
                  "title": "Term Deposit"
               },
               "point": "nabone.container.apps"
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.termDeposit.refData": "nabone-term-deposit/components/app.termDeposit/resources/refData.jsn"
                  }
               }
            },
            {
               "point": "app.customer.accounts.actions",
               "config": {
                  "widgetId": "app.customer.accounts.actions.termDeposits",
                  "title": "Term deposit actions",
                  "displayOrder": 1,
                  "contentDirective": "term-deposit-account",
                  "context": {
                     "customerNumber": "accountsCtrl.customerNumber",
                     "accountToken": "accountsCtrl.selectedAccount.accountToken",
                     "accountList": "accountsCtrl.accountList",
                     "selectedAccount": "custCtrl.data.selectedAccount",
                     "ng-if": "accountsCtrl.selectedAccount.apiStructType == 'depositAccount'"
                  },
                  "routes": [
                     "termDeposit"
                  ]
               }
            },
            {
               "point": "app.customer.overview.widgets",
               "config": {
                  "title": "Term Deposit Notification",
                  "widgetId": "term-deposit-notification",
                  "displayOrder": 1,
                  "launcherService": "app.customer.overview.CustomerOverviewWidgetLauncher",
                  "contentDirective": "term-deposit-notification",
                  "context": {
                     "customerNumber": "{{ custCtrl.customerNumber }}"
                  },
                  "widgetData": {}
               }
            },
            {
               "point": "nabone.help.content",
               "config": {
                  "helpContentFile": "nabone-term-deposit/components/app.termDeposit/resources/help/tdHelpContent.jsn",
                  "componentId": "app.termDeposit"
               }
            },
            {
               "point": "nabone.whatsNew.content",
               "config": {
                  "helpContentFile": "nabone-term-deposit/components/app.termDeposit/resources/help/tdWhatsNewContent.jsn",
                  "componentId": "app.termDeposit"
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "Term Deposits"
               }
            }
         ]
      },
      {
         "id": "app.termDeposit.nabone.container",
         "name": "Term Deposit home page component",
         "dependencies": [
            "app.termDeposit"
         ],
         "roles": [
            "NABONE-Banker-ManageTD"
         ],
         "plugins": [
            {
               "point": "nabone.home.components",
               "config": {
                  "widgetId": "nabone.container.termDeposit",
                  "title": "Term Deposit",
                  "displayOrder": 2,
                  "contentDirective": "term-deposit",
                  "context": {
                     "userBuid": "homeAppsCtrl.buid",
                     "filterOptions": "{ limitTo: 5 }"
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.theme.nabui",
         "name": "nab UI theme",
         "attributes": {
            "offlineSupport": true
         },
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-theme-nabui/components/nabone.theme.nabui/style.css?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.toggle",
         "name": "nabONE Toggle Functionality",
         "dependencies": [
            "api.nabone"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-toggle/components/nabone.toggle/nabone.toggle.min.js?1547009616366"
               ]
            }
         ],
         "pluginPoints": [
            {
               "id": "nabone.toggle.list",
               "name": "Toggle List",
               "configSchema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string",
                        "description": "A unique id for the toggle definition"
                     },
                     "toggleStrategy": {
                        "type": "string",
                        "description": "Service to use to determine the toggle state of this toggle definition"
                     },
                     "toggleConfig": {
                        "type": "object",
                        "description": "Any additional config required to determine the toggle state"
                     }
                  },
                  "required": [
                     "id",
                     "toggleStrategy"
                  ]
               }
            }
         ]
      },
      {
         "id": "nabone.ui.actionDropdown",
         "name": "Action dropdown control",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.actionDropdown/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.actionDropdown/nabone.ui.actionDropdown.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "dependencies": [],
         "id": "nabone.ui.addressLookup",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.addressLookup/nabone.ui.addressLookup.min.js?1547009616366"
               ]
            }
         ],
         "name": "Address Lookup",
         "pluginPoints": [],
         "plugins": []
      },
      {
         "id": "nabone.ui.bannerHeader",
         "name": "Header bar with tabs",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.bannerHeader/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.bannerHeader/nabone.ui.bannerHeader.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.currencyInput",
         "name": "Currency Input",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.currencyInput/nabone.ui.currencyInput.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.dom",
         "name": "Services and components to support DOM manipulation",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.ui.layoutTransclude",
         "name": "nabONE UI Layout Transclude",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.layoutTransclude/nabone.ui.layoutTransclude.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.modal",
         "name": "nabONE modal",
         "dependencies": [
            "nabone.ui.dom"
         ]
      },
      {
         "id": "nabone.ui.multiSelect",
         "name": "MultiSelect",
         "dependencies": [
            "nabone.platform._combined"
         ]
      },
      {
         "id": "nabone.ui.panels",
         "name": "nabONE Panel",
         "dependencies": [
            "nabone.ui.layoutTransclude"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.panels/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.panels/nabone.ui.panels.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.slider",
         "name": "nabONE slider",
         "dependencies": [
            "lib.nouislider-angular"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.slider/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.slider/nabone.ui.slider.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.stepNavigation",
         "name": "nabONE Step Navigation Menu",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.stepNavigation/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.stepNavigation/nabone.ui.stepNavigation.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.toggleButtonGroup",
         "name": "Toggle Button Group",
         "dependencies": [],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.toggleButtonGroup/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.toggleButtonGroup/nabone.ui.toggleButtonGroup.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.ui.treeView",
         "name": "nabONE Tree View",
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-ui-components/components/nabone.ui.treeView/style.css?1547009616366",
                  "nabone-ui-components/components/nabone.ui.treeView/nabone.ui.treeView.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "nabone.watchersToggle",
         "name": "nabONE Watchers Toggle",
         "modules": [
            {
               "files": [
                  "nabone-watchers-toggle/components/lib.watchers.toggle/nabone-lib-watchers-toggle.min.js?1547009616366"
               ]
            }
         ]
      },
      {
         "id": "app.wdsNotesWizard",
         "name": "WDS Notes Wizard Component",
         "roles": [
            "NABWEALTH-Applications-cnotes-ContactCentreConsultants",
            "NABWEALTH-Applications-cnotes-Admin"
         ],
         "dependencies": [
            "api.resource",
            "nabone.forms",
            "nabone.forms.core",
            "nabone.ui.modal"
         ],
         "modules": [
            {
               "ordered": true,
               "files": [
                  "nabone-wds-notes-wizard/components/app.wdsNotesWizard/app.wdsNotesWizard.min.js?1547009616366",
                  "nabone-wds-notes-wizard/components/app.wdsNotesWizard/style.css?1547009616366"
               ]
            }
         ],
         "plugins": [
            {
               "point": "one.platform.menus",
               "config": {
                  "action": {
                     "label": "WDS Notes Wizard",
                     "path": "apps",
                     "icon": "edit",
                     "config": {
                        "handler": {
                           "service": "ApplicationRouteLauncher",
                           "config": {
                              "route": "/wdsNotesWizard"
                           }
                        }
                     },
                     "order": 130
                  }
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.wdsNotesWizard",
                  "title": "WDS Notes Wizard",
                  "contentDirective": "notes-wizard",
                  "maxInstances": 1,
                  "routes": [
                     "/wdsNotesWizard"
                  ]
               }
            },
            {
               "point": "nabone.container.apps",
               "config": {
                  "applicationId": "app.wdsNotesWizard.nextAccount",
                  "title": "WDS Notes Wizard",
                  "contentDirective": "notes-wizard",
                  "maxInstances": 10,
                  "routes": [
                     "/wdsNotesWizard/nextAccount"
                  ],
                  "context": {
                     "callDetails": "app.config.data.callDetails",
                     "instanceId": "app.instanceId"
                  }
               }
            },
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "app.wds.notesWizard.schema": "nabone-wds-notes-wizard/components/app.wdsNotesWizard/resources/forms/FormSchema.jsn",
                     "app.wds.notesWizard.layout": "nabone-wds-notes-wizard/components/app.wdsNotesWizard/resources/forms/FormLayout.jsn",
                     "app.wds.notesWizard.refData": "nabone-wds-notes-wizard/components/app.wdsNotesWizard/resources/forms/RefData.jsn"
                  }
               }
            },
            {
               "point": "nabone.feedback.topic",
               "config": {
                  "title": "WDS Notes Wizard"
               }
            }
         ]
      },
      {
         "id": "nabone.platform.packageDigest",
         "name": "nabONE package and component digest",
         "plugins": [
            {
               "point": "nabone.env.properties",
               "config": {
                  "default": {
                     "nabone.platform.packageDigest": {
                        "@nabone/eval": {
                           "name": "@nabone/eval",
                           "version": "2.1.1",
                           "components": [
                              "nabone.eval"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-bootstrap": {
                           "name": "@nabone/ext-bootstrap",
                           "version": "1.0.0",
                           "components": [
                              "lib.bootstrap"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-efc-sdk": {
                           "name": "@nabone/ext-efc-sdk",
                           "version": "1.0.1",
                           "components": [
                              "lib.efcSdk"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-efcv1-renderer": {
                           "name": "@nabone/ext-efcv1-renderer",
                           "version": "1.0.1",
                           "components": [
                              "lib.efcv1Renderer",
                              "lib.uglifyJsBrowser"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-highlightjs": {
                           "name": "@nabone/ext-highlightjs",
                           "version": "1.0.0",
                           "components": [
                              "lib.highlightjs"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-moment": {
                           "name": "@nabone/ext-moment",
                           "version": "1.0.1",
                           "components": [
                              "lib.moment"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-ng-bootstrap": {
                           "name": "@nabone/ext-ng-bootstrap",
                           "version": "1.0.0",
                           "components": [
                              "lib.ngBootstrap"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-pdf-jsviewer": {
                           "name": "@nabone/ext-pdf-jsviewer",
                           "version": "1.0.0",
                           "components": [
                              "lib.viewer.pdfjs"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-pdf-make": {
                           "name": "@nabone/ext-pdf-make",
                           "version": "1.0.0",
                           "components": [
                              "lib.pdfMake"
                           ],
                           "dependencies": []
                        },
                        "@nabone/layout": {
                           "name": "@nabone/layout",
                           "version": "3.3.1",
                           "components": [
                              "nabone.layout"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/eval",
                                 "versionSpec": "2.1.1"
                              }
                           ]
                        },
                        "@nabone/ext-nouislider-angular": {
                           "name": "@nabone/ext-nouislider-angular",
                           "version": "1.0.0",
                           "components": [
                              "lib.nouislider-angular"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ui-components": {
                           "name": "@nabone/ui-components",
                           "version": "2.7.0",
                           "components": [
                              "nabone.ui.actionDropdown",
                              "nabone.ui.addressLookup",
                              "nabone.ui.bannerHeader",
                              "nabone.ui.currencyInput",
                              "nabone.ui.dom",
                              "nabone.ui.layoutTransclude",
                              "nabone.ui.modal",
                              "nabone.ui.multiSelect",
                              "nabone.ui.panels",
                              "nabone.ui.slider",
                              "nabone.ui.stepNavigation",
                              "nabone.ui.toggleButtonGroup",
                              "nabone.ui.treeView"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-nouislider-angular",
                                 "versionSpec": "1.0.0"
                              }
                           ]
                        },
                        "@nabone/forms-core": {
                           "name": "@nabone/forms-core",
                           "version": "3.5.0",
                           "components": [
                              "nabone.forms.core"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/eval",
                                 "versionSpec": "2.1.1"
                              },
                              {
                                 "name": "@nabone/ext-ng-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/forms-efc": {
                           "name": "@nabone/forms-efc",
                           "version": "2.2.1",
                           "components": [
                              "nabone.forms.efc"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/eval",
                                 "versionSpec": "2.1.1"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.1.2"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/markdown": {
                           "name": "@nabone/markdown",
                           "version": "1.1.0",
                           "components": [
                              "lib.markdownit",
                              "nabone.markdown"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-highlightjs",
                                 "versionSpec": "1.0.0"
                              }
                           ]
                        },
                        "@nabone/platform-plugins": {
                           "name": "@nabone/platform-plugins",
                           "version": "2.1.1",
                           "components": [
                              "one.platform.menu"
                           ],
                           "dependencies": []
                        },
                        "@nabone/rules": {
                           "name": "@nabone/rules",
                           "version": "2.2.0",
                           "components": [
                              "nabone.rules"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/eval",
                                 "versionSpec": "2.1.0"
                              }
                           ]
                        },
                        "@nabone/watchers-toggle": {
                           "name": "@nabone/watchers-toggle",
                           "version": "2.2.1",
                           "components": [
                              "nabone.watchersToggle"
                           ],
                           "dependencies": []
                        },
                        "@nabone/platform": {
                           "name": "@nabone/platform",
                           "version": "23.2.0",
                           "components": [
                              "api.directory",
                              "api.eesg",
                              "api.eesg.ui",
                              "api.efc1",
                              "api.efc1.ui",
                              "api.efc2",
                              "api.efc2.ui",
                              "api.ela",
                              "api.ela.ui",
                              "api.gateway",
                              "api.gateway.statusProvider",
                              "api.nabone",
                              "api.nabone.ui",
                              "api.resource",
                              "api.splunk",
                              "api.user",
                              "app.devtoolbox",
                              "app.documentation",
                              "app.library",
                              "app.serviceStatus",
                              "nabone.alerts",
                              "nabone.analytics.browserConsole",
                              "nabone.analytics.splunk",
                              "nabone.analytics",
                              "nabone.api.test",
                              "nabone.api",
                              "nabone.apps",
                              "nabone.cache",
                              "nabone.componentGroup",
                              "nabone.components",
                              "nabone.components.lazy",
                              "nabone.documentation",
                              "nabone.efcv1.complexExpr.complexExprProvider",
                              "nabone.efcv1.renderer",
                              "nabone.efcv2",
                              "nabone.env",
                              "nabone.eval.docs",
                              "nabone.feedback",
                              "nabone.form.catalogue.service",
                              "nabone.form.view",
                              "nabone.forms",
                              "nabone.layout.docs",
                              "nabone.notifications",
                              "nabone.onlineStatus",
                              "nabone.pdf2",
                              "nabone.pkg",
                              "nabone.platform",
                              "nabone.polyfills",
                              "nabone.preferences",
                              "nabone.rule",
                              "nabone.schema",
                              "nabone.spinner",
                              "nabone.storage",
                              "nabone.ui.components.overrides",
                              "nabone.user",
                              "nabone.utils",
                              "nabone.watchersToggle.docs"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/eval",
                                 "versionSpec": "2.1.1"
                              },
                              {
                                 "name": "@nabone/ext-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-efc-sdk",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-efcv1-renderer",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-highlightjs",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-moment",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-ng-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-pdf-jsviewer",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-pdf-make",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/forms-efc",
                                 "versionSpec": "2.2.1"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/markdown",
                                 "versionSpec": "1.1.0"
                              },
                              {
                                 "name": "@nabone/platform-plugins",
                                 "versionSpec": "2.1.1"
                              },
                              {
                                 "name": "@nabone/rules",
                                 "versionSpec": "2.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              },
                              {
                                 "name": "@nabone/watchers-toggle",
                                 "versionSpec": "2.2.1"
                              }
                           ]
                        },
                        "@nabone/admin": {
                           "name": "@nabone/admin",
                           "version": "1.0.3",
                           "components": [
                              "app.admin.platform",
                              "app.admin"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/api-refdata": {
                           "name": "@nabone/api-refdata",
                           "version": "1.2.4",
                           "components": [
                              "api.referenceData.utils",
                              "api.referenceData",
                              "api.referenceData.ui"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/api-customer": {
                           "name": "@nabone/api-customer",
                           "version": "1.0.3",
                           "components": [
                              "api.customer.accounts",
                              "api.customer.accounts.ui",
                              "api.customer.cards",
                              "api.customer.merchants",
                              "api.customer.merchants.ui",
                              "api.customer.paymentAlias",
                              "api.customer.profile",
                              "api.customer.profile.ui",
                              "api.customer.search",
                              "api.customer",
                              "api.customer.ui"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/api-dbox": {
                           "name": "@nabone/api-dbox",
                           "version": "1.4.0",
                           "components": [
                              "api.dbox.onboarding",
                              "api.onboarding",
                              "api.onboarding.ui"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/api-qas": {
                           "name": "@nabone/api-qas",
                           "version": "1.0.3",
                           "components": [
                              "api.ifti",
                              "api.ifti.ui",
                              "api.qas",
                              "api.qas.ui"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/onboarding-refdata": {
                           "name": "@nabone/onboarding-refdata",
                           "version": "1.2.2",
                           "components": [
                              "app.onboarding.refData"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/customer-onboarding": {
                           "name": "@nabone/customer-onboarding",
                           "version": "2.1.0",
                           "components": [
                              "app.customer.onboarding.individual",
                              "app.customer.onboarding.organisation",
                              "app.customer.onboarding"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-customer",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-qas",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/onboarding-refdata",
                                 "versionSpec": "1.2.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/ext-ng-a11y": {
                           "name": "@nabone/ext-ng-a11y",
                           "version": "1.0.0",
                           "components": [
                              "lib.ngA11y"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-ng-table": {
                           "name": "@nabone/ext-ng-table",
                           "version": "1.0.0",
                           "components": [
                              "lib.ngTable"
                           ],
                           "dependencies": []
                        },
                        "@nabone/form-catalogue": {
                           "name": "@nabone/form-catalogue",
                           "version": "20.3.4",
                           "components": [
                              "nabone.efcv1.eqf",
                              "nabone.efcv1.mob",
                              "nabone.efcv1.override.businessPaymentsCard",
                              "nabone.efcv1.override.commcards",
                              "nabone.efcv1.override.dn",
                              "nabone.efcv1.override.nco",
                              "nabone.efcv1.override.rob",
                              "nabone.efcv2.form.flexi-card",
                              "nabone.efcv2.form.ntr-merchant-amendments",
                              "nabone.efcv2.form.plc",
                              "nabone.efcv2.form.rtcForm",
                              "nabone.efcv2.form.spg",
                              "nabone.efcv2.form.tdForm",
                              "nabone.efcv2.form.visaSwitchForm",
                              "nabone.form.catalogue.precacher",
                              "nabone.form.catalogue"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-ng-table",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/toggle": {
                           "name": "@nabone/toggle",
                           "version": "1.0.2",
                           "components": [
                              "nabone.toggle"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/apps": {
                           "name": "@nabone/apps",
                           "version": "24.3.1",
                           "components": [
                              "api.apip",
                              "api.apip.ui",
                              "api.cse",
                              "api.cse.ui",
                              "api.daf.search",
                              "api.daf.search.ui",
                              "api.document",
                              "api.document.ui",
                              "api.knowme",
                              "api.och",
                              "api.och.ui",
                              "api.oec.serviceRequest",
                              "api.offer",
                              "api.offer.ui",
                              "api.rns",
                              "api.rns.ui",
                              "api.salesforce",
                              "api.sme",
                              "api.sme.ui",
                              "api.superannuation",
                              "api.superannuation.ui",
                              "api.termsAndConditions",
                              "api.termsAndConditions.ui",
                              "app.componentGroupHeader",
                              "app.customer.accountIntegration",
                              "app.customer.accounts",
                              "app.customer.activities",
                              "app.customer.authorisations",
                              "app.customer.bankers",
                              "app.customer.cards",
                              "app.customer.history",
                              "app.customer.details",
                              "app.customer.eCRS",
                              "app.customer.forms",
                              "app.customer.groups",
                              "app.customer.insights",
                              "app.customer.merchants",
                              "app.customer.occupationAndTaxStatus",
                              "app.customer.overview",
                              "app.customer.paymentAlias.access",
                              "app.customer.paymentAlias.access.externalSearch",
                              "app.customer.paymentAlias.access.searchByOrgId",
                              "app.customer.paymentAlias.access.updateStatus",
                              "app.customer.paymentAlias.otp",
                              "app.customer.paymentAlias",
                              "app.customer.productsAndServices",
                              "app.customer.profile",
                              "app.customer.relationships",
                              "app.customer.salesforce",
                              "app.customer.search.paymentAlias",
                              "app.customer.paymentAlias.search.externalSearch",
                              "app.customer.search.prospectCustomers",
                              "app.customer.search",
                              "app.customer.tempCustomer",
                              "app.customer.wealth",
                              "app.customer",
                              "app.external.nab",
                              "app.group.borrowing",
                              "app.group.members",
                              "app.group.mrl",
                              "app.group.overview",
                              "app.group",
                              "app.knowme",
                              "nabone.efcv2.form.aml",
                              "nabone.efcv2.form.s2c",
                              "nabone.efcv2.form.visaCrDrReplacement",
                              "nabone.efcv2.override.nef",
                              "nabone.form.catalogue.override.aml"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-customer",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-qas",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/customer-onboarding",
                                 "versionSpec": "2.1.0"
                              },
                              {
                                 "name": "@nabone/ext-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-ng-a11y",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-pdf-make",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/form-catalogue",
                                 "versionSpec": "20.3.4"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/onboarding-refdata",
                                 "versionSpec": "1.2.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/toggle",
                                 "versionSpec": "1.0.2"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/arrangement-calculator": {
                           "name": "@nabone/arrangement-calculator",
                           "version": "1.0.1",
                           "components": [
                              "api.arrangement",
                              "app.arrangementCalculator"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.2.3"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "21.1.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.3.1"
                              }
                           ]
                        },
                        "@nabone/theme-nabui": {
                           "name": "@nabone/theme-nabui",
                           "version": "3.6.4",
                           "components": [
                              "nabone.theme.nabui"
                           ],
                           "dependencies": []
                        },
                        "@nabone/expenses": {
                           "name": "@nabone/expenses",
                           "version": "1.1.1",
                           "components": [
                              "nabone.expenses"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/theme-nabui",
                                 "versionSpec": "3.6.4"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/banker-tools": {
                           "name": "@nabone/banker-tools",
                           "version": "20.8.1",
                           "components": [
                              "app.customer.bankerTools",
                              "app.customer.bankerTools.searchExtensions.importHomeLending"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-customer",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/expenses",
                                 "versionSpec": "1.1.1"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/theme-nabui",
                                 "versionSpec": "3.6.4"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/blp": {
                           "name": "@nabone/blp",
                           "version": "1.0.1",
                           "components": [
                              "app.blp"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-ng-a11y",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-pdf-make",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "^22.0.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.4.0"
                              }
                           ]
                        },
                        "@nabone/kyc": {
                           "name": "@nabone/kyc",
                           "version": "21.5.4",
                           "components": [
                              "api.kyc",
                              "api.kyc.ui",
                              "app.kyc.indicator",
                              "app.kyc",
                              "app.library.kyc"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/customer-onboarding",
                                 "versionSpec": "2.1.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/toggle",
                                 "versionSpec": "1.0.2"
                              }
                           ]
                        },
                        "@nabone/business-lookup": {
                           "name": "@nabone/business-lookup",
                           "version": "21.4.5",
                           "components": [
                              "api.veda",
                              "api.veda.ui",
                              "app.customer.businessLookup.existing",
                              "app.customer.businessLookup"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/kyc",
                                 "versionSpec": "21.5.4"
                              },
                              {
                                 "name": "@nabone/onboarding-refdata",
                                 "versionSpec": "1.2.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/component-viewer": {
                           "name": "@nabone/component-viewer",
                           "version": "1.0.1",
                           "components": [
                              "app.componentoverview"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.2.3"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.1.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "21.0.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.4.0"
                              }
                           ]
                        },
                        "@nabone/container": {
                           "name": "@nabone/container",
                           "version": "1.4.4",
                           "components": [
                              "nabone.container"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/platform-plugins",
                                 "versionSpec": "2.1.1"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              },
                              {
                                 "name": "@nabone/watchers-toggle",
                                 "versionSpec": "2.2.1"
                              }
                           ]
                        },
                        "@nabone/daf-user-admin": {
                           "name": "@nabone/daf-user-admin",
                           "version": "1.0.3",
                           "components": [
                              "api.daf",
                              "app.daf.tenant.jbwere",
                              "app.daf"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.2.3"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "20.1.1"
                              }
                           ]
                        },
                        "@nabone/dbox": {
                           "name": "@nabone/dbox",
                           "version": "2.0.0",
                           "components": [
                              "app.customer.dbox.corporateStructure",
                              "app.customer.dbox.onboarding.individual",
                              "app.customer.dbox.onboarding.organisation",
                              "app.customer.dbox.onboarding",
                              "app.customer.dbox.trust",
                              "app.customer.dbox.validations",
                              "app.customer.dbox.warnings",
                              "app.customer.dbox"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-customer",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-dbox",
                                 "versionSpec": "1.4.0"
                              },
                              {
                                 "name": "@nabone/api-qas",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/business-lookup",
                                 "versionSpec": "21.4.5"
                              },
                              {
                                 "name": "@nabone/customer-onboarding",
                                 "versionSpec": "2.1.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/kyc",
                                 "versionSpec": "21.5.4"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/onboarding-refdata",
                                 "versionSpec": "1.2.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/dbox-launcher": {
                           "name": "@nabone/dbox-launcher",
                           "version": "1.0.7",
                           "components": [
                              "app.customer.dbox.launcher",
                              "app.customer.search.onboarding"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-dbox",
                                 "versionSpec": "1.4.0"
                              },
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/dbox-legacy": {
                           "name": "@nabone/dbox-legacy",
                           "version": "21.5.5",
                           "components": [
                              "app.customer.dbox.legacy",
                              "app.customer.onboarding.individual.legacy",
                              "app.customer.onboarding.legacy",
                              "app.customer.onboarding.organisation.legacy"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-dbox",
                                 "versionSpec": "1.4.0"
                              },
                              {
                                 "name": "@nabone/api-qas",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/business-lookup",
                                 "versionSpec": "21.4.5"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/kyc",
                                 "versionSpec": "21.5.4"
                              },
                              {
                                 "name": "@nabone/onboarding-refdata",
                                 "versionSpec": "1.2.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/ext-angular-filter": {
                           "name": "@nabone/ext-angular-filter",
                           "version": "1.0.0",
                           "components": [
                              "lib.angular.filter"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-jspdf": {
                           "name": "@nabone/ext-jspdf",
                           "version": "1.0.0",
                           "components": [
                              "lib.jspdf"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-stringify": {
                           "name": "@nabone/ext-stringify",
                           "version": "1.0.0",
                           "components": [
                              "lib.stringifyStable"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ela": {
                           "name": "@nabone/ela",
                           "version": "20.8.0",
                           "components": [
                              "app.ela.checklist",
                              "app.ela.comments",
                              "app.ela.customerPlayback.pdf",
                              "app.ela.customerPlayback",
                              "app.ela.debtServicing",
                              "app.ela.documents",
                              "app.ela.fulfilment.pdf",
                              "app.ela.fulfilment",
                              "app.ela.group",
                              "app.ela.livingExpenses",
                              "app.ela.loanRequest",
                              "app.ela.options.mrl",
                              "app.ela.options.msbca",
                              "app.ela.review",
                              "app.ela.settlements",
                              "app.ela",
                              "app.ela.businessSegment.business",
                              "app.ela.businessSegment.bdsb",
                              "app.ela.businessSegment.health",
                              "app.ela.businessSegment.private",
                              "app.ela.businessSegment.agri",
                              "nabone.efcv2.renderer",
                              "nabone.pdf"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/ext-angular-filter",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-jspdf",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-ng-table",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-stringify",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/forms-efc",
                                 "versionSpec": "2.2.1"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/eval-explorer": {
                           "name": "@nabone/eval-explorer",
                           "version": "1.0.1",
                           "components": [
                              "nabone.eval.explorer"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "21.0.0"
                              }
                           ]
                        },
                        "@nabone/examples": {
                           "name": "@nabone/examples",
                           "version": "1.2.0",
                           "components": [
                              "app.examples.alerts",
                              "app.examples.applications",
                              "app.examples.componentGroup",
                              "app.examples.currencyInput",
                              "app.examples.hellowidget.widget1",
                              "app.examples.hellowidget",
                              "app.examples.modals",
                              "app.examples.multiselect",
                              "app.examples.notifications",
                              "app.examples.onePagination",
                              "app.examples.onePhoneNumber",
                              "app.examples.oneTable",
                              "app.examples.onlineStatus",
                              "app.examples.panel",
                              "app.examples.pdf",
                              "app.examples.submenu",
                              "app.examples.submenu1",
                              "app.examples.toggleButtons",
                              "app.examples.ui",
                              "app.examples"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/ext-highcharts": {
                           "name": "@nabone/ext-highcharts",
                           "version": "1.0.0",
                           "components": [
                              "lib.highcharts"
                           ],
                           "dependencies": []
                        },
                        "@nabone/ext-ng-uiselect": {
                           "name": "@nabone/ext-ng-uiselect",
                           "version": "1.0.0",
                           "components": [
                              "lib.ngUiSelect"
                           ],
                           "dependencies": []
                        },
                        "@nabone/farm-management-deposit": {
                           "name": "@nabone/farm-management-deposit",
                           "version": "1.1.2",
                           "components": [
                              "api.fmd",
                              "app.fmd.pdf",
                              "app.fmd"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/help": {
                           "name": "@nabone/help",
                           "version": "1.2.2",
                           "components": [
                              "nabone.help"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/container",
                                 "versionSpec": "1.4.4"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/hosted-apps": {
                           "name": "@nabone/hosted-apps",
                           "version": "1.1.0",
                           "components": [
                              "app.coap.externalLink"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/home": {
                           "name": "@nabone/home",
                           "version": "1.7.2",
                           "components": [
                              "app.nabonehome.inflightApps",
                              "app.nabonehome"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/forms-efc",
                                 "versionSpec": "2.2.1"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/libs": {
                           "name": "@nabone/libs",
                           "version": "4.0.0",
                           "components": [
                              "lib.ngAria",
                              "lib.ngCookies",
                              "lib.ngResource",
                              "lib.ngRoute",
                              "lib.ngSanitize",
                              "lib.preStartup"
                           ],
                           "dependencies": []
                        },
                        "@nabone/host": {
                           "name": "@nabone/host",
                           "version": "2.3.3",
                           "components": [
                              "nabone.host"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/libs",
                                 "versionSpec": "4.0.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/theme-nabui",
                                 "versionSpec": "3.6.4"
                              }
                           ]
                        },
                        "@nabone/ipt": {
                           "name": "@nabone/ipt",
                           "version": "21.6.0",
                           "components": [
                              "api.pricing.ipt.refData",
                              "api.pricing.ipt.refData.ui",
                              "api.pricing.ipt",
                              "api.pricing.ipt.ui",
                              "app.ipt",
                              "app.pricing.ipt.escalations",
                              "app.pricing.ipt.history.banker",
                              "app.pricing.ipt"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-customer",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/theme-nabui",
                                 "versionSpec": "3.6.4"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/nps": {
                           "name": "@nabone/nps",
                           "version": "1.1.1",
                           "components": [
                              "api.nps",
                              "api.nps.ui",
                              "app.admin.nps",
                              "app.nps.business",
                              "app.nps.callCentre",
                              "app.nps.cob",
                              "app.nps.digital",
                              "app.nps.episode",
                              "app.nps.home",
                              "app.nps.fcs",
                              "app.nps.msb",
                              "app.nps.wealthdigital",
                              "app.nps.nabPrivate",
                              "app.nps.operations",
                              "app.nps.retail",
                              "app.nps"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-bootstrap",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-highcharts",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/ext-ng-table",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "21.0.0"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.4.0"
                              }
                           ]
                        },
                        "@nabone/onboarding-individual": {
                           "name": "@nabone/onboarding-individual",
                           "version": "1.2.4",
                           "components": [
                              "app.customer.individualOnboarding"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/api-qas",
                                 "versionSpec": "1.0.3"
                              },
                              {
                                 "name": "@nabone/api-refdata",
                                 "versionSpec": "1.2.4"
                              },
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/customer-onboarding",
                                 "versionSpec": "2.1.0"
                              },
                              {
                                 "name": "@nabone/kyc",
                                 "versionSpec": "21.5.4"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/onboarding-refdata",
                                 "versionSpec": "1.2.2"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/pdt": {
                           "name": "@nabone/pdt",
                           "version": "1.0.3",
                           "components": [
                              "api.pdt",
                              "app.admin.pricingDiscoveryTool",
                              "app.pricingDiscoveryTool"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/ext-ng-uiselect",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              }
                           ]
                        },
                        "@nabone/schema-explorer": {
                           "name": "@nabone/schema-explorer",
                           "version": "1.0.1",
                           "components": [
                              "nabone.schema.explorer"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "21.0.0"
                              }
                           ]
                        },
                        "@nabone/sls": {
                           "name": "@nabone/sls",
                           "version": "1.3.2",
                           "components": [
                              "api.lendingSubmission",
                              "app.group.borrowing.sls",
                              "app.lendingSubmission.covenantsConditions",
                              "app.lendingSubmission.internalNotes",
                              "app.lendingSubmission.questionsAnswers",
                              "app.lendingSubmission.structure"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.3.1"
                              },
                              {
                                 "name": "@nabone/eval",
                                 "versionSpec": "2.1.1"
                              },
                              {
                                 "name": "@nabone/ext-angular-filter",
                                 "versionSpec": "1.0.0"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/layout",
                                 "versionSpec": "3.3.1"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.2.0"
                              },
                              {
                                 "name": "@nabone/theme-nabui",
                                 "versionSpec": "3.6.4"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.7.0"
                              }
                           ]
                        },
                        "@nabone/term-deposit": {
                           "name": "@nabone/term-deposit",
                           "version": "20.3.6",
                           "components": [
                              "api.termDeposit",
                              "app.termDeposit",
                              "app.termDeposit.nabone.container"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/apps",
                                 "versionSpec": "24.2.3"
                              },
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.5.0"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "23.0.3"
                              },
                              {
                                 "name": "@nabone/ui-components",
                                 "versionSpec": "2.6.0"
                              }
                           ]
                        },
                        "@nabone/wds-notes-wizard": {
                           "name": "@nabone/wds-notes-wizard",
                           "version": "20.0.3",
                           "components": [
                              "app.wdsNotesWizard"
                           ],
                           "dependencies": [
                              {
                                 "name": "@nabone/forms-core",
                                 "versionSpec": "3.2.3"
                              },
                              {
                                 "name": "@nabone/platform",
                                 "versionSpec": "21.0.0"
                              }
                           ]
                        }
                     }
                  }
               }
            }
         ]
      },
      {
         "id": "nabone.platform._combined",
         "name": "Buildtime js deflation of nabone.platform._combined",
         "modules": [
            {
               "files": [
                  "nabone-platform-combined/nabone.platform._combined.min.js?1547009616366",
                  "nabone-platform-combined/nabone.platform._combined.css?1547009616366"
               ]
            }
         ]
      }
   ]
}
